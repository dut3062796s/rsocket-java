Started [cpu] profiling
--- Execution profile ---
Total samples:         2675
Non-Java:              152 (5.68%)
Unknown (native):      43 (1.61%)
Unknown (Java):        276 (10.32%)

Frame buffer usage:    2.0454%

--- 770000000 ns (2.88%), 77 samples
  [ 0] reactor.core.publisher.MonoJust.subscribe
  [ 1] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 2] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 3] reactor.core.publisher.Mono.subscribe
  [ 4] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 5] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [ 6] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 7] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [ 8] reactor.core.publisher.FluxRange.subscribe
  [ 9] reactor.core.publisher.FluxFlatMap.subscribe
  [10] reactor.core.publisher.Flux.subscribe
  [11] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [12] reactor.core.publisher.Operators$MonoSubscriber.complete
  [13] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [14] reactor.core.publisher.Operators$MonoSubscriber.complete
  [15] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [16] reactor.core.publisher.MonoIgnoreThen.subscribe
  [17] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.Operators$ScalarSubscription.request
  [19] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [20] reactor.core.publisher.MonoJust.subscribe
  [21] reactor.core.publisher.MonoDefer.subscribe
  [22] reactor.core.publisher.MonoFlatMap.subscribe
  [23] reactor.core.publisher.MonoFlatMapMany.subscribe
  [24] reactor.core.publisher.FluxPeek.subscribe
  [25] reactor.core.publisher.FluxPeek.subscribe
  [26] reactor.core.publisher.Flux.blockLast
  [27] io.rsocket.transport.local.LocalPingPong.main

--- 570000000 ns (2.13%), 57 samples
  [ 0] org.HdrHistogram.AbstractHistogram.updateMinNonZeroValue
  [ 1] org.HdrHistogram.AbstractHistogram.updateMinAndMax
  [ 2] org.HdrHistogram.AbstractHistogram.recordSingleValue
  [ 3] org.HdrHistogram.AbstractHistogram.recordValue
  [ 4] org.HdrHistogram.Recorder.recordValue
  [ 5] io.rsocket.test.PingClient.lambda$null$1
  [ 6] io.rsocket.test.PingClient$$Lambda$64.591391158.accept
  [ 7] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 8] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 9] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [10] reactor.core.publisher.Operators$MonoSubscriber.complete
  [11] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [12] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [13] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [14] reactor.core.publisher.Operators$MonoSubscriber.complete
  [15] reactor.core.publisher.MonoProcessor.subscribe
  [16] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [17] reactor.core.publisher.MonoPeek.subscribe
  [18] reactor.core.publisher.MonoDoFinally.subscribe
  [19] reactor.core.publisher.MonoDefer.subscribe
  [20] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [21] reactor.core.publisher.MonoIgnoreThen.subscribe
  [22] reactor.core.publisher.MonoPeekFuseable.subscribe
  [23] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [26] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [27] reactor.core.publisher.FluxRange$RangeSubscription.request
  [28] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [29] reactor.core.publisher.FluxRange.subscribe
  [30] reactor.core.publisher.FluxFlatMap.subscribe
  [31] reactor.core.publisher.Flux.subscribe
  [32] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [33] reactor.core.publisher.Operators$MonoSubscriber.complete
  [34] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [35] reactor.core.publisher.Operators$MonoSubscriber.complete
  [36] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [37] reactor.core.publisher.MonoIgnoreThen.subscribe
  [38] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [39] reactor.core.publisher.Operators$ScalarSubscription.request
  [40] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [41] reactor.core.publisher.MonoJust.subscribe
  [42] reactor.core.publisher.MonoDefer.subscribe
  [43] reactor.core.publisher.MonoFlatMap.subscribe
  [44] reactor.core.publisher.MonoFlatMapMany.subscribe
  [45] reactor.core.publisher.FluxPeek.subscribe
  [46] reactor.core.publisher.FluxPeek.subscribe
  [47] reactor.core.publisher.Flux.blockLast
  [48] io.rsocket.transport.local.LocalPingPong.main

--- 430000000 ns (1.61%), 43 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.<init>
  [ 3] io.netty.util.ResourceLeakDetector$Record.<init>
  [ 4] io.netty.util.ResourceLeakDetector$DefaultResourceLeak.<init>
  [ 5] io.netty.util.ResourceLeakDetector.track0
  [ 6] io.netty.util.ResourceLeakDetector.track
  [ 7] io.netty.buffer.AbstractByteBufAllocator.toLeakAwareBuffer
  [ 8] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 9] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [10] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [11] io.netty.buffer.AbstractByteBufAllocator.buffer
  [12] io.rsocket.frame.FrameHeaderFlyweight.encode
  [13] io.rsocket.frame.RequestFlyweight.encode
  [14] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [15] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [16] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [17] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [19] reactor.core.publisher.Operators$ScalarSubscription.request
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [22] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [23] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [24] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [26] reactor.core.publisher.MonoJust.subscribe
  [27] reactor.core.publisher.MonoPeekFuseable.subscribe
  [28] reactor.core.publisher.MonoMapFuseable.subscribe
  [29] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [30] reactor.core.publisher.MonoDoFinally.subscribe
  [31] reactor.core.publisher.Mono.subscribe
  [32] reactor.core.publisher.Mono.subscribeWith
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] io.rsocket.RSocketServer.handleRequestResponse
  [37] io.rsocket.RSocketServer.handleFrame
  [38] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [39] reactor.core.publisher.LambdaSubscriber.onNext
  [40] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [41] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [42] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [44] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [45] reactor.core.publisher.UnicastProcessor.drainRegular
  [46] reactor.core.publisher.UnicastProcessor.drain
  [47] reactor.core.publisher.UnicastProcessor.onNext
  [48] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [49] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [50] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [51] io.rsocket.internal.UnboundedProcessor.drainRegular
  [52] io.rsocket.internal.UnboundedProcessor.drain
  [53] io.rsocket.internal.UnboundedProcessor.onNext
  [54] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [55] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [56] reactor.core.publisher.MonoDefer.subscribe
  [57] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [58] reactor.core.publisher.MonoIgnoreThen.subscribe
  [59] reactor.core.publisher.MonoPeekFuseable.subscribe
  [60] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [61] reactor.core.publisher.Mono.subscribe
  [62] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [63] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [64] reactor.core.publisher.FluxRange$RangeSubscription.request
  [65] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [66] reactor.core.publisher.FluxRange.subscribe
  [67] reactor.core.publisher.FluxFlatMap.subscribe
  [68] reactor.core.publisher.Flux.subscribe
  [69] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [70] reactor.core.publisher.Operators$MonoSubscriber.complete
  [71] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [72] reactor.core.publisher.Operators$MonoSubscriber.complete
  [73] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [74] reactor.core.publisher.MonoIgnoreThen.subscribe
  [75] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [76] reactor.core.publisher.Operators$ScalarSubscription.request
  [77] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [78] reactor.core.publisher.MonoJust.subscribe
  [79] reactor.core.publisher.MonoDefer.subscribe
  [80] reactor.core.publisher.MonoFlatMap.subscribe
  [81] reactor.core.publisher.MonoFlatMapMany.subscribe
  [82] reactor.core.publisher.FluxPeek.subscribe
  [83] reactor.core.publisher.FluxPeek.subscribe
  [84] reactor.core.publisher.Flux.blockLast
  [85] io.rsocket.transport.local.LocalPingPong.main

--- 400000000 ns (1.50%), 40 samples
  [ 0] io.rsocket.internal.UnboundedProcessor.drainRegular
  [ 1] io.rsocket.internal.UnboundedProcessor.drain
  [ 2] io.rsocket.internal.UnboundedProcessor.onNext
  [ 3] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 4] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 5] reactor.core.publisher.MonoDefer.subscribe
  [ 6] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 7] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 8] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 9] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [10] reactor.core.publisher.Mono.subscribe
  [11] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [12] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [13] reactor.core.publisher.FluxRange$RangeSubscription.request
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [15] reactor.core.publisher.FluxRange.subscribe
  [16] reactor.core.publisher.FluxFlatMap.subscribe
  [17] reactor.core.publisher.Flux.subscribe
  [18] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [19] reactor.core.publisher.Operators$MonoSubscriber.complete
  [20] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [21] reactor.core.publisher.Operators$MonoSubscriber.complete
  [22] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [23] reactor.core.publisher.MonoIgnoreThen.subscribe
  [24] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [25] reactor.core.publisher.Operators$ScalarSubscription.request
  [26] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [27] reactor.core.publisher.MonoJust.subscribe
  [28] reactor.core.publisher.MonoDefer.subscribe
  [29] reactor.core.publisher.MonoFlatMap.subscribe
  [30] reactor.core.publisher.MonoFlatMapMany.subscribe
  [31] reactor.core.publisher.FluxPeek.subscribe
  [32] reactor.core.publisher.FluxPeek.subscribe
  [33] reactor.core.publisher.Flux.blockLast
  [34] io.rsocket.transport.local.LocalPingPong.main

--- 400000000 ns (1.50%), 40 samples
  [ 0] reactor.core.publisher.Mono.subscribe
  [ 1] reactor.core.publisher.Mono.subscribeWith
  [ 2] reactor.core.publisher.Mono.subscribe
  [ 3] reactor.core.publisher.Mono.subscribe
  [ 4] reactor.core.publisher.Mono.subscribe
  [ 5] io.rsocket.RSocketServer.handleRequestResponse
  [ 6] io.rsocket.RSocketServer.handleFrame
  [ 7] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 8] reactor.core.publisher.LambdaSubscriber.onNext
  [ 9] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [13] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [14] reactor.core.publisher.UnicastProcessor.drainRegular
  [15] reactor.core.publisher.UnicastProcessor.drain
  [16] reactor.core.publisher.UnicastProcessor.onNext
  [17] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [18] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [19] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [20] io.rsocket.internal.UnboundedProcessor.drainRegular
  [21] io.rsocket.internal.UnboundedProcessor.drain
  [22] io.rsocket.internal.UnboundedProcessor.onNext
  [23] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [24] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [25] reactor.core.publisher.MonoDefer.subscribe
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoPeekFuseable.subscribe
  [29] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [30] reactor.core.publisher.Mono.subscribe
  [31] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [32] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [33] reactor.core.publisher.FluxRange$RangeSubscription.request
  [34] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [35] reactor.core.publisher.FluxRange.subscribe
  [36] reactor.core.publisher.FluxFlatMap.subscribe
  [37] reactor.core.publisher.Flux.subscribe
  [38] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [39] reactor.core.publisher.Operators$MonoSubscriber.complete
  [40] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [41] reactor.core.publisher.Operators$MonoSubscriber.complete
  [42] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [43] reactor.core.publisher.MonoIgnoreThen.subscribe
  [44] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [45] reactor.core.publisher.Operators$ScalarSubscription.request
  [46] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [47] reactor.core.publisher.MonoJust.subscribe
  [48] reactor.core.publisher.MonoDefer.subscribe
  [49] reactor.core.publisher.MonoFlatMap.subscribe
  [50] reactor.core.publisher.MonoFlatMapMany.subscribe
  [51] reactor.core.publisher.FluxPeek.subscribe
  [52] reactor.core.publisher.FluxPeek.subscribe
  [53] reactor.core.publisher.Flux.blockLast
  [54] io.rsocket.transport.local.LocalPingPong.main

--- 370000000 ns (1.38%), 37 samples
  [ 0] io.netty.buffer.AbstractByteBuf.<init>
  [ 1] io.netty.buffer.AbstractDerivedByteBuf.<init>
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 4] io.netty.buffer.AbstractByteBuf.slice
  [ 5] io.netty.buffer.AbstractByteBuf.slice
  [ 6] io.rsocket.util.ByteBufPayload.sliceData
  [ 7] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 8] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 9] reactor.core.publisher.MonoDefer.subscribe
  [10] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [11] reactor.core.publisher.MonoIgnoreThen.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [19] reactor.core.publisher.FluxRange.subscribe
  [20] reactor.core.publisher.FluxFlatMap.subscribe
  [21] reactor.core.publisher.Flux.subscribe
  [22] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.Operators$ScalarSubscription.request
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [31] reactor.core.publisher.MonoJust.subscribe
  [32] reactor.core.publisher.MonoDefer.subscribe
  [33] reactor.core.publisher.MonoFlatMap.subscribe
  [34] reactor.core.publisher.MonoFlatMapMany.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.Flux.blockLast
  [38] io.rsocket.transport.local.LocalPingPong.main

--- 340000000 ns (1.27%), 34 samples
  [ 0] io.rsocket.internal.UnboundedProcessor.drainRegular
  [ 1] io.rsocket.internal.UnboundedProcessor.drain
  [ 2] io.rsocket.internal.UnboundedProcessor.onNext
  [ 3] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [ 4] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [ 5] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [ 6] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 7] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [ 8] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [ 9] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [10] reactor.core.publisher.Operators$ScalarSubscription.request
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [12] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [13] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [14] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [15] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [17] reactor.core.publisher.MonoJust.subscribe
  [18] reactor.core.publisher.MonoPeekFuseable.subscribe
  [19] reactor.core.publisher.MonoMapFuseable.subscribe
  [20] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [21] reactor.core.publisher.MonoDoFinally.subscribe
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.Mono.subscribeWith
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.Mono.subscribe
  [26] reactor.core.publisher.Mono.subscribe
  [27] io.rsocket.RSocketServer.handleRequestResponse
  [28] io.rsocket.RSocketServer.handleFrame
  [29] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [30] reactor.core.publisher.LambdaSubscriber.onNext
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [35] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [36] reactor.core.publisher.UnicastProcessor.drainRegular
  [37] reactor.core.publisher.UnicastProcessor.drain
  [38] reactor.core.publisher.UnicastProcessor.onNext
  [39] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [40] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [41] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [42] io.rsocket.internal.UnboundedProcessor.drainRegular
  [43] io.rsocket.internal.UnboundedProcessor.drain
  [44] io.rsocket.internal.UnboundedProcessor.onNext
  [45] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [46] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [47] reactor.core.publisher.MonoDefer.subscribe
  [48] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [49] reactor.core.publisher.MonoIgnoreThen.subscribe
  [50] reactor.core.publisher.MonoPeekFuseable.subscribe
  [51] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [54] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [55] reactor.core.publisher.FluxRange$RangeSubscription.request
  [56] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [57] reactor.core.publisher.FluxRange.subscribe
  [58] reactor.core.publisher.FluxFlatMap.subscribe
  [59] reactor.core.publisher.Flux.subscribe
  [60] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [61] reactor.core.publisher.Operators$MonoSubscriber.complete
  [62] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [63] reactor.core.publisher.Operators$MonoSubscriber.complete
  [64] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [65] reactor.core.publisher.MonoIgnoreThen.subscribe
  [66] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [67] reactor.core.publisher.Operators$ScalarSubscription.request
  [68] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [69] reactor.core.publisher.MonoJust.subscribe
  [70] reactor.core.publisher.MonoDefer.subscribe
  [71] reactor.core.publisher.MonoFlatMap.subscribe
  [72] reactor.core.publisher.MonoFlatMapMany.subscribe
  [73] reactor.core.publisher.FluxPeek.subscribe
  [74] reactor.core.publisher.FluxPeek.subscribe
  [75] reactor.core.publisher.Flux.blockLast
  [76] io.rsocket.transport.local.LocalPingPong.main

--- 340000000 ns (1.27%), 34 samples
  [ 0] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 1] io.netty.util.internal.InternalThreadLocalMap.get
  [ 2] io.netty.util.concurrent.FastThreadLocal.get
  [ 3] io.netty.buffer.PooledByteBufAllocator.threadCache
  [ 4] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 5] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 6] io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache.initBuf
  [ 7] io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate
  [ 8] io.netty.buffer.PoolThreadCache.allocate
  [ 9] io.netty.buffer.PoolThreadCache.allocateTiny
  [10] io.netty.buffer.PoolArena.allocate
  [11] io.netty.buffer.PoolArena.allocate
  [12] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [13] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [14] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [15] io.netty.buffer.AbstractByteBufAllocator.buffer
  [16] io.rsocket.frame.FrameHeaderFlyweight.encode
  [17] io.rsocket.frame.RequestFlyweight.encode
  [18] io.rsocket.frame.RequestFlyweight.encode
  [19] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [20] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [21] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [22] reactor.core.publisher.MonoDefer.subscribe
  [23] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [24] reactor.core.publisher.MonoIgnoreThen.subscribe
  [25] reactor.core.publisher.MonoPeekFuseable.subscribe
  [26] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [30] reactor.core.publisher.FluxRange$RangeSubscription.request
  [31] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [32] reactor.core.publisher.FluxRange.subscribe
  [33] reactor.core.publisher.FluxFlatMap.subscribe
  [34] reactor.core.publisher.Flux.subscribe
  [35] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [36] reactor.core.publisher.Operators$MonoSubscriber.complete
  [37] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [38] reactor.core.publisher.Operators$MonoSubscriber.complete
  [39] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [40] reactor.core.publisher.MonoIgnoreThen.subscribe
  [41] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [42] reactor.core.publisher.Operators$ScalarSubscription.request
  [43] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [44] reactor.core.publisher.MonoJust.subscribe
  [45] reactor.core.publisher.MonoDefer.subscribe
  [46] reactor.core.publisher.MonoFlatMap.subscribe
  [47] reactor.core.publisher.MonoFlatMapMany.subscribe
  [48] reactor.core.publisher.FluxPeek.subscribe
  [49] reactor.core.publisher.FluxPeek.subscribe
  [50] reactor.core.publisher.Flux.blockLast
  [51] io.rsocket.transport.local.LocalPingPong.main

--- 330000000 ns (1.23%), 33 samples
  [ 0] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 1] io.netty.util.internal.InternalThreadLocalMap.get
  [ 2] io.netty.util.concurrent.FastThreadLocal.get
  [ 3] io.netty.buffer.PooledByteBufAllocator.threadCache
  [ 4] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 5] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 6] io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache.initBuf
  [ 7] io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate
  [ 8] io.netty.buffer.PoolThreadCache.allocate
  [ 9] io.netty.buffer.PoolThreadCache.allocateTiny
  [10] io.netty.buffer.PoolArena.allocate
  [11] io.netty.buffer.PoolArena.allocate
  [12] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [13] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [14] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [15] io.netty.buffer.AbstractByteBufAllocator.buffer
  [16] io.rsocket.frame.FrameHeaderFlyweight.encode
  [17] io.rsocket.frame.RequestFlyweight.encode
  [18] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [19] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [20] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] reactor.core.publisher.Operators$ScalarSubscription.request
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [25] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [26] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [27] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [29] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [30] reactor.core.publisher.MonoJust.subscribe
  [31] reactor.core.publisher.MonoPeekFuseable.subscribe
  [32] reactor.core.publisher.MonoMapFuseable.subscribe
  [33] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [34] reactor.core.publisher.MonoDoFinally.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribeWith
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.Mono.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] io.rsocket.RSocketServer.handleRequestResponse
  [41] io.rsocket.RSocketServer.handleFrame
  [42] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [43] reactor.core.publisher.LambdaSubscriber.onNext
  [44] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [46] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [47] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [48] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [49] reactor.core.publisher.UnicastProcessor.drainRegular
  [50] reactor.core.publisher.UnicastProcessor.drain
  [51] reactor.core.publisher.UnicastProcessor.onNext
  [52] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [53] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [54] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [55] io.rsocket.internal.UnboundedProcessor.drainRegular
  [56] io.rsocket.internal.UnboundedProcessor.drain
  [57] io.rsocket.internal.UnboundedProcessor.onNext
  [58] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [59] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [60] reactor.core.publisher.MonoDefer.subscribe
  [61] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [62] reactor.core.publisher.MonoIgnoreThen.subscribe
  [63] reactor.core.publisher.MonoPeekFuseable.subscribe
  [64] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [65] reactor.core.publisher.Mono.subscribe
  [66] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [67] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [68] reactor.core.publisher.FluxRange$RangeSubscription.request
  [69] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [70] reactor.core.publisher.FluxRange.subscribe
  [71] reactor.core.publisher.FluxFlatMap.subscribe
  [72] reactor.core.publisher.Flux.subscribe
  [73] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [74] reactor.core.publisher.Operators$MonoSubscriber.complete
  [75] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [76] reactor.core.publisher.Operators$MonoSubscriber.complete
  [77] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [78] reactor.core.publisher.MonoIgnoreThen.subscribe
  [79] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [80] reactor.core.publisher.Operators$ScalarSubscription.request
  [81] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [82] reactor.core.publisher.MonoJust.subscribe
  [83] reactor.core.publisher.MonoDefer.subscribe
  [84] reactor.core.publisher.MonoFlatMap.subscribe
  [85] reactor.core.publisher.MonoFlatMapMany.subscribe
  [86] reactor.core.publisher.FluxPeek.subscribe
  [87] reactor.core.publisher.FluxPeek.subscribe
  [88] reactor.core.publisher.Flux.blockLast
  [89] io.rsocket.transport.local.LocalPingPong.main

--- 330000000 ns (1.23%), 33 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 1] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [ 2] reactor.core.publisher.MonoDoFinally.subscribe
  [ 3] reactor.core.publisher.MonoDefer.subscribe
  [ 4] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 5] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 6] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 7] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 8] reactor.core.publisher.Mono.subscribe
  [ 9] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [10] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [11] reactor.core.publisher.FluxRange$RangeSubscription.request
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [13] reactor.core.publisher.FluxRange.subscribe
  [14] reactor.core.publisher.FluxFlatMap.subscribe
  [15] reactor.core.publisher.Flux.subscribe
  [16] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [17] reactor.core.publisher.Operators$MonoSubscriber.complete
  [18] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [19] reactor.core.publisher.Operators$MonoSubscriber.complete
  [20] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [21] reactor.core.publisher.MonoIgnoreThen.subscribe
  [22] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.Operators$ScalarSubscription.request
  [24] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [25] reactor.core.publisher.MonoJust.subscribe
  [26] reactor.core.publisher.MonoDefer.subscribe
  [27] reactor.core.publisher.MonoFlatMap.subscribe
  [28] reactor.core.publisher.MonoFlatMapMany.subscribe
  [29] reactor.core.publisher.FluxPeek.subscribe
  [30] reactor.core.publisher.FluxPeek.subscribe
  [31] reactor.core.publisher.Flux.blockLast
  [32] io.rsocket.transport.local.LocalPingPong.main

--- 330000000 ns (1.23%), 33 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 1] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [ 2] reactor.core.publisher.MonoDoFinally.subscribe
  [ 3] reactor.core.publisher.Mono.subscribe
  [ 4] reactor.core.publisher.Mono.subscribeWith
  [ 5] reactor.core.publisher.Mono.subscribe
  [ 6] reactor.core.publisher.Mono.subscribe
  [ 7] reactor.core.publisher.Mono.subscribe
  [ 8] io.rsocket.RSocketServer.handleRequestResponse
  [ 9] io.rsocket.RSocketServer.handleFrame
  [10] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [11] reactor.core.publisher.LambdaSubscriber.onNext
  [12] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [16] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [17] reactor.core.publisher.UnicastProcessor.drainRegular
  [18] reactor.core.publisher.UnicastProcessor.drain
  [19] reactor.core.publisher.UnicastProcessor.onNext
  [20] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [21] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] io.rsocket.internal.UnboundedProcessor.drainRegular
  [24] io.rsocket.internal.UnboundedProcessor.drain
  [25] io.rsocket.internal.UnboundedProcessor.onNext
  [26] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [27] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [28] reactor.core.publisher.MonoDefer.subscribe
  [29] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [30] reactor.core.publisher.MonoIgnoreThen.subscribe
  [31] reactor.core.publisher.MonoPeekFuseable.subscribe
  [32] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [35] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [36] reactor.core.publisher.FluxRange$RangeSubscription.request
  [37] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.FluxRange.subscribe
  [39] reactor.core.publisher.FluxFlatMap.subscribe
  [40] reactor.core.publisher.Flux.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [42] reactor.core.publisher.Operators$MonoSubscriber.complete
  [43] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [44] reactor.core.publisher.Operators$MonoSubscriber.complete
  [45] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [46] reactor.core.publisher.MonoIgnoreThen.subscribe
  [47] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [48] reactor.core.publisher.Operators$ScalarSubscription.request
  [49] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [50] reactor.core.publisher.MonoJust.subscribe
  [51] reactor.core.publisher.MonoDefer.subscribe
  [52] reactor.core.publisher.MonoFlatMap.subscribe
  [53] reactor.core.publisher.MonoFlatMapMany.subscribe
  [54] reactor.core.publisher.FluxPeek.subscribe
  [55] reactor.core.publisher.FluxPeek.subscribe
  [56] reactor.core.publisher.Flux.blockLast
  [57] io.rsocket.transport.local.LocalPingPong.main

--- 280000000 ns (1.05%), 28 samples
  [ 0] java.lang.Number.<init>
  [ 1] java.lang.Integer.<init>
  [ 2] java.lang.Integer.valueOf
  [ 3] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [ 4] io.rsocket.RSocketServer$$Lambda$65.349420578.accept
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 6] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 7] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 8] reactor.core.publisher.MonoMapFuseable.subscribe
  [ 9] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.Mono.subscribeWith
  [13] reactor.core.publisher.Mono.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] io.rsocket.RSocketServer.handleRequestResponse
  [17] io.rsocket.RSocketServer.handleFrame
  [18] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [19] reactor.core.publisher.LambdaSubscriber.onNext
  [20] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [21] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [23] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [24] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [25] reactor.core.publisher.UnicastProcessor.drainRegular
  [26] reactor.core.publisher.UnicastProcessor.drain
  [27] reactor.core.publisher.UnicastProcessor.onNext
  [28] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [29] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [30] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [31] io.rsocket.internal.UnboundedProcessor.drainRegular
  [32] io.rsocket.internal.UnboundedProcessor.drain
  [33] io.rsocket.internal.UnboundedProcessor.onNext
  [34] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [35] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [36] reactor.core.publisher.MonoDefer.subscribe
  [37] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [38] reactor.core.publisher.MonoIgnoreThen.subscribe
  [39] reactor.core.publisher.MonoPeekFuseable.subscribe
  [40] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [43] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [44] reactor.core.publisher.FluxRange$RangeSubscription.request
  [45] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [46] reactor.core.publisher.FluxRange.subscribe
  [47] reactor.core.publisher.FluxFlatMap.subscribe
  [48] reactor.core.publisher.Flux.subscribe
  [49] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [50] reactor.core.publisher.Operators$MonoSubscriber.complete
  [51] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [52] reactor.core.publisher.Operators$MonoSubscriber.complete
  [53] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [54] reactor.core.publisher.MonoIgnoreThen.subscribe
  [55] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [56] reactor.core.publisher.Operators$ScalarSubscription.request
  [57] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [58] reactor.core.publisher.MonoJust.subscribe
  [59] reactor.core.publisher.MonoDefer.subscribe
  [60] reactor.core.publisher.MonoFlatMap.subscribe
  [61] reactor.core.publisher.MonoFlatMapMany.subscribe
  [62] reactor.core.publisher.FluxPeek.subscribe
  [63] reactor.core.publisher.FluxPeek.subscribe
  [64] reactor.core.publisher.Flux.blockLast
  [65] io.rsocket.transport.local.LocalPingPong.main

--- 270000000 ns (1.01%), 27 samples
  [ 0] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [ 2] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [ 3] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 4] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 5] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 6] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [ 7] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 8] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 9] reactor.core.publisher.Operators$MonoSubscriber.complete
  [10] reactor.core.publisher.MonoProcessor.subscribe
  [11] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [12] reactor.core.publisher.MonoPeek.subscribe
  [13] reactor.core.publisher.MonoDoFinally.subscribe
  [14] reactor.core.publisher.MonoDefer.subscribe
  [15] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [16] reactor.core.publisher.MonoIgnoreThen.subscribe
  [17] reactor.core.publisher.MonoPeekFuseable.subscribe
  [18] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [19] reactor.core.publisher.Mono.subscribe
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [21] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [22] reactor.core.publisher.FluxRange$RangeSubscription.request
  [23] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [24] reactor.core.publisher.FluxRange.subscribe
  [25] reactor.core.publisher.FluxFlatMap.subscribe
  [26] reactor.core.publisher.Flux.subscribe
  [27] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [28] reactor.core.publisher.Operators$MonoSubscriber.complete
  [29] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [32] reactor.core.publisher.MonoIgnoreThen.subscribe
  [33] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [34] reactor.core.publisher.Operators$ScalarSubscription.request
  [35] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [36] reactor.core.publisher.MonoJust.subscribe
  [37] reactor.core.publisher.MonoDefer.subscribe
  [38] reactor.core.publisher.MonoFlatMap.subscribe
  [39] reactor.core.publisher.MonoFlatMapMany.subscribe
  [40] reactor.core.publisher.FluxPeek.subscribe
  [41] reactor.core.publisher.FluxPeek.subscribe
  [42] reactor.core.publisher.Flux.blockLast
  [43] io.rsocket.transport.local.LocalPingPong.main

--- 270000000 ns (1.01%), 27 samples
  [ 0] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.ignoreDone
  [ 1] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onComplete
  [ 2] reactor.core.publisher.MonoCreate$DefaultMonoSink.success
  [ 3] io.rsocket.RSocketClient$Lifecycle.lambda$active$0
  [ 4] io.rsocket.RSocketClient$Lifecycle$$Lambda$61.802600647.accept
  [ 5] reactor.core.publisher.MonoCreate.subscribe
  [ 6] reactor.core.publisher.Mono.subscribe
  [ 7] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 8] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 9] reactor.core.publisher.MonoPeekFuseable.subscribe
  [10] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [13] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [14] reactor.core.publisher.FluxRange$RangeSubscription.request
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [16] reactor.core.publisher.FluxRange.subscribe
  [17] reactor.core.publisher.FluxFlatMap.subscribe
  [18] reactor.core.publisher.Flux.subscribe
  [19] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [20] reactor.core.publisher.Operators$MonoSubscriber.complete
  [21] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [24] reactor.core.publisher.MonoIgnoreThen.subscribe
  [25] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [26] reactor.core.publisher.Operators$ScalarSubscription.request
  [27] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoDefer.subscribe
  [30] reactor.core.publisher.MonoFlatMap.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany.subscribe
  [32] reactor.core.publisher.FluxPeek.subscribe
  [33] reactor.core.publisher.FluxPeek.subscribe
  [34] reactor.core.publisher.Flux.blockLast
  [35] io.rsocket.transport.local.LocalPingPong.main

--- 260000000 ns (0.97%), 26 samples
  [ 0] java.lang.Integer.valueOf
  [ 1] io.rsocket.RSocketClient.lambda$null$11
  [ 2] io.rsocket.RSocketClient$$Lambda$72.363988129.accept
  [ 3] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 5] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 6] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 7] reactor.core.publisher.MonoProcessor.subscribe
  [ 8] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 9] reactor.core.publisher.MonoPeek.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.MonoDefer.subscribe
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [13] reactor.core.publisher.MonoIgnoreThen.subscribe
  [14] reactor.core.publisher.MonoPeekFuseable.subscribe
  [15] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [19] reactor.core.publisher.FluxRange$RangeSubscription.request
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.FluxRange.subscribe
  [22] reactor.core.publisher.FluxFlatMap.subscribe
  [23] reactor.core.publisher.Flux.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [27] reactor.core.publisher.Operators$MonoSubscriber.complete
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoFlatMap.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.Flux.blockLast
  [40] io.rsocket.transport.local.LocalPingPong.main

--- 260000000 ns (0.97%), 26 samples
  [ 0] io.rsocket.buffer.Tuple2ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.flags
  [ 3] io.rsocket.frame.FrameHeaderFlyweight.hasMetadata
  [ 4] io.rsocket.frame.RequestFlyweight.data
  [ 5] io.rsocket.frame.PayloadFrameFlyweight.data
  [ 6] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 7] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 8] io.rsocket.RSocketClient.handleFrame
  [ 9] io.rsocket.RSocketClient.handleIncomingFrames
  [10] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [11] reactor.core.publisher.LambdaSubscriber.onNext
  [12] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [16] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [17] reactor.core.publisher.UnicastProcessor.drainRegular
  [18] reactor.core.publisher.UnicastProcessor.drain
  [19] reactor.core.publisher.UnicastProcessor.onNext
  [20] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [21] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] io.rsocket.internal.UnboundedProcessor.drainRegular
  [24] io.rsocket.internal.UnboundedProcessor.drain
  [25] io.rsocket.internal.UnboundedProcessor.onNext
  [26] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [27] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [28] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [29] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [30] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [31] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [32] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [33] reactor.core.publisher.Operators$ScalarSubscription.request
  [34] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [36] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [37] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [38] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [39] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [40] reactor.core.publisher.MonoJust.subscribe
  [41] reactor.core.publisher.MonoPeekFuseable.subscribe
  [42] reactor.core.publisher.MonoMapFuseable.subscribe
  [43] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [44] reactor.core.publisher.MonoDoFinally.subscribe
  [45] reactor.core.publisher.Mono.subscribe
  [46] reactor.core.publisher.Mono.subscribeWith
  [47] reactor.core.publisher.Mono.subscribe
  [48] reactor.core.publisher.Mono.subscribe
  [49] reactor.core.publisher.Mono.subscribe
  [50] io.rsocket.RSocketServer.handleRequestResponse
  [51] io.rsocket.RSocketServer.handleFrame
  [52] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [53] reactor.core.publisher.LambdaSubscriber.onNext
  [54] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [55] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [56] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [57] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [58] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [59] reactor.core.publisher.UnicastProcessor.drainRegular
  [60] reactor.core.publisher.UnicastProcessor.drain
  [61] reactor.core.publisher.UnicastProcessor.onNext
  [62] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [63] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [64] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [65] io.rsocket.internal.UnboundedProcessor.drainRegular
  [66] io.rsocket.internal.UnboundedProcessor.drain
  [67] io.rsocket.internal.UnboundedProcessor.onNext
  [68] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [69] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [70] reactor.core.publisher.MonoDefer.subscribe
  [71] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [72] reactor.core.publisher.MonoIgnoreThen.subscribe
  [73] reactor.core.publisher.MonoPeekFuseable.subscribe
  [74] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [75] reactor.core.publisher.Mono.subscribe
  [76] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [77] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [78] reactor.core.publisher.FluxRange$RangeSubscription.request
  [79] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [80] reactor.core.publisher.FluxRange.subscribe
  [81] reactor.core.publisher.FluxFlatMap.subscribe
  [82] reactor.core.publisher.Flux.subscribe
  [83] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [84] reactor.core.publisher.Operators$MonoSubscriber.complete
  [85] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [86] reactor.core.publisher.Operators$MonoSubscriber.complete
  [87] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [88] reactor.core.publisher.MonoIgnoreThen.subscribe
  [89] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [90] reactor.core.publisher.Operators$ScalarSubscription.request
  [91] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [92] reactor.core.publisher.MonoJust.subscribe
  [93] reactor.core.publisher.MonoDefer.subscribe
  [94] reactor.core.publisher.MonoFlatMap.subscribe
  [95] reactor.core.publisher.MonoFlatMapMany.subscribe
  [96] reactor.core.publisher.FluxPeek.subscribe
  [97] reactor.core.publisher.FluxPeek.subscribe
  [98] reactor.core.publisher.Flux.blockLast
  [99] io.rsocket.transport.local.LocalPingPong.main

--- 260000000 ns (0.97%), 26 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 1] reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe
  [ 2] reactor.core.publisher.MonoProcessor.subscribe
  [ 3] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 4] reactor.core.publisher.MonoPeek.subscribe
  [ 5] reactor.core.publisher.MonoDoFinally.subscribe
  [ 6] reactor.core.publisher.MonoDefer.subscribe
  [ 7] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 8] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 9] reactor.core.publisher.MonoPeekFuseable.subscribe
  [10] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [13] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [14] reactor.core.publisher.FluxRange$RangeSubscription.request
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [16] reactor.core.publisher.FluxRange.subscribe
  [17] reactor.core.publisher.FluxFlatMap.subscribe
  [18] reactor.core.publisher.Flux.subscribe
  [19] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [20] reactor.core.publisher.Operators$MonoSubscriber.complete
  [21] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [24] reactor.core.publisher.MonoIgnoreThen.subscribe
  [25] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [26] reactor.core.publisher.Operators$ScalarSubscription.request
  [27] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoDefer.subscribe
  [30] reactor.core.publisher.MonoFlatMap.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany.subscribe
  [32] reactor.core.publisher.FluxPeek.subscribe
  [33] reactor.core.publisher.FluxPeek.subscribe
  [34] reactor.core.publisher.Flux.blockLast
  [35] io.rsocket.transport.local.LocalPingPong.main

--- 260000000 ns (0.97%), 26 samples
  [ 0] java.lang.Throwable.fillInStackTrace
  [ 1] java.lang.Throwable.fillInStackTrace
  [ 2] java.lang.Throwable.<init>
  [ 3] io.netty.util.ResourceLeakDetector$Record.<init>
  [ 4] io.netty.util.ResourceLeakDetector$DefaultResourceLeak.<init>
  [ 5] io.netty.util.ResourceLeakDetector.track0
  [ 6] io.netty.util.ResourceLeakDetector.track
  [ 7] io.netty.buffer.AbstractByteBufAllocator.toLeakAwareBuffer
  [ 8] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 9] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [10] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [11] io.netty.buffer.AbstractByteBufAllocator.buffer
  [12] io.rsocket.frame.FrameHeaderFlyweight.encode
  [13] io.rsocket.frame.RequestFlyweight.encode
  [14] io.rsocket.frame.RequestFlyweight.encode
  [15] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [16] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [17] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [18] reactor.core.publisher.MonoDefer.subscribe
  [19] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [20] reactor.core.publisher.MonoIgnoreThen.subscribe
  [21] reactor.core.publisher.MonoPeekFuseable.subscribe
  [22] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [25] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [26] reactor.core.publisher.FluxRange$RangeSubscription.request
  [27] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.FluxRange.subscribe
  [29] reactor.core.publisher.FluxFlatMap.subscribe
  [30] reactor.core.publisher.Flux.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [34] reactor.core.publisher.Operators$MonoSubscriber.complete
  [35] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [36] reactor.core.publisher.MonoIgnoreThen.subscribe
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [38] reactor.core.publisher.Operators$ScalarSubscription.request
  [39] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [40] reactor.core.publisher.MonoJust.subscribe
  [41] reactor.core.publisher.MonoDefer.subscribe
  [42] reactor.core.publisher.MonoFlatMap.subscribe
  [43] reactor.core.publisher.MonoFlatMapMany.subscribe
  [44] reactor.core.publisher.FluxPeek.subscribe
  [45] reactor.core.publisher.FluxPeek.subscribe
  [46] reactor.core.publisher.Flux.blockLast
  [47] io.rsocket.transport.local.LocalPingPong.main

--- 250000000 ns (0.93%), 25 samples
  [ 0] io.netty.buffer.WrappedByteBuf.readerIndex
  [ 1] io.rsocket.buffer.Tuple2ByteBuf.wrap
  [ 2] io.rsocket.buffer.Tuple2ByteBuf.create
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.encodeOnlyData
  [ 4] io.rsocket.frame.RequestFlyweight.encode
  [ 5] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [ 6] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [ 7] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [ 8] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [ 9] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [10] reactor.core.publisher.Operators$ScalarSubscription.request
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [12] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [13] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [14] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [15] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [17] reactor.core.publisher.MonoJust.subscribe
  [18] reactor.core.publisher.MonoPeekFuseable.subscribe
  [19] reactor.core.publisher.MonoMapFuseable.subscribe
  [20] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [21] reactor.core.publisher.MonoDoFinally.subscribe
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.Mono.subscribeWith
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.Mono.subscribe
  [26] reactor.core.publisher.Mono.subscribe
  [27] io.rsocket.RSocketServer.handleRequestResponse
  [28] io.rsocket.RSocketServer.handleFrame
  [29] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [30] reactor.core.publisher.LambdaSubscriber.onNext
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [35] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [36] reactor.core.publisher.UnicastProcessor.drainRegular
  [37] reactor.core.publisher.UnicastProcessor.drain
  [38] reactor.core.publisher.UnicastProcessor.onNext
  [39] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [40] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [41] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [42] io.rsocket.internal.UnboundedProcessor.drainRegular
  [43] io.rsocket.internal.UnboundedProcessor.drain
  [44] io.rsocket.internal.UnboundedProcessor.onNext
  [45] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [46] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [47] reactor.core.publisher.MonoDefer.subscribe
  [48] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [49] reactor.core.publisher.MonoIgnoreThen.subscribe
  [50] reactor.core.publisher.MonoPeekFuseable.subscribe
  [51] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [54] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [55] reactor.core.publisher.FluxRange$RangeSubscription.request
  [56] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [57] reactor.core.publisher.FluxRange.subscribe
  [58] reactor.core.publisher.FluxFlatMap.subscribe
  [59] reactor.core.publisher.Flux.subscribe
  [60] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [61] reactor.core.publisher.Operators$MonoSubscriber.complete
  [62] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [63] reactor.core.publisher.Operators$MonoSubscriber.complete
  [64] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [65] reactor.core.publisher.MonoIgnoreThen.subscribe
  [66] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [67] reactor.core.publisher.Operators$ScalarSubscription.request
  [68] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [69] reactor.core.publisher.MonoJust.subscribe
  [70] reactor.core.publisher.MonoDefer.subscribe
  [71] reactor.core.publisher.MonoFlatMap.subscribe
  [72] reactor.core.publisher.MonoFlatMapMany.subscribe
  [73] reactor.core.publisher.FluxPeek.subscribe
  [74] reactor.core.publisher.FluxPeek.subscribe
  [75] reactor.core.publisher.Flux.blockLast
  [76] io.rsocket.transport.local.LocalPingPong.main

--- 240000000 ns (0.90%), 24 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceArray.checkedByteOffset
  [ 1] java.util.concurrent.atomic.AtomicReferenceArray.get
  [ 2] reactor.util.concurrent.SpscLinkedArrayQueue.offer
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [16] reactor.core.publisher.MonoDefer.subscribe
  [17] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [18] reactor.core.publisher.MonoIgnoreThen.subscribe
  [19] reactor.core.publisher.MonoPeekFuseable.subscribe
  [20] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [21] reactor.core.publisher.Mono.subscribe
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [24] reactor.core.publisher.FluxRange$RangeSubscription.request
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [26] reactor.core.publisher.FluxRange.subscribe
  [27] reactor.core.publisher.FluxFlatMap.subscribe
  [28] reactor.core.publisher.Flux.subscribe
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [34] reactor.core.publisher.MonoIgnoreThen.subscribe
  [35] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.MonoJust.subscribe
  [39] reactor.core.publisher.MonoDefer.subscribe
  [40] reactor.core.publisher.MonoFlatMap.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.Flux.blockLast
  [45] io.rsocket.transport.local.LocalPingPong.main

--- 230000000 ns (0.86%), 23 samples
  [ 0] io.rsocket.buffer.Tuple3ByteBuf._getByte
  [ 1] io.netty.buffer.AbstractByteBuf.readByte
  [ 2] io.rsocket.frame.DataAndMetadataFlyweight.decodeLength
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 4] io.rsocket.frame.RequestFlyweight.data
  [ 5] io.rsocket.frame.RequestResponseFrameFlyweight.data
  [ 6] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 7] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 8] io.rsocket.RSocketServer.handleFrame
  [ 9] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [10] reactor.core.publisher.LambdaSubscriber.onNext
  [11] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [15] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [16] reactor.core.publisher.UnicastProcessor.drainRegular
  [17] reactor.core.publisher.UnicastProcessor.drain
  [18] reactor.core.publisher.UnicastProcessor.onNext
  [19] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [20] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [22] io.rsocket.internal.UnboundedProcessor.drainRegular
  [23] io.rsocket.internal.UnboundedProcessor.drain
  [24] io.rsocket.internal.UnboundedProcessor.onNext
  [25] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [26] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [27] reactor.core.publisher.MonoDefer.subscribe
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoPeekFuseable.subscribe
  [31] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [34] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [35] reactor.core.publisher.FluxRange$RangeSubscription.request
  [36] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [37] reactor.core.publisher.FluxRange.subscribe
  [38] reactor.core.publisher.FluxFlatMap.subscribe
  [39] reactor.core.publisher.Flux.subscribe
  [40] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [41] reactor.core.publisher.Operators$MonoSubscriber.complete
  [42] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [43] reactor.core.publisher.Operators$MonoSubscriber.complete
  [44] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [45] reactor.core.publisher.MonoIgnoreThen.subscribe
  [46] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [47] reactor.core.publisher.Operators$ScalarSubscription.request
  [48] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [49] reactor.core.publisher.MonoJust.subscribe
  [50] reactor.core.publisher.MonoDefer.subscribe
  [51] reactor.core.publisher.MonoFlatMap.subscribe
  [52] reactor.core.publisher.MonoFlatMapMany.subscribe
  [53] reactor.core.publisher.FluxPeek.subscribe
  [54] reactor.core.publisher.FluxPeek.subscribe
  [55] reactor.core.publisher.Flux.blockLast
  [56] io.rsocket.transport.local.LocalPingPong.main

--- 230000000 ns (0.86%), 23 samples
  [ 0] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 1] reactor.core.publisher.UnicastProcessor.drain
  [ 2] reactor.core.publisher.UnicastProcessor.onNext
  [ 3] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 4] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 6] io.rsocket.internal.UnboundedProcessor.drainRegular
  [ 7] io.rsocket.internal.UnboundedProcessor.drain
  [ 8] io.rsocket.internal.UnboundedProcessor.onNext
  [ 9] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [10] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [11] reactor.core.publisher.MonoDefer.subscribe
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [13] reactor.core.publisher.MonoIgnoreThen.subscribe
  [14] reactor.core.publisher.MonoPeekFuseable.subscribe
  [15] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [19] reactor.core.publisher.FluxRange$RangeSubscription.request
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.FluxRange.subscribe
  [22] reactor.core.publisher.FluxFlatMap.subscribe
  [23] reactor.core.publisher.Flux.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [27] reactor.core.publisher.Operators$MonoSubscriber.complete
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoFlatMap.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.Flux.blockLast
  [40] io.rsocket.transport.local.LocalPingPong.main

--- 230000000 ns (0.86%), 23 samples
  [ 0] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 1] reactor.core.publisher.UnicastProcessor.drain
  [ 2] reactor.core.publisher.UnicastProcessor.onNext
  [ 3] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 4] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 6] io.rsocket.internal.UnboundedProcessor.drainRegular
  [ 7] io.rsocket.internal.UnboundedProcessor.drain
  [ 8] io.rsocket.internal.UnboundedProcessor.onNext
  [ 9] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [10] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [11] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [12] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [13] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [14] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [15] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [16] reactor.core.publisher.Operators$ScalarSubscription.request
  [17] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [18] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [19] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [20] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [23] reactor.core.publisher.MonoJust.subscribe
  [24] reactor.core.publisher.MonoPeekFuseable.subscribe
  [25] reactor.core.publisher.MonoMapFuseable.subscribe
  [26] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [27] reactor.core.publisher.MonoDoFinally.subscribe
  [28] reactor.core.publisher.Mono.subscribe
  [29] reactor.core.publisher.Mono.subscribeWith
  [30] reactor.core.publisher.Mono.subscribe
  [31] reactor.core.publisher.Mono.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] io.rsocket.RSocketServer.handleRequestResponse
  [34] io.rsocket.RSocketServer.handleFrame
  [35] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [36] reactor.core.publisher.LambdaSubscriber.onNext
  [37] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [38] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [39] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [40] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [41] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [42] reactor.core.publisher.UnicastProcessor.drainRegular
  [43] reactor.core.publisher.UnicastProcessor.drain
  [44] reactor.core.publisher.UnicastProcessor.onNext
  [45] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [46] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [47] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [48] io.rsocket.internal.UnboundedProcessor.drainRegular
  [49] io.rsocket.internal.UnboundedProcessor.drain
  [50] io.rsocket.internal.UnboundedProcessor.onNext
  [51] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [52] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [53] reactor.core.publisher.MonoDefer.subscribe
  [54] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [55] reactor.core.publisher.MonoIgnoreThen.subscribe
  [56] reactor.core.publisher.MonoPeekFuseable.subscribe
  [57] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [58] reactor.core.publisher.Mono.subscribe
  [59] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [60] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [61] reactor.core.publisher.FluxRange$RangeSubscription.request
  [62] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [63] reactor.core.publisher.FluxRange.subscribe
  [64] reactor.core.publisher.FluxFlatMap.subscribe
  [65] reactor.core.publisher.Flux.subscribe
  [66] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [67] reactor.core.publisher.Operators$MonoSubscriber.complete
  [68] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [69] reactor.core.publisher.Operators$MonoSubscriber.complete
  [70] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [71] reactor.core.publisher.MonoIgnoreThen.subscribe
  [72] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [73] reactor.core.publisher.Operators$ScalarSubscription.request
  [74] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [75] reactor.core.publisher.MonoJust.subscribe
  [76] reactor.core.publisher.MonoDefer.subscribe
  [77] reactor.core.publisher.MonoFlatMap.subscribe
  [78] reactor.core.publisher.MonoFlatMapMany.subscribe
  [79] reactor.core.publisher.FluxPeek.subscribe
  [80] reactor.core.publisher.FluxPeek.subscribe
  [81] reactor.core.publisher.Flux.blockLast
  [82] io.rsocket.transport.local.LocalPingPong.main

--- 230000000 ns (0.86%), 23 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.retain0
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.retain
  [ 2] io.netty.buffer.AbstractDerivedByteBuf.retain0
  [ 3] io.netty.buffer.AbstractDerivedByteBuf.retain
  [ 4] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 5] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 6] io.rsocket.RSocketServer.handleFrame
  [ 7] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 8] reactor.core.publisher.LambdaSubscriber.onNext
  [ 9] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [13] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [14] reactor.core.publisher.UnicastProcessor.drainRegular
  [15] reactor.core.publisher.UnicastProcessor.drain
  [16] reactor.core.publisher.UnicastProcessor.onNext
  [17] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [18] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [19] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [20] io.rsocket.internal.UnboundedProcessor.drainRegular
  [21] io.rsocket.internal.UnboundedProcessor.drain
  [22] io.rsocket.internal.UnboundedProcessor.onNext
  [23] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [24] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [25] reactor.core.publisher.MonoDefer.subscribe
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoPeekFuseable.subscribe
  [29] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [30] reactor.core.publisher.Mono.subscribe
  [31] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [32] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [33] reactor.core.publisher.FluxRange$RangeSubscription.request
  [34] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [35] reactor.core.publisher.FluxRange.subscribe
  [36] reactor.core.publisher.FluxFlatMap.subscribe
  [37] reactor.core.publisher.Flux.subscribe
  [38] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [39] reactor.core.publisher.Operators$MonoSubscriber.complete
  [40] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [41] reactor.core.publisher.Operators$MonoSubscriber.complete
  [42] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [43] reactor.core.publisher.MonoIgnoreThen.subscribe
  [44] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [45] reactor.core.publisher.Operators$ScalarSubscription.request
  [46] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [47] reactor.core.publisher.MonoJust.subscribe
  [48] reactor.core.publisher.MonoDefer.subscribe
  [49] reactor.core.publisher.MonoFlatMap.subscribe
  [50] reactor.core.publisher.MonoFlatMapMany.subscribe
  [51] reactor.core.publisher.FluxPeek.subscribe
  [52] reactor.core.publisher.FluxPeek.subscribe
  [53] reactor.core.publisher.Flux.blockLast
  [54] io.rsocket.transport.local.LocalPingPong.main

--- 220000000 ns (0.82%), 22 samples
  [ 0] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request
  [ 1] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.request
  [ 2] reactor.core.publisher.LambdaMonoSubscriber.onSubscribe
  [ 3] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 4] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [ 5] reactor.core.publisher.MonoDoFinally.subscribe
  [ 6] reactor.core.publisher.Mono.subscribe
  [ 7] reactor.core.publisher.Mono.subscribeWith
  [ 8] reactor.core.publisher.Mono.subscribe
  [ 9] reactor.core.publisher.Mono.subscribe
  [10] reactor.core.publisher.Mono.subscribe
  [11] io.rsocket.RSocketServer.handleRequestResponse
  [12] io.rsocket.RSocketServer.handleFrame
  [13] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.UnicastProcessor.drainRegular
  [21] reactor.core.publisher.UnicastProcessor.drain
  [22] reactor.core.publisher.UnicastProcessor.onNext
  [23] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [24] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [26] io.rsocket.internal.UnboundedProcessor.drainRegular
  [27] io.rsocket.internal.UnboundedProcessor.drain
  [28] io.rsocket.internal.UnboundedProcessor.onNext
  [29] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [30] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [31] reactor.core.publisher.MonoDefer.subscribe
  [32] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [33] reactor.core.publisher.MonoIgnoreThen.subscribe
  [34] reactor.core.publisher.MonoPeekFuseable.subscribe
  [35] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [38] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [39] reactor.core.publisher.FluxRange$RangeSubscription.request
  [40] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [41] reactor.core.publisher.FluxRange.subscribe
  [42] reactor.core.publisher.FluxFlatMap.subscribe
  [43] reactor.core.publisher.Flux.subscribe
  [44] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [45] reactor.core.publisher.Operators$MonoSubscriber.complete
  [46] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [47] reactor.core.publisher.Operators$MonoSubscriber.complete
  [48] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [49] reactor.core.publisher.MonoIgnoreThen.subscribe
  [50] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [51] reactor.core.publisher.Operators$ScalarSubscription.request
  [52] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [53] reactor.core.publisher.MonoJust.subscribe
  [54] reactor.core.publisher.MonoDefer.subscribe
  [55] reactor.core.publisher.MonoFlatMap.subscribe
  [56] reactor.core.publisher.MonoFlatMapMany.subscribe
  [57] reactor.core.publisher.FluxPeek.subscribe
  [58] reactor.core.publisher.FluxPeek.subscribe
  [59] reactor.core.publisher.Flux.blockLast
  [60] io.rsocket.transport.local.LocalPingPong.main

--- 220000000 ns (0.82%), 22 samples
  [ 0] io.netty.buffer.PoolArena.allocate
  [ 1] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 2] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 3] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 4] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 5] io.rsocket.frame.FrameHeaderFlyweight.encode
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.RequestFlyweight.encode
  [ 8] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 9] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [10] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [11] reactor.core.publisher.MonoDefer.subscribe
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [13] reactor.core.publisher.MonoIgnoreThen.subscribe
  [14] reactor.core.publisher.MonoPeekFuseable.subscribe
  [15] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [19] reactor.core.publisher.FluxRange$RangeSubscription.request
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.FluxRange.subscribe
  [22] reactor.core.publisher.FluxFlatMap.subscribe
  [23] reactor.core.publisher.Flux.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [27] reactor.core.publisher.Operators$MonoSubscriber.complete
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoFlatMap.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.Flux.blockLast
  [40] io.rsocket.transport.local.LocalPingPong.main

--- 210000000 ns (0.79%), 21 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceArray.checkedByteOffset
  [ 1] java.util.concurrent.atomic.AtomicReferenceArray.get
  [ 2] reactor.util.concurrent.SpscLinkedArrayQueue.offer
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [16] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [17] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [18] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [19] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [21] reactor.core.publisher.Operators$ScalarSubscription.request
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [23] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [24] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [25] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [26] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [27] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoPeekFuseable.subscribe
  [30] reactor.core.publisher.MonoMapFuseable.subscribe
  [31] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [32] reactor.core.publisher.MonoDoFinally.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribeWith
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] io.rsocket.RSocketServer.handleRequestResponse
  [39] io.rsocket.RSocketServer.handleFrame
  [40] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [41] reactor.core.publisher.LambdaSubscriber.onNext
  [42] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [46] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [47] reactor.core.publisher.UnicastProcessor.drainRegular
  [48] reactor.core.publisher.UnicastProcessor.drain
  [49] reactor.core.publisher.UnicastProcessor.onNext
  [50] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [51] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [52] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [53] io.rsocket.internal.UnboundedProcessor.drainRegular
  [54] io.rsocket.internal.UnboundedProcessor.drain
  [55] io.rsocket.internal.UnboundedProcessor.onNext
  [56] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [57] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [58] reactor.core.publisher.MonoDefer.subscribe
  [59] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [60] reactor.core.publisher.MonoIgnoreThen.subscribe
  [61] reactor.core.publisher.MonoPeekFuseable.subscribe
  [62] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [63] reactor.core.publisher.Mono.subscribe
  [64] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [65] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [66] reactor.core.publisher.FluxRange$RangeSubscription.request
  [67] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [68] reactor.core.publisher.FluxRange.subscribe
  [69] reactor.core.publisher.FluxFlatMap.subscribe
  [70] reactor.core.publisher.Flux.subscribe
  [71] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [72] reactor.core.publisher.Operators$MonoSubscriber.complete
  [73] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [74] reactor.core.publisher.Operators$MonoSubscriber.complete
  [75] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [76] reactor.core.publisher.MonoIgnoreThen.subscribe
  [77] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [78] reactor.core.publisher.Operators$ScalarSubscription.request
  [79] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [80] reactor.core.publisher.MonoJust.subscribe
  [81] reactor.core.publisher.MonoDefer.subscribe
  [82] reactor.core.publisher.MonoFlatMap.subscribe
  [83] reactor.core.publisher.MonoFlatMapMany.subscribe
  [84] reactor.core.publisher.FluxPeek.subscribe
  [85] reactor.core.publisher.FluxPeek.subscribe
  [86] reactor.core.publisher.Flux.blockLast
  [87] io.rsocket.transport.local.LocalPingPong.main

--- 200000000 ns (0.75%), 20 samples
  [ 0] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 1] io.rsocket.internal.UnboundedProcessor.drainRegular
  [ 2] io.rsocket.internal.UnboundedProcessor.drain
  [ 3] io.rsocket.internal.UnboundedProcessor.onNext
  [ 4] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [ 5] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [ 6] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [ 7] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 8] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [ 9] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] reactor.core.publisher.Operators$ScalarSubscription.request
  [12] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [13] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [14] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [15] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [16] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [17] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [18] reactor.core.publisher.MonoJust.subscribe
  [19] reactor.core.publisher.MonoPeekFuseable.subscribe
  [20] reactor.core.publisher.MonoMapFuseable.subscribe
  [21] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [22] reactor.core.publisher.MonoDoFinally.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.Mono.subscribeWith
  [25] reactor.core.publisher.Mono.subscribe
  [26] reactor.core.publisher.Mono.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] io.rsocket.RSocketServer.handleRequestResponse
  [29] io.rsocket.RSocketServer.handleFrame
  [30] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [31] reactor.core.publisher.LambdaSubscriber.onNext
  [32] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [35] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [36] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [37] reactor.core.publisher.UnicastProcessor.drainRegular
  [38] reactor.core.publisher.UnicastProcessor.drain
  [39] reactor.core.publisher.UnicastProcessor.onNext
  [40] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [41] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [42] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [43] io.rsocket.internal.UnboundedProcessor.drainRegular
  [44] io.rsocket.internal.UnboundedProcessor.drain
  [45] io.rsocket.internal.UnboundedProcessor.onNext
  [46] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [47] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [48] reactor.core.publisher.MonoDefer.subscribe
  [49] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [50] reactor.core.publisher.MonoIgnoreThen.subscribe
  [51] reactor.core.publisher.MonoPeekFuseable.subscribe
  [52] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [53] reactor.core.publisher.Mono.subscribe
  [54] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [55] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [56] reactor.core.publisher.FluxRange$RangeSubscription.request
  [57] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [58] reactor.core.publisher.FluxRange.subscribe
  [59] reactor.core.publisher.FluxFlatMap.subscribe
  [60] reactor.core.publisher.Flux.subscribe
  [61] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [62] reactor.core.publisher.Operators$MonoSubscriber.complete
  [63] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [64] reactor.core.publisher.Operators$MonoSubscriber.complete
  [65] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [66] reactor.core.publisher.MonoIgnoreThen.subscribe
  [67] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [68] reactor.core.publisher.Operators$ScalarSubscription.request
  [69] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [70] reactor.core.publisher.MonoJust.subscribe
  [71] reactor.core.publisher.MonoDefer.subscribe
  [72] reactor.core.publisher.MonoFlatMap.subscribe
  [73] reactor.core.publisher.MonoFlatMapMany.subscribe
  [74] reactor.core.publisher.FluxPeek.subscribe
  [75] reactor.core.publisher.FluxPeek.subscribe
  [76] reactor.core.publisher.Flux.blockLast
  [77] io.rsocket.transport.local.LocalPingPong.main

--- 190000000 ns (0.71%), 19 samples
  [ 0] reactor.core.publisher.MonoProcessor.onNext
  [ 1] reactor.core.publisher.MonoProcessor.onComplete
  [ 2] io.rsocket.internal.UnicastMonoProcessor.onComplete
  [ 3] io.rsocket.RSocketClient.handleFrame
  [ 4] io.rsocket.RSocketClient.handleIncomingFrames
  [ 5] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 6] reactor.core.publisher.LambdaSubscriber.onNext
  [ 7] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [11] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [12] reactor.core.publisher.UnicastProcessor.drainRegular
  [13] reactor.core.publisher.UnicastProcessor.drain
  [14] reactor.core.publisher.UnicastProcessor.onNext
  [15] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [16] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [17] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [18] io.rsocket.internal.UnboundedProcessor.drainRegular
  [19] io.rsocket.internal.UnboundedProcessor.drain
  [20] io.rsocket.internal.UnboundedProcessor.onNext
  [21] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [22] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [23] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [24] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [25] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [26] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [27] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [28] reactor.core.publisher.Operators$ScalarSubscription.request
  [29] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [30] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [31] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [32] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [33] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [34] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [35] reactor.core.publisher.MonoJust.subscribe
  [36] reactor.core.publisher.MonoPeekFuseable.subscribe
  [37] reactor.core.publisher.MonoMapFuseable.subscribe
  [38] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [39] reactor.core.publisher.MonoDoFinally.subscribe
  [40] reactor.core.publisher.Mono.subscribe
  [41] reactor.core.publisher.Mono.subscribeWith
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.Mono.subscribe
  [44] reactor.core.publisher.Mono.subscribe
  [45] io.rsocket.RSocketServer.handleRequestResponse
  [46] io.rsocket.RSocketServer.handleFrame
  [47] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [48] reactor.core.publisher.LambdaSubscriber.onNext
  [49] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [50] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [51] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [52] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [53] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [54] reactor.core.publisher.UnicastProcessor.drainRegular
  [55] reactor.core.publisher.UnicastProcessor.drain
  [56] reactor.core.publisher.UnicastProcessor.onNext
  [57] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [58] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [59] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [60] io.rsocket.internal.UnboundedProcessor.drainRegular
  [61] io.rsocket.internal.UnboundedProcessor.drain
  [62] io.rsocket.internal.UnboundedProcessor.onNext
  [63] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [64] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [65] reactor.core.publisher.MonoDefer.subscribe
  [66] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [67] reactor.core.publisher.MonoIgnoreThen.subscribe
  [68] reactor.core.publisher.MonoPeekFuseable.subscribe
  [69] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [70] reactor.core.publisher.Mono.subscribe
  [71] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [72] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [73] reactor.core.publisher.FluxRange$RangeSubscription.request
  [74] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [75] reactor.core.publisher.FluxRange.subscribe
  [76] reactor.core.publisher.FluxFlatMap.subscribe
  [77] reactor.core.publisher.Flux.subscribe
  [78] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [79] reactor.core.publisher.Operators$MonoSubscriber.complete
  [80] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [81] reactor.core.publisher.Operators$MonoSubscriber.complete
  [82] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [83] reactor.core.publisher.MonoIgnoreThen.subscribe
  [84] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [85] reactor.core.publisher.Operators$ScalarSubscription.request
  [86] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [87] reactor.core.publisher.MonoJust.subscribe
  [88] reactor.core.publisher.MonoDefer.subscribe
  [89] reactor.core.publisher.MonoFlatMap.subscribe
  [90] reactor.core.publisher.MonoFlatMapMany.subscribe
  [91] reactor.core.publisher.FluxPeek.subscribe
  [92] reactor.core.publisher.FluxPeek.subscribe
  [93] reactor.core.publisher.Flux.blockLast
  [94] io.rsocket.transport.local.LocalPingPong.main

--- 190000000 ns (0.71%), 19 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 2] io.netty.util.ReferenceCountUtil.release
  [ 3] io.netty.util.ReferenceCountUtil.safeRelease
  [ 4] io.rsocket.buffer.Tuple2ByteBuf.deallocate
  [ 5] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 6] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 7] io.rsocket.RSocketClient.handleIncomingFrames
  [ 8] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 9] reactor.core.publisher.LambdaSubscriber.onNext
  [10] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [14] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [15] reactor.core.publisher.UnicastProcessor.drainRegular
  [16] reactor.core.publisher.UnicastProcessor.drain
  [17] reactor.core.publisher.UnicastProcessor.onNext
  [18] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [19] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [21] io.rsocket.internal.UnboundedProcessor.drainRegular
  [22] io.rsocket.internal.UnboundedProcessor.drain
  [23] io.rsocket.internal.UnboundedProcessor.onNext
  [24] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [25] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [26] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [27] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [28] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [29] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [30] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [33] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [34] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [35] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [36] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [37] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [38] reactor.core.publisher.MonoJust.subscribe
  [39] reactor.core.publisher.MonoPeekFuseable.subscribe
  [40] reactor.core.publisher.MonoMapFuseable.subscribe
  [41] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [42] reactor.core.publisher.MonoDoFinally.subscribe
  [43] reactor.core.publisher.Mono.subscribe
  [44] reactor.core.publisher.Mono.subscribeWith
  [45] reactor.core.publisher.Mono.subscribe
  [46] reactor.core.publisher.Mono.subscribe
  [47] reactor.core.publisher.Mono.subscribe
  [48] io.rsocket.RSocketServer.handleRequestResponse
  [49] io.rsocket.RSocketServer.handleFrame
  [50] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [51] reactor.core.publisher.LambdaSubscriber.onNext
  [52] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [53] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [54] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [55] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [56] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [57] reactor.core.publisher.UnicastProcessor.drainRegular
  [58] reactor.core.publisher.UnicastProcessor.drain
  [59] reactor.core.publisher.UnicastProcessor.onNext
  [60] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [61] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [62] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [63] io.rsocket.internal.UnboundedProcessor.drainRegular
  [64] io.rsocket.internal.UnboundedProcessor.drain
  [65] io.rsocket.internal.UnboundedProcessor.onNext
  [66] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [67] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [68] reactor.core.publisher.MonoDefer.subscribe
  [69] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [70] reactor.core.publisher.MonoIgnoreThen.subscribe
  [71] reactor.core.publisher.MonoPeekFuseable.subscribe
  [72] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [73] reactor.core.publisher.Mono.subscribe
  [74] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [75] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [76] reactor.core.publisher.FluxRange$RangeSubscription.request
  [77] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [78] reactor.core.publisher.FluxRange.subscribe
  [79] reactor.core.publisher.FluxFlatMap.subscribe
  [80] reactor.core.publisher.Flux.subscribe
  [81] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [82] reactor.core.publisher.Operators$MonoSubscriber.complete
  [83] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [84] reactor.core.publisher.Operators$MonoSubscriber.complete
  [85] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [86] reactor.core.publisher.MonoIgnoreThen.subscribe
  [87] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [88] reactor.core.publisher.Operators$ScalarSubscription.request
  [89] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [90] reactor.core.publisher.MonoJust.subscribe
  [91] reactor.core.publisher.MonoDefer.subscribe
  [92] reactor.core.publisher.MonoFlatMap.subscribe
  [93] reactor.core.publisher.MonoFlatMapMany.subscribe
  [94] reactor.core.publisher.FluxPeek.subscribe
  [95] reactor.core.publisher.FluxPeek.subscribe
  [96] reactor.core.publisher.Flux.blockLast
  [97] io.rsocket.transport.local.LocalPingPong.main

--- 190000000 ns (0.71%), 19 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 2] io.netty.buffer.AbstractDerivedByteBuf.release0
  [ 3] io.netty.buffer.AbstractDerivedByteBuf.release
  [ 4] io.rsocket.util.ByteBufPayload.deallocate
  [ 5] io.netty.util.AbstractReferenceCounted.release0
  [ 6] io.netty.util.AbstractReferenceCounted.release
  [ 7] io.rsocket.test.PingClient$$Lambda$63.932285561.accept
  [ 8] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 9] reactor.core.publisher.Operators$MonoSubscriber.complete
  [10] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [11] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [12] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [13] reactor.core.publisher.Operators$MonoSubscriber.complete
  [14] reactor.core.publisher.MonoProcessor.subscribe
  [15] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [16] reactor.core.publisher.MonoPeek.subscribe
  [17] reactor.core.publisher.MonoDoFinally.subscribe
  [18] reactor.core.publisher.MonoDefer.subscribe
  [19] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [20] reactor.core.publisher.MonoIgnoreThen.subscribe
  [21] reactor.core.publisher.MonoPeekFuseable.subscribe
  [22] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [25] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [26] reactor.core.publisher.FluxRange$RangeSubscription.request
  [27] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.FluxRange.subscribe
  [29] reactor.core.publisher.FluxFlatMap.subscribe
  [30] reactor.core.publisher.Flux.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [34] reactor.core.publisher.Operators$MonoSubscriber.complete
  [35] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [36] reactor.core.publisher.MonoIgnoreThen.subscribe
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [38] reactor.core.publisher.Operators$ScalarSubscription.request
  [39] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [40] reactor.core.publisher.MonoJust.subscribe
  [41] reactor.core.publisher.MonoDefer.subscribe
  [42] reactor.core.publisher.MonoFlatMap.subscribe
  [43] reactor.core.publisher.MonoFlatMapMany.subscribe
  [44] reactor.core.publisher.FluxPeek.subscribe
  [45] reactor.core.publisher.FluxPeek.subscribe
  [46] reactor.core.publisher.Flux.blockLast
  [47] io.rsocket.transport.local.LocalPingPong.main

--- 180000000 ns (0.67%), 18 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.retain0
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.retain
  [ 2] io.netty.buffer.AbstractDerivedByteBuf.retain0
  [ 3] io.netty.buffer.AbstractDerivedByteBuf.retain
  [ 4] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 5] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 6] io.rsocket.RSocketClient.handleFrame
  [ 7] io.rsocket.RSocketClient.handleIncomingFrames
  [ 8] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 9] reactor.core.publisher.LambdaSubscriber.onNext
  [10] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [14] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [15] reactor.core.publisher.UnicastProcessor.drainRegular
  [16] reactor.core.publisher.UnicastProcessor.drain
  [17] reactor.core.publisher.UnicastProcessor.onNext
  [18] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [19] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [21] io.rsocket.internal.UnboundedProcessor.drainRegular
  [22] io.rsocket.internal.UnboundedProcessor.drain
  [23] io.rsocket.internal.UnboundedProcessor.onNext
  [24] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [25] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [26] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [27] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [28] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [29] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [30] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [33] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [34] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [35] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [36] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [37] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [38] reactor.core.publisher.MonoJust.subscribe
  [39] reactor.core.publisher.MonoPeekFuseable.subscribe
  [40] reactor.core.publisher.MonoMapFuseable.subscribe
  [41] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [42] reactor.core.publisher.MonoDoFinally.subscribe
  [43] reactor.core.publisher.Mono.subscribe
  [44] reactor.core.publisher.Mono.subscribeWith
  [45] reactor.core.publisher.Mono.subscribe
  [46] reactor.core.publisher.Mono.subscribe
  [47] reactor.core.publisher.Mono.subscribe
  [48] io.rsocket.RSocketServer.handleRequestResponse
  [49] io.rsocket.RSocketServer.handleFrame
  [50] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [51] reactor.core.publisher.LambdaSubscriber.onNext
  [52] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [53] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [54] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [55] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [56] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [57] reactor.core.publisher.UnicastProcessor.drainRegular
  [58] reactor.core.publisher.UnicastProcessor.drain
  [59] reactor.core.publisher.UnicastProcessor.onNext
  [60] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [61] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [62] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [63] io.rsocket.internal.UnboundedProcessor.drainRegular
  [64] io.rsocket.internal.UnboundedProcessor.drain
  [65] io.rsocket.internal.UnboundedProcessor.onNext
  [66] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [67] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [68] reactor.core.publisher.MonoDefer.subscribe
  [69] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [70] reactor.core.publisher.MonoIgnoreThen.subscribe
  [71] reactor.core.publisher.MonoPeekFuseable.subscribe
  [72] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [73] reactor.core.publisher.Mono.subscribe
  [74] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [75] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [76] reactor.core.publisher.FluxRange$RangeSubscription.request
  [77] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [78] reactor.core.publisher.FluxRange.subscribe
  [79] reactor.core.publisher.FluxFlatMap.subscribe
  [80] reactor.core.publisher.Flux.subscribe
  [81] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [82] reactor.core.publisher.Operators$MonoSubscriber.complete
  [83] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [84] reactor.core.publisher.Operators$MonoSubscriber.complete
  [85] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [86] reactor.core.publisher.MonoIgnoreThen.subscribe
  [87] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [88] reactor.core.publisher.Operators$ScalarSubscription.request
  [89] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [90] reactor.core.publisher.MonoJust.subscribe
  [91] reactor.core.publisher.MonoDefer.subscribe
  [92] reactor.core.publisher.MonoFlatMap.subscribe
  [93] reactor.core.publisher.MonoFlatMapMany.subscribe
  [94] reactor.core.publisher.FluxPeek.subscribe
  [95] reactor.core.publisher.FluxPeek.subscribe
  [96] reactor.core.publisher.Flux.blockLast
  [97] io.rsocket.transport.local.LocalPingPong.main

--- 180000000 ns (0.67%), 18 samples
  [ 0] io.rsocket.buffer.Tuple3ByteBuf._getByte
  [ 1] io.netty.buffer.AbstractByteBuf.readByte
  [ 2] io.rsocket.frame.DataAndMetadataFlyweight.decodeLength
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.metadataWithoutMarking
  [ 4] io.rsocket.frame.RequestFlyweight.metadata
  [ 5] io.rsocket.frame.RequestResponseFrameFlyweight.metadata
  [ 6] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 7] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 8] io.rsocket.RSocketServer.handleFrame
  [ 9] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [10] reactor.core.publisher.LambdaSubscriber.onNext
  [11] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [15] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [16] reactor.core.publisher.UnicastProcessor.drainRegular
  [17] reactor.core.publisher.UnicastProcessor.drain
  [18] reactor.core.publisher.UnicastProcessor.onNext
  [19] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [20] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [22] io.rsocket.internal.UnboundedProcessor.drainRegular
  [23] io.rsocket.internal.UnboundedProcessor.drain
  [24] io.rsocket.internal.UnboundedProcessor.onNext
  [25] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [26] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [27] reactor.core.publisher.MonoDefer.subscribe
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoPeekFuseable.subscribe
  [31] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [34] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [35] reactor.core.publisher.FluxRange$RangeSubscription.request
  [36] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [37] reactor.core.publisher.FluxRange.subscribe
  [38] reactor.core.publisher.FluxFlatMap.subscribe
  [39] reactor.core.publisher.Flux.subscribe
  [40] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [41] reactor.core.publisher.Operators$MonoSubscriber.complete
  [42] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [43] reactor.core.publisher.Operators$MonoSubscriber.complete
  [44] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [45] reactor.core.publisher.MonoIgnoreThen.subscribe
  [46] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [47] reactor.core.publisher.Operators$ScalarSubscription.request
  [48] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [49] reactor.core.publisher.MonoJust.subscribe
  [50] reactor.core.publisher.MonoDefer.subscribe
  [51] reactor.core.publisher.MonoFlatMap.subscribe
  [52] reactor.core.publisher.MonoFlatMapMany.subscribe
  [53] reactor.core.publisher.FluxPeek.subscribe
  [54] reactor.core.publisher.FluxPeek.subscribe
  [55] reactor.core.publisher.Flux.blockLast
  [56] io.rsocket.transport.local.LocalPingPong.main

--- 180000000 ns (0.67%), 18 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 2] io.netty.buffer.AbstractDerivedByteBuf.release0
  [ 3] io.netty.buffer.AbstractDerivedByteBuf.release
  [ 4] io.rsocket.util.ByteBufPayload.deallocate
  [ 5] io.netty.util.AbstractReferenceCounted.release0
  [ 6] io.netty.util.AbstractReferenceCounted.release
  [ 7] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 8] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 9] reactor.core.publisher.MonoDefer.subscribe
  [10] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [11] reactor.core.publisher.MonoIgnoreThen.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [19] reactor.core.publisher.FluxRange.subscribe
  [20] reactor.core.publisher.FluxFlatMap.subscribe
  [21] reactor.core.publisher.Flux.subscribe
  [22] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.Operators$ScalarSubscription.request
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [31] reactor.core.publisher.MonoJust.subscribe
  [32] reactor.core.publisher.MonoDefer.subscribe
  [33] reactor.core.publisher.MonoFlatMap.subscribe
  [34] reactor.core.publisher.MonoFlatMapMany.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.Flux.blockLast
  [38] io.rsocket.transport.local.LocalPingPong.main

--- 180000000 ns (0.67%), 18 samples
  [ 0] io.netty.buffer.PooledUnsafeDirectByteBuf.addr
  [ 1] io.netty.buffer.PooledUnsafeDirectByteBuf._setByte
  [ 2] io.netty.buffer.AbstractByteBuf.writeByte
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.encodeLength
  [ 4] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 8] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 9] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [10] reactor.core.publisher.MonoDefer.subscribe
  [11] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [12] reactor.core.publisher.MonoIgnoreThen.subscribe
  [13] reactor.core.publisher.MonoPeekFuseable.subscribe
  [14] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [17] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [18] reactor.core.publisher.FluxRange$RangeSubscription.request
  [19] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [20] reactor.core.publisher.FluxRange.subscribe
  [21] reactor.core.publisher.FluxFlatMap.subscribe
  [22] reactor.core.publisher.Flux.subscribe
  [23] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [24] reactor.core.publisher.Operators$MonoSubscriber.complete
  [25] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [26] reactor.core.publisher.Operators$MonoSubscriber.complete
  [27] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [28] reactor.core.publisher.MonoIgnoreThen.subscribe
  [29] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [30] reactor.core.publisher.Operators$ScalarSubscription.request
  [31] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [32] reactor.core.publisher.MonoJust.subscribe
  [33] reactor.core.publisher.MonoDefer.subscribe
  [34] reactor.core.publisher.MonoFlatMap.subscribe
  [35] reactor.core.publisher.MonoFlatMapMany.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.Flux.blockLast
  [39] io.rsocket.transport.local.LocalPingPong.main

--- 180000000 ns (0.67%), 18 samples
  [ 0] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [ 2] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 3] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 4] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 5] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [ 6] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 7] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 8] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 9] reactor.core.publisher.MonoProcessor.subscribe
  [10] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [11] reactor.core.publisher.MonoPeek.subscribe
  [12] reactor.core.publisher.MonoDoFinally.subscribe
  [13] reactor.core.publisher.MonoDefer.subscribe
  [14] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [15] reactor.core.publisher.MonoIgnoreThen.subscribe
  [16] reactor.core.publisher.MonoPeekFuseable.subscribe
  [17] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [18] reactor.core.publisher.Mono.subscribe
  [19] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [20] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [21] reactor.core.publisher.FluxRange$RangeSubscription.request
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [23] reactor.core.publisher.FluxRange.subscribe
  [24] reactor.core.publisher.FluxFlatMap.subscribe
  [25] reactor.core.publisher.Flux.subscribe
  [26] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [27] reactor.core.publisher.Operators$MonoSubscriber.complete
  [28] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [29] reactor.core.publisher.Operators$MonoSubscriber.complete
  [30] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [31] reactor.core.publisher.MonoIgnoreThen.subscribe
  [32] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [33] reactor.core.publisher.Operators$ScalarSubscription.request
  [34] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [35] reactor.core.publisher.MonoJust.subscribe
  [36] reactor.core.publisher.MonoDefer.subscribe
  [37] reactor.core.publisher.MonoFlatMap.subscribe
  [38] reactor.core.publisher.MonoFlatMapMany.subscribe
  [39] reactor.core.publisher.FluxPeek.subscribe
  [40] reactor.core.publisher.FluxPeek.subscribe
  [41] reactor.core.publisher.Flux.blockLast
  [42] io.rsocket.transport.local.LocalPingPong.main

--- 170000000 ns (0.64%), 17 samples
  [ 0] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 1] io.rsocket.internal.UnboundedProcessor.drainRegular
  [ 2] io.rsocket.internal.UnboundedProcessor.drain
  [ 3] io.rsocket.internal.UnboundedProcessor.onNext
  [ 4] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 5] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 6] reactor.core.publisher.MonoDefer.subscribe
  [ 7] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 8] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 9] reactor.core.publisher.MonoPeekFuseable.subscribe
  [10] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [13] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [14] reactor.core.publisher.FluxRange$RangeSubscription.request
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [16] reactor.core.publisher.FluxRange.subscribe
  [17] reactor.core.publisher.FluxFlatMap.subscribe
  [18] reactor.core.publisher.Flux.subscribe
  [19] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [20] reactor.core.publisher.Operators$MonoSubscriber.complete
  [21] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [24] reactor.core.publisher.MonoIgnoreThen.subscribe
  [25] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [26] reactor.core.publisher.Operators$ScalarSubscription.request
  [27] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoDefer.subscribe
  [30] reactor.core.publisher.MonoFlatMap.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany.subscribe
  [32] reactor.core.publisher.FluxPeek.subscribe
  [33] reactor.core.publisher.FluxPeek.subscribe
  [34] reactor.core.publisher.Flux.blockLast
  [35] io.rsocket.transport.local.LocalPingPong.main

--- 170000000 ns (0.64%), 17 samples
  [ 0] io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue.offer
  [ 1] io.netty.buffer.PoolThreadCache$MemoryRegionCache.add
  [ 2] io.netty.buffer.PoolThreadCache.add
  [ 3] io.netty.buffer.PoolArena.free
  [ 4] io.netty.buffer.PooledByteBuf.deallocate
  [ 5] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 6] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 7] io.netty.util.ReferenceCountUtil.release
  [ 8] io.netty.util.ReferenceCountUtil.safeRelease
  [ 9] io.rsocket.buffer.Tuple2ByteBuf.deallocate
  [10] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [11] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [12] io.rsocket.RSocketClient.handleIncomingFrames
  [13] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.UnicastProcessor.drainRegular
  [21] reactor.core.publisher.UnicastProcessor.drain
  [22] reactor.core.publisher.UnicastProcessor.onNext
  [23] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [24] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [26] io.rsocket.internal.UnboundedProcessor.drainRegular
  [27] io.rsocket.internal.UnboundedProcessor.drain
  [28] io.rsocket.internal.UnboundedProcessor.onNext
  [29] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [30] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [31] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [32] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [33] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [34] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [35] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [38] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [39] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [40] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [41] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [42] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [43] reactor.core.publisher.MonoJust.subscribe
  [44] reactor.core.publisher.MonoPeekFuseable.subscribe
  [45] reactor.core.publisher.MonoMapFuseable.subscribe
  [46] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [47] reactor.core.publisher.MonoDoFinally.subscribe
  [48] reactor.core.publisher.Mono.subscribe
  [49] reactor.core.publisher.Mono.subscribeWith
  [50] reactor.core.publisher.Mono.subscribe
  [51] reactor.core.publisher.Mono.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] io.rsocket.RSocketServer.handleRequestResponse
  [54] io.rsocket.RSocketServer.handleFrame
  [55] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [56] reactor.core.publisher.LambdaSubscriber.onNext
  [57] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [58] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [59] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [60] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [61] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [62] reactor.core.publisher.UnicastProcessor.drainRegular
  [63] reactor.core.publisher.UnicastProcessor.drain
  [64] reactor.core.publisher.UnicastProcessor.onNext
  [65] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [66] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [67] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [68] io.rsocket.internal.UnboundedProcessor.drainRegular
  [69] io.rsocket.internal.UnboundedProcessor.drain
  [70] io.rsocket.internal.UnboundedProcessor.onNext
  [71] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [72] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [73] reactor.core.publisher.MonoDefer.subscribe
  [74] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [75] reactor.core.publisher.MonoIgnoreThen.subscribe
  [76] reactor.core.publisher.MonoPeekFuseable.subscribe
  [77] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [78] reactor.core.publisher.Mono.subscribe
  [79] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [80] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [81] reactor.core.publisher.FluxRange$RangeSubscription.request
  [82] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [83] reactor.core.publisher.FluxRange.subscribe
  [84] reactor.core.publisher.FluxFlatMap.subscribe
  [85] reactor.core.publisher.Flux.subscribe
  [86] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [87] reactor.core.publisher.Operators$MonoSubscriber.complete
  [88] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [89] reactor.core.publisher.Operators$MonoSubscriber.complete
  [90] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [91] reactor.core.publisher.MonoIgnoreThen.subscribe
  [92] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [93] reactor.core.publisher.Operators$ScalarSubscription.request
  [94] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [95] reactor.core.publisher.MonoJust.subscribe
  [96] reactor.core.publisher.MonoDefer.subscribe
  [97] reactor.core.publisher.MonoFlatMap.subscribe
  [98] reactor.core.publisher.MonoFlatMapMany.subscribe
  [99] reactor.core.publisher.FluxPeek.subscribe
  [100] reactor.core.publisher.FluxPeek.subscribe
  [101] reactor.core.publisher.Flux.blockLast
  [102] io.rsocket.transport.local.LocalPingPong.main

--- 170000000 ns (0.64%), 17 samples
  [ 0] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 1] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 2] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 3] io.rsocket.frame.FrameHeaderFlyweight.encode
  [ 4] io.rsocket.frame.RequestFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 7] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 8] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 9] reactor.core.publisher.MonoDefer.subscribe
  [10] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [11] reactor.core.publisher.MonoIgnoreThen.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [19] reactor.core.publisher.FluxRange.subscribe
  [20] reactor.core.publisher.FluxFlatMap.subscribe
  [21] reactor.core.publisher.Flux.subscribe
  [22] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.Operators$ScalarSubscription.request
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [31] reactor.core.publisher.MonoJust.subscribe
  [32] reactor.core.publisher.MonoDefer.subscribe
  [33] reactor.core.publisher.MonoFlatMap.subscribe
  [34] reactor.core.publisher.MonoFlatMapMany.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.Flux.blockLast
  [38] io.rsocket.transport.local.LocalPingPong.main

--- 160000000 ns (0.60%), 16 samples
  [ 0] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [ 1] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [ 2] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [ 3] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [ 4] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 5] reactor.core.publisher.Operators$ScalarSubscription.request
  [ 6] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [ 7] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [ 8] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [ 9] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [10] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [12] reactor.core.publisher.MonoJust.subscribe
  [13] reactor.core.publisher.MonoPeekFuseable.subscribe
  [14] reactor.core.publisher.MonoMapFuseable.subscribe
  [15] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [16] reactor.core.publisher.MonoDoFinally.subscribe
  [17] reactor.core.publisher.Mono.subscribe
  [18] reactor.core.publisher.Mono.subscribeWith
  [19] reactor.core.publisher.Mono.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] reactor.core.publisher.Mono.subscribe
  [22] io.rsocket.RSocketServer.handleRequestResponse
  [23] io.rsocket.RSocketServer.handleFrame
  [24] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [25] reactor.core.publisher.LambdaSubscriber.onNext
  [26] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [27] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [28] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [29] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [30] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [31] reactor.core.publisher.UnicastProcessor.drainRegular
  [32] reactor.core.publisher.UnicastProcessor.drain
  [33] reactor.core.publisher.UnicastProcessor.onNext
  [34] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [35] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [37] io.rsocket.internal.UnboundedProcessor.drainRegular
  [38] io.rsocket.internal.UnboundedProcessor.drain
  [39] io.rsocket.internal.UnboundedProcessor.onNext
  [40] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [41] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [42] reactor.core.publisher.MonoDefer.subscribe
  [43] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [44] reactor.core.publisher.MonoIgnoreThen.subscribe
  [45] reactor.core.publisher.MonoPeekFuseable.subscribe
  [46] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [47] reactor.core.publisher.Mono.subscribe
  [48] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [49] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [50] reactor.core.publisher.FluxRange$RangeSubscription.request
  [51] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [52] reactor.core.publisher.FluxRange.subscribe
  [53] reactor.core.publisher.FluxFlatMap.subscribe
  [54] reactor.core.publisher.Flux.subscribe
  [55] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [56] reactor.core.publisher.Operators$MonoSubscriber.complete
  [57] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [58] reactor.core.publisher.Operators$MonoSubscriber.complete
  [59] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [60] reactor.core.publisher.MonoIgnoreThen.subscribe
  [61] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [62] reactor.core.publisher.Operators$ScalarSubscription.request
  [63] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [64] reactor.core.publisher.MonoJust.subscribe
  [65] reactor.core.publisher.MonoDefer.subscribe
  [66] reactor.core.publisher.MonoFlatMap.subscribe
  [67] reactor.core.publisher.MonoFlatMapMany.subscribe
  [68] reactor.core.publisher.FluxPeek.subscribe
  [69] reactor.core.publisher.FluxPeek.subscribe
  [70] reactor.core.publisher.Flux.blockLast
  [71] io.rsocket.transport.local.LocalPingPong.main

--- 160000000 ns (0.60%), 16 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 1] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 2] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 3] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 5] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 6] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 7] reactor.core.publisher.MonoProcessor.subscribe
  [ 8] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 9] reactor.core.publisher.MonoPeek.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.MonoDefer.subscribe
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [13] reactor.core.publisher.MonoIgnoreThen.subscribe
  [14] reactor.core.publisher.MonoPeekFuseable.subscribe
  [15] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [19] reactor.core.publisher.FluxRange$RangeSubscription.request
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.FluxRange.subscribe
  [22] reactor.core.publisher.FluxFlatMap.subscribe
  [23] reactor.core.publisher.Flux.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [27] reactor.core.publisher.Operators$MonoSubscriber.complete
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoFlatMap.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.Flux.blockLast
  [40] io.rsocket.transport.local.LocalPingPong.main

--- 160000000 ns (0.60%), 16 samples
  [ 0] io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue.offer
  [ 1] io.netty.buffer.PoolThreadCache$MemoryRegionCache.add
  [ 2] io.netty.buffer.PoolThreadCache.add
  [ 3] io.netty.buffer.PoolArena.free
  [ 4] io.netty.buffer.PooledByteBuf.deallocate
  [ 5] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 6] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 7] io.rsocket.buffer.Tuple3ByteBuf.deallocate
  [ 8] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 9] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [10] io.netty.util.ReferenceCountUtil.release
  [11] io.netty.util.ReferenceCountUtil.safeRelease
  [12] io.rsocket.RSocketServer.handleFrame
  [13] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.UnicastProcessor.drainRegular
  [21] reactor.core.publisher.UnicastProcessor.drain
  [22] reactor.core.publisher.UnicastProcessor.onNext
  [23] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [24] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [26] io.rsocket.internal.UnboundedProcessor.drainRegular
  [27] io.rsocket.internal.UnboundedProcessor.drain
  [28] io.rsocket.internal.UnboundedProcessor.onNext
  [29] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [30] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [31] reactor.core.publisher.MonoDefer.subscribe
  [32] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [33] reactor.core.publisher.MonoIgnoreThen.subscribe
  [34] reactor.core.publisher.MonoPeekFuseable.subscribe
  [35] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [38] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [39] reactor.core.publisher.FluxRange$RangeSubscription.request
  [40] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [41] reactor.core.publisher.FluxRange.subscribe
  [42] reactor.core.publisher.FluxFlatMap.subscribe
  [43] reactor.core.publisher.Flux.subscribe
  [44] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [45] reactor.core.publisher.Operators$MonoSubscriber.complete
  [46] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [47] reactor.core.publisher.Operators$MonoSubscriber.complete
  [48] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [49] reactor.core.publisher.MonoIgnoreThen.subscribe
  [50] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [51] reactor.core.publisher.Operators$ScalarSubscription.request
  [52] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [53] reactor.core.publisher.MonoJust.subscribe
  [54] reactor.core.publisher.MonoDefer.subscribe
  [55] reactor.core.publisher.MonoFlatMap.subscribe
  [56] reactor.core.publisher.MonoFlatMapMany.subscribe
  [57] reactor.core.publisher.FluxPeek.subscribe
  [58] reactor.core.publisher.FluxPeek.subscribe
  [59] reactor.core.publisher.Flux.blockLast
  [60] io.rsocket.transport.local.LocalPingPong.main

--- 150000000 ns (0.56%), 15 samples
  [ 0] io.netty.buffer.AbstractByteBuf.readInt
  [ 1] io.rsocket.frame.FrameHeaderFlyweight.streamId
  [ 2] io.rsocket.internal.ClientServerInputMultiplexer.lambda$new$0
  [ 3] io.rsocket.internal.ClientServerInputMultiplexer$$Lambda$38.556529265.apply
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [16] reactor.core.publisher.MonoDefer.subscribe
  [17] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [18] reactor.core.publisher.MonoIgnoreThen.subscribe
  [19] reactor.core.publisher.MonoPeekFuseable.subscribe
  [20] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [21] reactor.core.publisher.Mono.subscribe
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [24] reactor.core.publisher.FluxRange$RangeSubscription.request
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [26] reactor.core.publisher.FluxRange.subscribe
  [27] reactor.core.publisher.FluxFlatMap.subscribe
  [28] reactor.core.publisher.Flux.subscribe
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [34] reactor.core.publisher.MonoIgnoreThen.subscribe
  [35] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.MonoJust.subscribe
  [39] reactor.core.publisher.MonoDefer.subscribe
  [40] reactor.core.publisher.MonoFlatMap.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.Flux.blockLast
  [45] io.rsocket.transport.local.LocalPingPong.main

--- 150000000 ns (0.56%), 15 samples
  [ 0] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 1] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 2] reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit
  [ 3] reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 6] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 7] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [ 8] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 9] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [10] reactor.core.publisher.Operators$MonoSubscriber.complete
  [11] reactor.core.publisher.MonoProcessor.subscribe
  [12] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [13] reactor.core.publisher.MonoPeek.subscribe
  [14] reactor.core.publisher.MonoDoFinally.subscribe
  [15] reactor.core.publisher.MonoDefer.subscribe
  [16] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [17] reactor.core.publisher.MonoIgnoreThen.subscribe
  [18] reactor.core.publisher.MonoPeekFuseable.subscribe
  [19] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [22] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [23] reactor.core.publisher.FluxRange$RangeSubscription.request
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [25] reactor.core.publisher.FluxRange.subscribe
  [26] reactor.core.publisher.FluxFlatMap.subscribe
  [27] reactor.core.publisher.Flux.subscribe
  [28] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [29] reactor.core.publisher.Operators$MonoSubscriber.complete
  [30] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [31] reactor.core.publisher.Operators$MonoSubscriber.complete
  [32] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [33] reactor.core.publisher.MonoIgnoreThen.subscribe
  [34] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [35] reactor.core.publisher.Operators$ScalarSubscription.request
  [36] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [37] reactor.core.publisher.MonoJust.subscribe
  [38] reactor.core.publisher.MonoDefer.subscribe
  [39] reactor.core.publisher.MonoFlatMap.subscribe
  [40] reactor.core.publisher.MonoFlatMapMany.subscribe
  [41] reactor.core.publisher.FluxPeek.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.Flux.blockLast
  [44] io.rsocket.transport.local.LocalPingPong.main

--- 150000000 ns (0.56%), 15 samples
  [ 0] reactor.core.publisher.Mono.onAssembly
  [ 1] reactor.core.publisher.Mono.doOnSignal
  [ 2] reactor.core.publisher.Mono.doOnError
  [ 3] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 4] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 5] reactor.core.publisher.MonoDefer.subscribe
  [ 6] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 7] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 8] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 9] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [10] reactor.core.publisher.Mono.subscribe
  [11] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [12] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [13] reactor.core.publisher.FluxRange$RangeSubscription.request
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [15] reactor.core.publisher.FluxRange.subscribe
  [16] reactor.core.publisher.FluxFlatMap.subscribe
  [17] reactor.core.publisher.Flux.subscribe
  [18] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [19] reactor.core.publisher.Operators$MonoSubscriber.complete
  [20] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [21] reactor.core.publisher.Operators$MonoSubscriber.complete
  [22] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [23] reactor.core.publisher.MonoIgnoreThen.subscribe
  [24] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [25] reactor.core.publisher.Operators$ScalarSubscription.request
  [26] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [27] reactor.core.publisher.MonoJust.subscribe
  [28] reactor.core.publisher.MonoDefer.subscribe
  [29] reactor.core.publisher.MonoFlatMap.subscribe
  [30] reactor.core.publisher.MonoFlatMapMany.subscribe
  [31] reactor.core.publisher.FluxPeek.subscribe
  [32] reactor.core.publisher.FluxPeek.subscribe
  [33] reactor.core.publisher.Flux.blockLast
  [34] io.rsocket.transport.local.LocalPingPong.main

--- 140000000 ns (0.52%), 14 samples
  [ 0] reactor.core.publisher.FlatMapTracker.remove
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [ 2] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [ 3] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 6] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 7] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [ 8] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 9] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [10] reactor.core.publisher.Operators$MonoSubscriber.complete
  [11] reactor.core.publisher.MonoProcessor.subscribe
  [12] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [13] reactor.core.publisher.MonoPeek.subscribe
  [14] reactor.core.publisher.MonoDoFinally.subscribe
  [15] reactor.core.publisher.MonoDefer.subscribe
  [16] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [17] reactor.core.publisher.MonoIgnoreThen.subscribe
  [18] reactor.core.publisher.MonoPeekFuseable.subscribe
  [19] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [22] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [23] reactor.core.publisher.FluxRange$RangeSubscription.request
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [25] reactor.core.publisher.FluxRange.subscribe
  [26] reactor.core.publisher.FluxFlatMap.subscribe
  [27] reactor.core.publisher.Flux.subscribe
  [28] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [29] reactor.core.publisher.Operators$MonoSubscriber.complete
  [30] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [31] reactor.core.publisher.Operators$MonoSubscriber.complete
  [32] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [33] reactor.core.publisher.MonoIgnoreThen.subscribe
  [34] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [35] reactor.core.publisher.Operators$ScalarSubscription.request
  [36] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [37] reactor.core.publisher.MonoJust.subscribe
  [38] reactor.core.publisher.MonoDefer.subscribe
  [39] reactor.core.publisher.MonoFlatMap.subscribe
  [40] reactor.core.publisher.MonoFlatMapMany.subscribe
  [41] reactor.core.publisher.FluxPeek.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.Flux.blockLast
  [44] io.rsocket.transport.local.LocalPingPong.main

--- 140000000 ns (0.52%), 14 samples
  [ 0] io.netty.buffer.AbstractByteBuf.slice
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.slice
  [ 2] io.rsocket.buffer.Tuple3ByteBuf.slice
  [ 3] io.netty.buffer.AbstractByteBuf.readSlice
  [ 4] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 5] io.rsocket.frame.RequestFlyweight.data
  [ 6] io.rsocket.frame.RequestResponseFrameFlyweight.data
  [ 7] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 8] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 9] io.rsocket.RSocketServer.handleFrame
  [10] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [11] reactor.core.publisher.LambdaSubscriber.onNext
  [12] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [16] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [17] reactor.core.publisher.UnicastProcessor.drainRegular
  [18] reactor.core.publisher.UnicastProcessor.drain
  [19] reactor.core.publisher.UnicastProcessor.onNext
  [20] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [21] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] io.rsocket.internal.UnboundedProcessor.drainRegular
  [24] io.rsocket.internal.UnboundedProcessor.drain
  [25] io.rsocket.internal.UnboundedProcessor.onNext
  [26] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [27] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [28] reactor.core.publisher.MonoDefer.subscribe
  [29] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [30] reactor.core.publisher.MonoIgnoreThen.subscribe
  [31] reactor.core.publisher.MonoPeekFuseable.subscribe
  [32] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [35] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [36] reactor.core.publisher.FluxRange$RangeSubscription.request
  [37] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.FluxRange.subscribe
  [39] reactor.core.publisher.FluxFlatMap.subscribe
  [40] reactor.core.publisher.Flux.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [42] reactor.core.publisher.Operators$MonoSubscriber.complete
  [43] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [44] reactor.core.publisher.Operators$MonoSubscriber.complete
  [45] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [46] reactor.core.publisher.MonoIgnoreThen.subscribe
  [47] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [48] reactor.core.publisher.Operators$ScalarSubscription.request
  [49] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [50] reactor.core.publisher.MonoJust.subscribe
  [51] reactor.core.publisher.MonoDefer.subscribe
  [52] reactor.core.publisher.MonoFlatMap.subscribe
  [53] reactor.core.publisher.MonoFlatMapMany.subscribe
  [54] reactor.core.publisher.FluxPeek.subscribe
  [55] reactor.core.publisher.FluxPeek.subscribe
  [56] reactor.core.publisher.Flux.blockLast
  [57] io.rsocket.transport.local.LocalPingPong.main

--- 140000000 ns (0.52%), 14 samples
  [ 0] io.rsocket.RSocketClient.handleFrame
  [ 1] io.rsocket.RSocketClient.handleIncomingFrames
  [ 2] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 3] reactor.core.publisher.LambdaSubscriber.onNext
  [ 4] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 5] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 6] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 8] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 9] reactor.core.publisher.UnicastProcessor.drainRegular
  [10] reactor.core.publisher.UnicastProcessor.drain
  [11] reactor.core.publisher.UnicastProcessor.onNext
  [12] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [13] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [14] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [15] io.rsocket.internal.UnboundedProcessor.drainRegular
  [16] io.rsocket.internal.UnboundedProcessor.drain
  [17] io.rsocket.internal.UnboundedProcessor.onNext
  [18] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [19] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [20] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [21] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [22] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [23] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [25] reactor.core.publisher.Operators$ScalarSubscription.request
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [27] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [28] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [29] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [30] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [32] reactor.core.publisher.MonoJust.subscribe
  [33] reactor.core.publisher.MonoPeekFuseable.subscribe
  [34] reactor.core.publisher.MonoMapFuseable.subscribe
  [35] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [36] reactor.core.publisher.MonoDoFinally.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.Mono.subscribeWith
  [39] reactor.core.publisher.Mono.subscribe
  [40] reactor.core.publisher.Mono.subscribe
  [41] reactor.core.publisher.Mono.subscribe
  [42] io.rsocket.RSocketServer.handleRequestResponse
  [43] io.rsocket.RSocketServer.handleFrame
  [44] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [45] reactor.core.publisher.LambdaSubscriber.onNext
  [46] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [47] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [48] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [49] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [50] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [51] reactor.core.publisher.UnicastProcessor.drainRegular
  [52] reactor.core.publisher.UnicastProcessor.drain
  [53] reactor.core.publisher.UnicastProcessor.onNext
  [54] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [55] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [56] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [57] io.rsocket.internal.UnboundedProcessor.drainRegular
  [58] io.rsocket.internal.UnboundedProcessor.drain
  [59] io.rsocket.internal.UnboundedProcessor.onNext
  [60] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [61] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [62] reactor.core.publisher.MonoDefer.subscribe
  [63] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [64] reactor.core.publisher.MonoIgnoreThen.subscribe
  [65] reactor.core.publisher.MonoPeekFuseable.subscribe
  [66] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [67] reactor.core.publisher.Mono.subscribe
  [68] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [69] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [70] reactor.core.publisher.FluxRange$RangeSubscription.request
  [71] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [72] reactor.core.publisher.FluxRange.subscribe
  [73] reactor.core.publisher.FluxFlatMap.subscribe
  [74] reactor.core.publisher.Flux.subscribe
  [75] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [76] reactor.core.publisher.Operators$MonoSubscriber.complete
  [77] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [78] reactor.core.publisher.Operators$MonoSubscriber.complete
  [79] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [80] reactor.core.publisher.MonoIgnoreThen.subscribe
  [81] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [82] reactor.core.publisher.Operators$ScalarSubscription.request
  [83] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [84] reactor.core.publisher.MonoJust.subscribe
  [85] reactor.core.publisher.MonoDefer.subscribe
  [86] reactor.core.publisher.MonoFlatMap.subscribe
  [87] reactor.core.publisher.MonoFlatMapMany.subscribe
  [88] reactor.core.publisher.FluxPeek.subscribe
  [89] reactor.core.publisher.FluxPeek.subscribe
  [90] reactor.core.publisher.Flux.blockLast
  [91] io.rsocket.transport.local.LocalPingPong.main

--- 140000000 ns (0.52%), 14 samples
  [ 0] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 1] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 2] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 3] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 4] reactor.core.publisher.Mono.subscribe
  [ 5] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 6] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [ 7] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 8] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [ 9] reactor.core.publisher.FluxRange.subscribe
  [10] reactor.core.publisher.FluxFlatMap.subscribe
  [11] reactor.core.publisher.Flux.subscribe
  [12] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [13] reactor.core.publisher.Operators$MonoSubscriber.complete
  [14] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [15] reactor.core.publisher.Operators$MonoSubscriber.complete
  [16] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [17] reactor.core.publisher.MonoIgnoreThen.subscribe
  [18] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [19] reactor.core.publisher.Operators$ScalarSubscription.request
  [20] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.MonoJust.subscribe
  [22] reactor.core.publisher.MonoDefer.subscribe
  [23] reactor.core.publisher.MonoFlatMap.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany.subscribe
  [25] reactor.core.publisher.FluxPeek.subscribe
  [26] reactor.core.publisher.FluxPeek.subscribe
  [27] reactor.core.publisher.Flux.blockLast
  [28] io.rsocket.transport.local.LocalPingPong.main

--- 130000000 ns (0.49%), 13 samples
  [ 0] reactor.util.concurrent.SpscLinkedArrayQueue.poll
  [ 1] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 2] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [16] reactor.core.publisher.MonoDefer.subscribe
  [17] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [18] reactor.core.publisher.MonoIgnoreThen.subscribe
  [19] reactor.core.publisher.MonoPeekFuseable.subscribe
  [20] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [21] reactor.core.publisher.Mono.subscribe
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [24] reactor.core.publisher.FluxRange$RangeSubscription.request
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [26] reactor.core.publisher.FluxRange.subscribe
  [27] reactor.core.publisher.FluxFlatMap.subscribe
  [28] reactor.core.publisher.Flux.subscribe
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [34] reactor.core.publisher.MonoIgnoreThen.subscribe
  [35] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.MonoJust.subscribe
  [39] reactor.core.publisher.MonoDefer.subscribe
  [40] reactor.core.publisher.MonoFlatMap.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.Flux.blockLast
  [45] io.rsocket.transport.local.LocalPingPong.main

--- 130000000 ns (0.49%), 13 samples
  [ 0] io.netty.buffer.AbstractByteBuf.writerIndex
  [ 1] io.rsocket.buffer.Tuple3ByteBuf.wrap
  [ 2] io.rsocket.buffer.Tuple3ByteBuf.create
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 4] io.rsocket.frame.RequestFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 7] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 8] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 9] reactor.core.publisher.MonoDefer.subscribe
  [10] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [11] reactor.core.publisher.MonoIgnoreThen.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [19] reactor.core.publisher.FluxRange.subscribe
  [20] reactor.core.publisher.FluxFlatMap.subscribe
  [21] reactor.core.publisher.Flux.subscribe
  [22] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.Operators$ScalarSubscription.request
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [31] reactor.core.publisher.MonoJust.subscribe
  [32] reactor.core.publisher.MonoDefer.subscribe
  [33] reactor.core.publisher.MonoFlatMap.subscribe
  [34] reactor.core.publisher.MonoFlatMapMany.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.Flux.blockLast
  [38] io.rsocket.transport.local.LocalPingPong.main

--- 120000000 ns (0.45%), 12 samples
  [ 0] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
  [ 2] reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
  [ 3] reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 6] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 7] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [ 8] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 9] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [10] reactor.core.publisher.Operators$MonoSubscriber.complete
  [11] reactor.core.publisher.MonoProcessor.subscribe
  [12] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [13] reactor.core.publisher.MonoPeek.subscribe
  [14] reactor.core.publisher.MonoDoFinally.subscribe
  [15] reactor.core.publisher.MonoDefer.subscribe
  [16] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [17] reactor.core.publisher.MonoIgnoreThen.subscribe
  [18] reactor.core.publisher.MonoPeekFuseable.subscribe
  [19] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [22] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [23] reactor.core.publisher.FluxRange$RangeSubscription.request
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [25] reactor.core.publisher.FluxRange.subscribe
  [26] reactor.core.publisher.FluxFlatMap.subscribe
  [27] reactor.core.publisher.Flux.subscribe
  [28] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [29] reactor.core.publisher.Operators$MonoSubscriber.complete
  [30] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [31] reactor.core.publisher.Operators$MonoSubscriber.complete
  [32] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [33] reactor.core.publisher.MonoIgnoreThen.subscribe
  [34] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [35] reactor.core.publisher.Operators$ScalarSubscription.request
  [36] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [37] reactor.core.publisher.MonoJust.subscribe
  [38] reactor.core.publisher.MonoDefer.subscribe
  [39] reactor.core.publisher.MonoFlatMap.subscribe
  [40] reactor.core.publisher.MonoFlatMapMany.subscribe
  [41] reactor.core.publisher.FluxPeek.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.Flux.blockLast
  [44] io.rsocket.transport.local.LocalPingPong.main

--- 120000000 ns (0.45%), 12 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.request
  [ 1] reactor.core.publisher.LambdaMonoSubscriber.onSubscribe
  [ 2] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 3] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [ 4] reactor.core.publisher.MonoDoFinally.subscribe
  [ 5] reactor.core.publisher.Mono.subscribe
  [ 6] reactor.core.publisher.Mono.subscribeWith
  [ 7] reactor.core.publisher.Mono.subscribe
  [ 8] reactor.core.publisher.Mono.subscribe
  [ 9] reactor.core.publisher.Mono.subscribe
  [10] io.rsocket.RSocketServer.handleRequestResponse
  [11] io.rsocket.RSocketServer.handleFrame
  [12] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [13] reactor.core.publisher.LambdaSubscriber.onNext
  [14] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [18] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [19] reactor.core.publisher.UnicastProcessor.drainRegular
  [20] reactor.core.publisher.UnicastProcessor.drain
  [21] reactor.core.publisher.UnicastProcessor.onNext
  [22] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [23] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [25] io.rsocket.internal.UnboundedProcessor.drainRegular
  [26] io.rsocket.internal.UnboundedProcessor.drain
  [27] io.rsocket.internal.UnboundedProcessor.onNext
  [28] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [29] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [30] reactor.core.publisher.MonoDefer.subscribe
  [31] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [32] reactor.core.publisher.MonoIgnoreThen.subscribe
  [33] reactor.core.publisher.MonoPeekFuseable.subscribe
  [34] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [37] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [38] reactor.core.publisher.FluxRange$RangeSubscription.request
  [39] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [40] reactor.core.publisher.FluxRange.subscribe
  [41] reactor.core.publisher.FluxFlatMap.subscribe
  [42] reactor.core.publisher.Flux.subscribe
  [43] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [44] reactor.core.publisher.Operators$MonoSubscriber.complete
  [45] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [46] reactor.core.publisher.Operators$MonoSubscriber.complete
  [47] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [48] reactor.core.publisher.MonoIgnoreThen.subscribe
  [49] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [50] reactor.core.publisher.Operators$ScalarSubscription.request
  [51] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [52] reactor.core.publisher.MonoJust.subscribe
  [53] reactor.core.publisher.MonoDefer.subscribe
  [54] reactor.core.publisher.MonoFlatMap.subscribe
  [55] reactor.core.publisher.MonoFlatMapMany.subscribe
  [56] reactor.core.publisher.FluxPeek.subscribe
  [57] reactor.core.publisher.FluxPeek.subscribe
  [58] reactor.core.publisher.Flux.blockLast
  [59] io.rsocket.transport.local.LocalPingPong.main

--- 120000000 ns (0.45%), 12 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 1] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 2] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 3] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 4] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 5] reactor.core.publisher.Mono.subscribe
  [ 6] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 7] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [ 8] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 9] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [10] reactor.core.publisher.FluxRange.subscribe
  [11] reactor.core.publisher.FluxFlatMap.subscribe
  [12] reactor.core.publisher.Flux.subscribe
  [13] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [14] reactor.core.publisher.Operators$MonoSubscriber.complete
  [15] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [16] reactor.core.publisher.Operators$MonoSubscriber.complete
  [17] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [18] reactor.core.publisher.MonoIgnoreThen.subscribe
  [19] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [20] reactor.core.publisher.Operators$ScalarSubscription.request
  [21] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [22] reactor.core.publisher.MonoJust.subscribe
  [23] reactor.core.publisher.MonoDefer.subscribe
  [24] reactor.core.publisher.MonoFlatMap.subscribe
  [25] reactor.core.publisher.MonoFlatMapMany.subscribe
  [26] reactor.core.publisher.FluxPeek.subscribe
  [27] reactor.core.publisher.FluxPeek.subscribe
  [28] reactor.core.publisher.Flux.blockLast
  [29] io.rsocket.transport.local.LocalPingPong.main

--- 120000000 ns (0.45%), 12 samples
  [ 0] java.lang.Integer.valueOf
  [ 1] io.rsocket.RSocketServer.lambda$handleRequestResponse$11
  [ 2] io.rsocket.RSocketServer$$Lambda$68.225472281.accept
  [ 3] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 5] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete
  [ 6] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete
  [ 7] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 8] reactor.core.publisher.Operators$ScalarSubscription.request
  [ 9] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [10] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [11] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [12] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [13] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [14] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [15] reactor.core.publisher.MonoJust.subscribe
  [16] reactor.core.publisher.MonoPeekFuseable.subscribe
  [17] reactor.core.publisher.MonoMapFuseable.subscribe
  [18] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [19] reactor.core.publisher.MonoDoFinally.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] reactor.core.publisher.Mono.subscribeWith
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.Mono.subscribe
  [25] io.rsocket.RSocketServer.handleRequestResponse
  [26] io.rsocket.RSocketServer.handleFrame
  [27] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [28] reactor.core.publisher.LambdaSubscriber.onNext
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [33] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [34] reactor.core.publisher.UnicastProcessor.drainRegular
  [35] reactor.core.publisher.UnicastProcessor.drain
  [36] reactor.core.publisher.UnicastProcessor.onNext
  [37] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [38] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [39] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [40] io.rsocket.internal.UnboundedProcessor.drainRegular
  [41] io.rsocket.internal.UnboundedProcessor.drain
  [42] io.rsocket.internal.UnboundedProcessor.onNext
  [43] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [44] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [45] reactor.core.publisher.MonoDefer.subscribe
  [46] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [47] reactor.core.publisher.MonoIgnoreThen.subscribe
  [48] reactor.core.publisher.MonoPeekFuseable.subscribe
  [49] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [50] reactor.core.publisher.Mono.subscribe
  [51] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [52] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [53] reactor.core.publisher.FluxRange$RangeSubscription.request
  [54] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [55] reactor.core.publisher.FluxRange.subscribe
  [56] reactor.core.publisher.FluxFlatMap.subscribe
  [57] reactor.core.publisher.Flux.subscribe
  [58] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [59] reactor.core.publisher.Operators$MonoSubscriber.complete
  [60] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [61] reactor.core.publisher.Operators$MonoSubscriber.complete
  [62] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [63] reactor.core.publisher.MonoIgnoreThen.subscribe
  [64] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [65] reactor.core.publisher.Operators$ScalarSubscription.request
  [66] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [67] reactor.core.publisher.MonoJust.subscribe
  [68] reactor.core.publisher.MonoDefer.subscribe
  [69] reactor.core.publisher.MonoFlatMap.subscribe
  [70] reactor.core.publisher.MonoFlatMapMany.subscribe
  [71] reactor.core.publisher.FluxPeek.subscribe
  [72] reactor.core.publisher.FluxPeek.subscribe
  [73] reactor.core.publisher.Flux.blockLast
  [74] io.rsocket.transport.local.LocalPingPong.main

--- 110000000 ns (0.41%), 11 samples
  [ 0] io.rsocket.buffer.Tuple2ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.flags
  [ 3] io.rsocket.frame.FrameHeaderFlyweight.hasMetadata
  [ 4] io.rsocket.frame.RequestFlyweight.metadata
  [ 5] io.rsocket.frame.PayloadFrameFlyweight.metadata
  [ 6] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 7] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 8] io.rsocket.RSocketClient.handleFrame
  [ 9] io.rsocket.RSocketClient.handleIncomingFrames
  [10] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [11] reactor.core.publisher.LambdaSubscriber.onNext
  [12] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [16] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [17] reactor.core.publisher.UnicastProcessor.drainRegular
  [18] reactor.core.publisher.UnicastProcessor.drain
  [19] reactor.core.publisher.UnicastProcessor.onNext
  [20] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [21] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] io.rsocket.internal.UnboundedProcessor.drainRegular
  [24] io.rsocket.internal.UnboundedProcessor.drain
  [25] io.rsocket.internal.UnboundedProcessor.onNext
  [26] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [27] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [28] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [29] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [30] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [31] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [32] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [33] reactor.core.publisher.Operators$ScalarSubscription.request
  [34] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [36] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [37] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [38] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [39] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [40] reactor.core.publisher.MonoJust.subscribe
  [41] reactor.core.publisher.MonoPeekFuseable.subscribe
  [42] reactor.core.publisher.MonoMapFuseable.subscribe
  [43] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [44] reactor.core.publisher.MonoDoFinally.subscribe
  [45] reactor.core.publisher.Mono.subscribe
  [46] reactor.core.publisher.Mono.subscribeWith
  [47] reactor.core.publisher.Mono.subscribe
  [48] reactor.core.publisher.Mono.subscribe
  [49] reactor.core.publisher.Mono.subscribe
  [50] io.rsocket.RSocketServer.handleRequestResponse
  [51] io.rsocket.RSocketServer.handleFrame
  [52] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [53] reactor.core.publisher.LambdaSubscriber.onNext
  [54] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [55] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [56] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [57] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [58] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [59] reactor.core.publisher.UnicastProcessor.drainRegular
  [60] reactor.core.publisher.UnicastProcessor.drain
  [61] reactor.core.publisher.UnicastProcessor.onNext
  [62] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [63] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [64] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [65] io.rsocket.internal.UnboundedProcessor.drainRegular
  [66] io.rsocket.internal.UnboundedProcessor.drain
  [67] io.rsocket.internal.UnboundedProcessor.onNext
  [68] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [69] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [70] reactor.core.publisher.MonoDefer.subscribe
  [71] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [72] reactor.core.publisher.MonoIgnoreThen.subscribe
  [73] reactor.core.publisher.MonoPeekFuseable.subscribe
  [74] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [75] reactor.core.publisher.Mono.subscribe
  [76] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [77] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [78] reactor.core.publisher.FluxRange$RangeSubscription.request
  [79] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [80] reactor.core.publisher.FluxRange.subscribe
  [81] reactor.core.publisher.FluxFlatMap.subscribe
  [82] reactor.core.publisher.Flux.subscribe
  [83] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [84] reactor.core.publisher.Operators$MonoSubscriber.complete
  [85] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [86] reactor.core.publisher.Operators$MonoSubscriber.complete
  [87] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [88] reactor.core.publisher.MonoIgnoreThen.subscribe
  [89] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [90] reactor.core.publisher.Operators$ScalarSubscription.request
  [91] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [92] reactor.core.publisher.MonoJust.subscribe
  [93] reactor.core.publisher.MonoDefer.subscribe
  [94] reactor.core.publisher.MonoFlatMap.subscribe
  [95] reactor.core.publisher.MonoFlatMapMany.subscribe
  [96] reactor.core.publisher.FluxPeek.subscribe
  [97] reactor.core.publisher.FluxPeek.subscribe
  [98] reactor.core.publisher.Flux.blockLast
  [99] io.rsocket.transport.local.LocalPingPong.main

--- 110000000 ns (0.41%), 11 samples
  [ 0] reactor.core.publisher.Operators$ScalarSubscription.request
  [ 1] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [ 2] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [ 3] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [ 4] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [ 5] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [ 6] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 7] reactor.core.publisher.MonoJust.subscribe
  [ 8] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 9] reactor.core.publisher.MonoMapFuseable.subscribe
  [10] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [11] reactor.core.publisher.MonoDoFinally.subscribe
  [12] reactor.core.publisher.Mono.subscribe
  [13] reactor.core.publisher.Mono.subscribeWith
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] io.rsocket.RSocketServer.handleRequestResponse
  [18] io.rsocket.RSocketServer.handleFrame
  [19] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [20] reactor.core.publisher.LambdaSubscriber.onNext
  [21] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [23] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [24] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [25] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [26] reactor.core.publisher.UnicastProcessor.drainRegular
  [27] reactor.core.publisher.UnicastProcessor.drain
  [28] reactor.core.publisher.UnicastProcessor.onNext
  [29] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [30] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [32] io.rsocket.internal.UnboundedProcessor.drainRegular
  [33] io.rsocket.internal.UnboundedProcessor.drain
  [34] io.rsocket.internal.UnboundedProcessor.onNext
  [35] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [36] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [37] reactor.core.publisher.MonoDefer.subscribe
  [38] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [39] reactor.core.publisher.MonoIgnoreThen.subscribe
  [40] reactor.core.publisher.MonoPeekFuseable.subscribe
  [41] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [44] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [45] reactor.core.publisher.FluxRange$RangeSubscription.request
  [46] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [47] reactor.core.publisher.FluxRange.subscribe
  [48] reactor.core.publisher.FluxFlatMap.subscribe
  [49] reactor.core.publisher.Flux.subscribe
  [50] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [51] reactor.core.publisher.Operators$MonoSubscriber.complete
  [52] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [53] reactor.core.publisher.Operators$MonoSubscriber.complete
  [54] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [55] reactor.core.publisher.MonoIgnoreThen.subscribe
  [56] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [57] reactor.core.publisher.Operators$ScalarSubscription.request
  [58] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [59] reactor.core.publisher.MonoJust.subscribe
  [60] reactor.core.publisher.MonoDefer.subscribe
  [61] reactor.core.publisher.MonoFlatMap.subscribe
  [62] reactor.core.publisher.MonoFlatMapMany.subscribe
  [63] reactor.core.publisher.FluxPeek.subscribe
  [64] reactor.core.publisher.FluxPeek.subscribe
  [65] reactor.core.publisher.Flux.blockLast
  [66] io.rsocket.transport.local.LocalPingPong.main

--- 110000000 ns (0.41%), 11 samples
  [ 0] io.netty.util.internal.InternalThreadLocalMap.get
  [ 1] io.netty.util.concurrent.FastThreadLocal.get
  [ 2] io.netty.util.Recycler.get
  [ 3] io.netty.buffer.PooledUnsafeDirectByteBuf.newInstance
  [ 4] io.netty.buffer.PoolArena$DirectArena.newByteBuf
  [ 5] io.netty.buffer.PoolArena.allocate
  [ 6] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 7] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 8] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 9] io.netty.buffer.AbstractByteBufAllocator.buffer
  [10] io.rsocket.frame.FrameHeaderFlyweight.encode
  [11] io.rsocket.frame.RequestFlyweight.encode
  [12] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [13] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [14] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [15] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [17] reactor.core.publisher.Operators$ScalarSubscription.request
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [19] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [20] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [21] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [22] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [23] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [24] reactor.core.publisher.MonoJust.subscribe
  [25] reactor.core.publisher.MonoPeekFuseable.subscribe
  [26] reactor.core.publisher.MonoMapFuseable.subscribe
  [27] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [28] reactor.core.publisher.MonoDoFinally.subscribe
  [29] reactor.core.publisher.Mono.subscribe
  [30] reactor.core.publisher.Mono.subscribeWith
  [31] reactor.core.publisher.Mono.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] io.rsocket.RSocketServer.handleRequestResponse
  [35] io.rsocket.RSocketServer.handleFrame
  [36] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [37] reactor.core.publisher.LambdaSubscriber.onNext
  [38] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [39] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [40] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [41] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [42] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [43] reactor.core.publisher.UnicastProcessor.drainRegular
  [44] reactor.core.publisher.UnicastProcessor.drain
  [45] reactor.core.publisher.UnicastProcessor.onNext
  [46] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [47] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [48] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [49] io.rsocket.internal.UnboundedProcessor.drainRegular
  [50] io.rsocket.internal.UnboundedProcessor.drain
  [51] io.rsocket.internal.UnboundedProcessor.onNext
  [52] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [53] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [54] reactor.core.publisher.MonoDefer.subscribe
  [55] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [56] reactor.core.publisher.MonoIgnoreThen.subscribe
  [57] reactor.core.publisher.MonoPeekFuseable.subscribe
  [58] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [59] reactor.core.publisher.Mono.subscribe
  [60] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [61] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [62] reactor.core.publisher.FluxRange$RangeSubscription.request
  [63] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [64] reactor.core.publisher.FluxRange.subscribe
  [65] reactor.core.publisher.FluxFlatMap.subscribe
  [66] reactor.core.publisher.Flux.subscribe
  [67] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [68] reactor.core.publisher.Operators$MonoSubscriber.complete
  [69] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [70] reactor.core.publisher.Operators$MonoSubscriber.complete
  [71] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [72] reactor.core.publisher.MonoIgnoreThen.subscribe
  [73] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [74] reactor.core.publisher.Operators$ScalarSubscription.request
  [75] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [76] reactor.core.publisher.MonoJust.subscribe
  [77] reactor.core.publisher.MonoDefer.subscribe
  [78] reactor.core.publisher.MonoFlatMap.subscribe
  [79] reactor.core.publisher.MonoFlatMapMany.subscribe
  [80] reactor.core.publisher.FluxPeek.subscribe
  [81] reactor.core.publisher.FluxPeek.subscribe
  [82] reactor.core.publisher.Flux.blockLast
  [83] io.rsocket.transport.local.LocalPingPong.main

--- 110000000 ns (0.41%), 11 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 2] io.netty.buffer.AbstractDerivedByteBuf.release0
  [ 3] io.netty.buffer.AbstractDerivedByteBuf.release
  [ 4] io.rsocket.util.ByteBufPayload.deallocate
  [ 5] io.netty.util.AbstractReferenceCounted.release0
  [ 6] io.netty.util.AbstractReferenceCounted.release
  [ 7] io.rsocket.test.PingHandler$1.requestResponse
  [ 8] io.rsocket.RSocketServer.requestResponse
  [ 9] io.rsocket.RSocketServer.handleFrame
  [10] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [11] reactor.core.publisher.LambdaSubscriber.onNext
  [12] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [16] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [17] reactor.core.publisher.UnicastProcessor.drainRegular
  [18] reactor.core.publisher.UnicastProcessor.drain
  [19] reactor.core.publisher.UnicastProcessor.onNext
  [20] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [21] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] io.rsocket.internal.UnboundedProcessor.drainRegular
  [24] io.rsocket.internal.UnboundedProcessor.drain
  [25] io.rsocket.internal.UnboundedProcessor.onNext
  [26] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [27] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [28] reactor.core.publisher.MonoDefer.subscribe
  [29] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [30] reactor.core.publisher.MonoIgnoreThen.subscribe
  [31] reactor.core.publisher.MonoPeekFuseable.subscribe
  [32] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [35] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [36] reactor.core.publisher.FluxRange$RangeSubscription.request
  [37] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.FluxRange.subscribe
  [39] reactor.core.publisher.FluxFlatMap.subscribe
  [40] reactor.core.publisher.Flux.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [42] reactor.core.publisher.Operators$MonoSubscriber.complete
  [43] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [44] reactor.core.publisher.Operators$MonoSubscriber.complete
  [45] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [46] reactor.core.publisher.MonoIgnoreThen.subscribe
  [47] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [48] reactor.core.publisher.Operators$ScalarSubscription.request
  [49] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [50] reactor.core.publisher.MonoJust.subscribe
  [51] reactor.core.publisher.MonoDefer.subscribe
  [52] reactor.core.publisher.MonoFlatMap.subscribe
  [53] reactor.core.publisher.MonoFlatMapMany.subscribe
  [54] reactor.core.publisher.FluxPeek.subscribe
  [55] reactor.core.publisher.FluxPeek.subscribe
  [56] reactor.core.publisher.Flux.blockLast
  [57] io.rsocket.transport.local.LocalPingPong.main

--- 110000000 ns (0.41%), 11 samples
  [ 0] reactor.core.publisher.Mono.onAssembly
  [ 1] reactor.core.publisher.Mono.doFinally
  [ 2] io.rsocket.RSocketServer.handleRequestResponse
  [ 3] io.rsocket.RSocketServer.handleFrame
  [ 4] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 5] reactor.core.publisher.LambdaSubscriber.onNext
  [ 6] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [10] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [11] reactor.core.publisher.UnicastProcessor.drainRegular
  [12] reactor.core.publisher.UnicastProcessor.drain
  [13] reactor.core.publisher.UnicastProcessor.onNext
  [14] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [15] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [17] io.rsocket.internal.UnboundedProcessor.drainRegular
  [18] io.rsocket.internal.UnboundedProcessor.drain
  [19] io.rsocket.internal.UnboundedProcessor.onNext
  [20] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [21] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [22] reactor.core.publisher.MonoDefer.subscribe
  [23] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [24] reactor.core.publisher.MonoIgnoreThen.subscribe
  [25] reactor.core.publisher.MonoPeekFuseable.subscribe
  [26] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [30] reactor.core.publisher.FluxRange$RangeSubscription.request
  [31] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [32] reactor.core.publisher.FluxRange.subscribe
  [33] reactor.core.publisher.FluxFlatMap.subscribe
  [34] reactor.core.publisher.Flux.subscribe
  [35] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [36] reactor.core.publisher.Operators$MonoSubscriber.complete
  [37] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [38] reactor.core.publisher.Operators$MonoSubscriber.complete
  [39] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [40] reactor.core.publisher.MonoIgnoreThen.subscribe
  [41] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [42] reactor.core.publisher.Operators$ScalarSubscription.request
  [43] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [44] reactor.core.publisher.MonoJust.subscribe
  [45] reactor.core.publisher.MonoDefer.subscribe
  [46] reactor.core.publisher.MonoFlatMap.subscribe
  [47] reactor.core.publisher.MonoFlatMapMany.subscribe
  [48] reactor.core.publisher.FluxPeek.subscribe
  [49] reactor.core.publisher.FluxPeek.subscribe
  [50] reactor.core.publisher.Flux.blockLast
  [51] io.rsocket.transport.local.LocalPingPong.main

--- 110000000 ns (0.41%), 11 samples
  [ 0] java.util.Collections$SynchronizedMap.put
  [ 1] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 2] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 3] reactor.core.publisher.MonoDefer.subscribe
  [ 4] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 5] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 6] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 7] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 8] reactor.core.publisher.Mono.subscribe
  [ 9] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [10] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [11] reactor.core.publisher.FluxRange$RangeSubscription.request
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [13] reactor.core.publisher.FluxRange.subscribe
  [14] reactor.core.publisher.FluxFlatMap.subscribe
  [15] reactor.core.publisher.Flux.subscribe
  [16] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [17] reactor.core.publisher.Operators$MonoSubscriber.complete
  [18] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [19] reactor.core.publisher.Operators$MonoSubscriber.complete
  [20] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [21] reactor.core.publisher.MonoIgnoreThen.subscribe
  [22] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.Operators$ScalarSubscription.request
  [24] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [25] reactor.core.publisher.MonoJust.subscribe
  [26] reactor.core.publisher.MonoDefer.subscribe
  [27] reactor.core.publisher.MonoFlatMap.subscribe
  [28] reactor.core.publisher.MonoFlatMapMany.subscribe
  [29] reactor.core.publisher.FluxPeek.subscribe
  [30] reactor.core.publisher.FluxPeek.subscribe
  [31] reactor.core.publisher.Flux.blockLast
  [32] io.rsocket.transport.local.LocalPingPong.main

--- 110000000 ns (0.41%), 11 samples
  [ 0] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 1] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 2] reactor.core.publisher.MonoProcessor.subscribe
  [ 3] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 4] reactor.core.publisher.MonoPeek.subscribe
  [ 5] reactor.core.publisher.MonoDoFinally.subscribe
  [ 6] reactor.core.publisher.MonoDefer.subscribe
  [ 7] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 8] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 9] reactor.core.publisher.MonoPeekFuseable.subscribe
  [10] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [13] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [14] reactor.core.publisher.FluxRange$RangeSubscription.request
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [16] reactor.core.publisher.FluxRange.subscribe
  [17] reactor.core.publisher.FluxFlatMap.subscribe
  [18] reactor.core.publisher.Flux.subscribe
  [19] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [20] reactor.core.publisher.Operators$MonoSubscriber.complete
  [21] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [24] reactor.core.publisher.MonoIgnoreThen.subscribe
  [25] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [26] reactor.core.publisher.Operators$ScalarSubscription.request
  [27] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoDefer.subscribe
  [30] reactor.core.publisher.MonoFlatMap.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany.subscribe
  [32] reactor.core.publisher.FluxPeek.subscribe
  [33] reactor.core.publisher.FluxPeek.subscribe
  [34] reactor.core.publisher.Flux.blockLast
  [35] io.rsocket.transport.local.LocalPingPong.main

--- 110000000 ns (0.41%), 11 samples
  [ 0] reactor.core.publisher.FluxPeek$PeekSubscriber.request
  [ 1] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.request
  [ 2] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onSubscribe
  [ 3] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 4] reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe
  [ 5] reactor.core.publisher.MonoProcessor.subscribe
  [ 6] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 7] reactor.core.publisher.MonoPeek.subscribe
  [ 8] reactor.core.publisher.MonoDoFinally.subscribe
  [ 9] reactor.core.publisher.MonoDefer.subscribe
  [10] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [11] reactor.core.publisher.MonoIgnoreThen.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [19] reactor.core.publisher.FluxRange.subscribe
  [20] reactor.core.publisher.FluxFlatMap.subscribe
  [21] reactor.core.publisher.Flux.subscribe
  [22] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.Operators$ScalarSubscription.request
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [31] reactor.core.publisher.MonoJust.subscribe
  [32] reactor.core.publisher.MonoDefer.subscribe
  [33] reactor.core.publisher.MonoFlatMap.subscribe
  [34] reactor.core.publisher.MonoFlatMapMany.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.Flux.blockLast
  [38] io.rsocket.transport.local.LocalPingPong.main

--- 110000000 ns (0.41%), 11 samples
  [ 0] io.rsocket.buffer.Tuple3ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.flags
  [ 3] io.rsocket.frame.FrameHeaderFlyweight.hasMetadata
  [ 4] io.rsocket.frame.RequestFlyweight.metadata
  [ 5] io.rsocket.frame.RequestResponseFrameFlyweight.metadata
  [ 6] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 7] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 8] io.rsocket.RSocketServer.handleFrame
  [ 9] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [10] reactor.core.publisher.LambdaSubscriber.onNext
  [11] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [15] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [16] reactor.core.publisher.UnicastProcessor.drainRegular
  [17] reactor.core.publisher.UnicastProcessor.drain
  [18] reactor.core.publisher.UnicastProcessor.onNext
  [19] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [20] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [22] io.rsocket.internal.UnboundedProcessor.drainRegular
  [23] io.rsocket.internal.UnboundedProcessor.drain
  [24] io.rsocket.internal.UnboundedProcessor.onNext
  [25] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [26] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [27] reactor.core.publisher.MonoDefer.subscribe
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoPeekFuseable.subscribe
  [31] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [34] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [35] reactor.core.publisher.FluxRange$RangeSubscription.request
  [36] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [37] reactor.core.publisher.FluxRange.subscribe
  [38] reactor.core.publisher.FluxFlatMap.subscribe
  [39] reactor.core.publisher.Flux.subscribe
  [40] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [41] reactor.core.publisher.Operators$MonoSubscriber.complete
  [42] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [43] reactor.core.publisher.Operators$MonoSubscriber.complete
  [44] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [45] reactor.core.publisher.MonoIgnoreThen.subscribe
  [46] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [47] reactor.core.publisher.Operators$ScalarSubscription.request
  [48] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [49] reactor.core.publisher.MonoJust.subscribe
  [50] reactor.core.publisher.MonoDefer.subscribe
  [51] reactor.core.publisher.MonoFlatMap.subscribe
  [52] reactor.core.publisher.MonoFlatMapMany.subscribe
  [53] reactor.core.publisher.FluxPeek.subscribe
  [54] reactor.core.publisher.FluxPeek.subscribe
  [55] reactor.core.publisher.Flux.blockLast
  [56] io.rsocket.transport.local.LocalPingPong.main

--- 100000000 ns (0.37%), 10 samples
  [ 0] java.util.Collections$SynchronizedMap.remove
  [ 1] io.rsocket.RSocketServer.lambda$handleRequestResponse$11
  [ 2] io.rsocket.RSocketServer$$Lambda$68.225472281.accept
  [ 3] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 5] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete
  [ 6] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete
  [ 7] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 8] reactor.core.publisher.Operators$ScalarSubscription.request
  [ 9] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [10] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [11] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [12] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [13] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [14] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [15] reactor.core.publisher.MonoJust.subscribe
  [16] reactor.core.publisher.MonoPeekFuseable.subscribe
  [17] reactor.core.publisher.MonoMapFuseable.subscribe
  [18] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [19] reactor.core.publisher.MonoDoFinally.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] reactor.core.publisher.Mono.subscribeWith
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.Mono.subscribe
  [25] io.rsocket.RSocketServer.handleRequestResponse
  [26] io.rsocket.RSocketServer.handleFrame
  [27] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [28] reactor.core.publisher.LambdaSubscriber.onNext
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [33] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [34] reactor.core.publisher.UnicastProcessor.drainRegular
  [35] reactor.core.publisher.UnicastProcessor.drain
  [36] reactor.core.publisher.UnicastProcessor.onNext
  [37] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [38] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [39] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [40] io.rsocket.internal.UnboundedProcessor.drainRegular
  [41] io.rsocket.internal.UnboundedProcessor.drain
  [42] io.rsocket.internal.UnboundedProcessor.onNext
  [43] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [44] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [45] reactor.core.publisher.MonoDefer.subscribe
  [46] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [47] reactor.core.publisher.MonoIgnoreThen.subscribe
  [48] reactor.core.publisher.MonoPeekFuseable.subscribe
  [49] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [50] reactor.core.publisher.Mono.subscribe
  [51] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [52] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [53] reactor.core.publisher.FluxRange$RangeSubscription.request
  [54] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [55] reactor.core.publisher.FluxRange.subscribe
  [56] reactor.core.publisher.FluxFlatMap.subscribe
  [57] reactor.core.publisher.Flux.subscribe
  [58] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [59] reactor.core.publisher.Operators$MonoSubscriber.complete
  [60] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [61] reactor.core.publisher.Operators$MonoSubscriber.complete
  [62] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [63] reactor.core.publisher.MonoIgnoreThen.subscribe
  [64] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [65] reactor.core.publisher.Operators$ScalarSubscription.request
  [66] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [67] reactor.core.publisher.MonoJust.subscribe
  [68] reactor.core.publisher.MonoDefer.subscribe
  [69] reactor.core.publisher.MonoFlatMap.subscribe
  [70] reactor.core.publisher.MonoFlatMapMany.subscribe
  [71] reactor.core.publisher.FluxPeek.subscribe
  [72] reactor.core.publisher.FluxPeek.subscribe
  [73] reactor.core.publisher.Flux.blockLast
  [74] io.rsocket.transport.local.LocalPingPong.main

--- 100000000 ns (0.37%), 10 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 2] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.decrementAndGet
  [ 3] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 4] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 5] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 6] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 7] reactor.core.publisher.Mono.subscribe
  [ 8] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 9] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [10] reactor.core.publisher.FluxRange$RangeSubscription.request
  [11] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [12] reactor.core.publisher.FluxRange.subscribe
  [13] reactor.core.publisher.FluxFlatMap.subscribe
  [14] reactor.core.publisher.Flux.subscribe
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [16] reactor.core.publisher.Operators$MonoSubscriber.complete
  [17] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [18] reactor.core.publisher.Operators$MonoSubscriber.complete
  [19] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [20] reactor.core.publisher.MonoIgnoreThen.subscribe
  [21] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [22] reactor.core.publisher.Operators$ScalarSubscription.request
  [23] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [24] reactor.core.publisher.MonoJust.subscribe
  [25] reactor.core.publisher.MonoDefer.subscribe
  [26] reactor.core.publisher.MonoFlatMap.subscribe
  [27] reactor.core.publisher.MonoFlatMapMany.subscribe
  [28] reactor.core.publisher.FluxPeek.subscribe
  [29] reactor.core.publisher.FluxPeek.subscribe
  [30] reactor.core.publisher.Flux.blockLast
  [31] io.rsocket.transport.local.LocalPingPong.main

--- 100000000 ns (0.37%), 10 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.<init>
  [ 1] io.rsocket.buffer.Tuple3ByteBuf.<init>
  [ 2] io.rsocket.buffer.Tuple3ByteBuf.create
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 4] io.rsocket.frame.RequestFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 7] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 8] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 9] reactor.core.publisher.MonoDefer.subscribe
  [10] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [11] reactor.core.publisher.MonoIgnoreThen.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [19] reactor.core.publisher.FluxRange.subscribe
  [20] reactor.core.publisher.FluxFlatMap.subscribe
  [21] reactor.core.publisher.Flux.subscribe
  [22] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.Operators$ScalarSubscription.request
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [31] reactor.core.publisher.MonoJust.subscribe
  [32] reactor.core.publisher.MonoDefer.subscribe
  [33] reactor.core.publisher.MonoFlatMap.subscribe
  [34] reactor.core.publisher.MonoFlatMapMany.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.Flux.blockLast
  [38] io.rsocket.transport.local.LocalPingPong.main

--- 100000000 ns (0.37%), 10 samples
  [ 0] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [ 1] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.request
  [ 2] reactor.core.publisher.FluxFlatMap$FlatMapInner.onSubscribe
  [ 3] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 4] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 5] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 6] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 7] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 8] reactor.core.publisher.Mono.subscribe
  [ 9] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [10] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [11] reactor.core.publisher.FluxRange$RangeSubscription.request
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [13] reactor.core.publisher.FluxRange.subscribe
  [14] reactor.core.publisher.FluxFlatMap.subscribe
  [15] reactor.core.publisher.Flux.subscribe
  [16] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [17] reactor.core.publisher.Operators$MonoSubscriber.complete
  [18] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [19] reactor.core.publisher.Operators$MonoSubscriber.complete
  [20] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [21] reactor.core.publisher.MonoIgnoreThen.subscribe
  [22] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.Operators$ScalarSubscription.request
  [24] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [25] reactor.core.publisher.MonoJust.subscribe
  [26] reactor.core.publisher.MonoDefer.subscribe
  [27] reactor.core.publisher.MonoFlatMap.subscribe
  [28] reactor.core.publisher.MonoFlatMapMany.subscribe
  [29] reactor.core.publisher.FluxPeek.subscribe
  [30] reactor.core.publisher.FluxPeek.subscribe
  [31] reactor.core.publisher.Flux.blockLast
  [32] io.rsocket.transport.local.LocalPingPong.main

--- 100000000 ns (0.37%), 10 samples
  [ 0] reactor.util.concurrent.SpscLinkedArrayQueue.poll
  [ 1] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 2] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [16] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [17] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [18] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [19] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [21] reactor.core.publisher.Operators$ScalarSubscription.request
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [23] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [24] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [25] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [26] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [27] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoPeekFuseable.subscribe
  [30] reactor.core.publisher.MonoMapFuseable.subscribe
  [31] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [32] reactor.core.publisher.MonoDoFinally.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribeWith
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] io.rsocket.RSocketServer.handleRequestResponse
  [39] io.rsocket.RSocketServer.handleFrame
  [40] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [41] reactor.core.publisher.LambdaSubscriber.onNext
  [42] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [46] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [47] reactor.core.publisher.UnicastProcessor.drainRegular
  [48] reactor.core.publisher.UnicastProcessor.drain
  [49] reactor.core.publisher.UnicastProcessor.onNext
  [50] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [51] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [52] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [53] io.rsocket.internal.UnboundedProcessor.drainRegular
  [54] io.rsocket.internal.UnboundedProcessor.drain
  [55] io.rsocket.internal.UnboundedProcessor.onNext
  [56] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [57] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [58] reactor.core.publisher.MonoDefer.subscribe
  [59] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [60] reactor.core.publisher.MonoIgnoreThen.subscribe
  [61] reactor.core.publisher.MonoPeekFuseable.subscribe
  [62] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [63] reactor.core.publisher.Mono.subscribe
  [64] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [65] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [66] reactor.core.publisher.FluxRange$RangeSubscription.request
  [67] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [68] reactor.core.publisher.FluxRange.subscribe
  [69] reactor.core.publisher.FluxFlatMap.subscribe
  [70] reactor.core.publisher.Flux.subscribe
  [71] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [72] reactor.core.publisher.Operators$MonoSubscriber.complete
  [73] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [74] reactor.core.publisher.Operators$MonoSubscriber.complete
  [75] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [76] reactor.core.publisher.MonoIgnoreThen.subscribe
  [77] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [78] reactor.core.publisher.Operators$ScalarSubscription.request
  [79] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [80] reactor.core.publisher.MonoJust.subscribe
  [81] reactor.core.publisher.MonoDefer.subscribe
  [82] reactor.core.publisher.MonoFlatMap.subscribe
  [83] reactor.core.publisher.MonoFlatMapMany.subscribe
  [84] reactor.core.publisher.FluxPeek.subscribe
  [85] reactor.core.publisher.FluxPeek.subscribe
  [86] reactor.core.publisher.Flux.blockLast
  [87] io.rsocket.transport.local.LocalPingPong.main

--- 100000000 ns (0.37%), 10 samples
  [ 0] io.netty.buffer.UnpooledHeapByteBuf.capacity
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.checkSliceOutOfBounds
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 4] io.netty.buffer.AbstractByteBuf.slice
  [ 5] io.rsocket.buffer.Tuple2ByteBuf.slice
  [ 6] io.netty.buffer.AbstractByteBuf.readSlice
  [ 7] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 8] io.rsocket.frame.RequestFlyweight.data
  [ 9] io.rsocket.frame.PayloadFrameFlyweight.data
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [12] io.rsocket.RSocketClient.handleFrame
  [13] io.rsocket.RSocketClient.handleIncomingFrames
  [14] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [15] reactor.core.publisher.LambdaSubscriber.onNext
  [16] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [19] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [20] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [21] reactor.core.publisher.UnicastProcessor.drainRegular
  [22] reactor.core.publisher.UnicastProcessor.drain
  [23] reactor.core.publisher.UnicastProcessor.onNext
  [24] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [25] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [27] io.rsocket.internal.UnboundedProcessor.drainRegular
  [28] io.rsocket.internal.UnboundedProcessor.drain
  [29] io.rsocket.internal.UnboundedProcessor.onNext
  [30] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [31] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [32] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [33] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [34] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [37] reactor.core.publisher.Operators$ScalarSubscription.request
  [38] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [39] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [40] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [41] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [42] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [43] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [44] reactor.core.publisher.MonoJust.subscribe
  [45] reactor.core.publisher.MonoPeekFuseable.subscribe
  [46] reactor.core.publisher.MonoMapFuseable.subscribe
  [47] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [48] reactor.core.publisher.MonoDoFinally.subscribe
  [49] reactor.core.publisher.Mono.subscribe
  [50] reactor.core.publisher.Mono.subscribeWith
  [51] reactor.core.publisher.Mono.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] reactor.core.publisher.Mono.subscribe
  [54] io.rsocket.RSocketServer.handleRequestResponse
  [55] io.rsocket.RSocketServer.handleFrame
  [56] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [57] reactor.core.publisher.LambdaSubscriber.onNext
  [58] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [59] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [60] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [61] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [62] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [63] reactor.core.publisher.UnicastProcessor.drainRegular
  [64] reactor.core.publisher.UnicastProcessor.drain
  [65] reactor.core.publisher.UnicastProcessor.onNext
  [66] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [67] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [68] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [69] io.rsocket.internal.UnboundedProcessor.drainRegular
  [70] io.rsocket.internal.UnboundedProcessor.drain
  [71] io.rsocket.internal.UnboundedProcessor.onNext
  [72] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [73] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [74] reactor.core.publisher.MonoDefer.subscribe
  [75] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [76] reactor.core.publisher.MonoIgnoreThen.subscribe
  [77] reactor.core.publisher.MonoPeekFuseable.subscribe
  [78] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [79] reactor.core.publisher.Mono.subscribe
  [80] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [81] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [82] reactor.core.publisher.FluxRange$RangeSubscription.request
  [83] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [84] reactor.core.publisher.FluxRange.subscribe
  [85] reactor.core.publisher.FluxFlatMap.subscribe
  [86] reactor.core.publisher.Flux.subscribe
  [87] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [88] reactor.core.publisher.Operators$MonoSubscriber.complete
  [89] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [90] reactor.core.publisher.Operators$MonoSubscriber.complete
  [91] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [92] reactor.core.publisher.MonoIgnoreThen.subscribe
  [93] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [94] reactor.core.publisher.Operators$ScalarSubscription.request
  [95] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [96] reactor.core.publisher.MonoJust.subscribe
  [97] reactor.core.publisher.MonoDefer.subscribe
  [98] reactor.core.publisher.MonoFlatMap.subscribe
  [99] reactor.core.publisher.MonoFlatMapMany.subscribe
  [100] reactor.core.publisher.FluxPeek.subscribe
  [101] reactor.core.publisher.FluxPeek.subscribe
  [102] reactor.core.publisher.Flux.blockLast
  [103] io.rsocket.transport.local.LocalPingPong.main

--- 90000000 ns (0.34%), 9 samples
  [ 0] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit
  [ 2] reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext
  [ 3] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 4] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 5] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 6] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [ 7] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 8] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 9] reactor.core.publisher.Operators$MonoSubscriber.complete
  [10] reactor.core.publisher.MonoProcessor.subscribe
  [11] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [12] reactor.core.publisher.MonoPeek.subscribe
  [13] reactor.core.publisher.MonoDoFinally.subscribe
  [14] reactor.core.publisher.MonoDefer.subscribe
  [15] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [16] reactor.core.publisher.MonoIgnoreThen.subscribe
  [17] reactor.core.publisher.MonoPeekFuseable.subscribe
  [18] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [19] reactor.core.publisher.Mono.subscribe
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [21] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [22] reactor.core.publisher.FluxRange$RangeSubscription.request
  [23] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [24] reactor.core.publisher.FluxRange.subscribe
  [25] reactor.core.publisher.FluxFlatMap.subscribe
  [26] reactor.core.publisher.Flux.subscribe
  [27] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [28] reactor.core.publisher.Operators$MonoSubscriber.complete
  [29] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [32] reactor.core.publisher.MonoIgnoreThen.subscribe
  [33] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [34] reactor.core.publisher.Operators$ScalarSubscription.request
  [35] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [36] reactor.core.publisher.MonoJust.subscribe
  [37] reactor.core.publisher.MonoDefer.subscribe
  [38] reactor.core.publisher.MonoFlatMap.subscribe
  [39] reactor.core.publisher.MonoFlatMapMany.subscribe
  [40] reactor.core.publisher.FluxPeek.subscribe
  [41] reactor.core.publisher.FluxPeek.subscribe
  [42] reactor.core.publisher.Flux.blockLast
  [43] io.rsocket.transport.local.LocalPingPong.main

--- 90000000 ns (0.34%), 9 samples
  [ 0] io.netty.buffer.AbstractByteBuf.readInt
  [ 1] io.rsocket.frame.FrameHeaderFlyweight.streamId
  [ 2] io.rsocket.internal.ClientServerInputMultiplexer.lambda$new$0
  [ 3] io.rsocket.internal.ClientServerInputMultiplexer$$Lambda$38.556529265.apply
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [16] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [17] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [18] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [19] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [21] reactor.core.publisher.Operators$ScalarSubscription.request
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [23] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [24] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [25] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [26] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [27] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoPeekFuseable.subscribe
  [30] reactor.core.publisher.MonoMapFuseable.subscribe
  [31] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [32] reactor.core.publisher.MonoDoFinally.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribeWith
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] io.rsocket.RSocketServer.handleRequestResponse
  [39] io.rsocket.RSocketServer.handleFrame
  [40] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [41] reactor.core.publisher.LambdaSubscriber.onNext
  [42] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [46] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [47] reactor.core.publisher.UnicastProcessor.drainRegular
  [48] reactor.core.publisher.UnicastProcessor.drain
  [49] reactor.core.publisher.UnicastProcessor.onNext
  [50] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [51] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [52] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [53] io.rsocket.internal.UnboundedProcessor.drainRegular
  [54] io.rsocket.internal.UnboundedProcessor.drain
  [55] io.rsocket.internal.UnboundedProcessor.onNext
  [56] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [57] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [58] reactor.core.publisher.MonoDefer.subscribe
  [59] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [60] reactor.core.publisher.MonoIgnoreThen.subscribe
  [61] reactor.core.publisher.MonoPeekFuseable.subscribe
  [62] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [63] reactor.core.publisher.Mono.subscribe
  [64] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [65] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [66] reactor.core.publisher.FluxRange$RangeSubscription.request
  [67] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [68] reactor.core.publisher.FluxRange.subscribe
  [69] reactor.core.publisher.FluxFlatMap.subscribe
  [70] reactor.core.publisher.Flux.subscribe
  [71] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [72] reactor.core.publisher.Operators$MonoSubscriber.complete
  [73] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [74] reactor.core.publisher.Operators$MonoSubscriber.complete
  [75] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [76] reactor.core.publisher.MonoIgnoreThen.subscribe
  [77] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [78] reactor.core.publisher.Operators$ScalarSubscription.request
  [79] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [80] reactor.core.publisher.MonoJust.subscribe
  [81] reactor.core.publisher.MonoDefer.subscribe
  [82] reactor.core.publisher.MonoFlatMap.subscribe
  [83] reactor.core.publisher.MonoFlatMapMany.subscribe
  [84] reactor.core.publisher.FluxPeek.subscribe
  [85] reactor.core.publisher.FluxPeek.subscribe
  [86] reactor.core.publisher.Flux.blockLast
  [87] io.rsocket.transport.local.LocalPingPong.main

--- 90000000 ns (0.34%), 9 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.request
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapInner.onSubscribe
  [ 2] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 3] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 4] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 5] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 6] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 7] reactor.core.publisher.Mono.subscribe
  [ 8] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 9] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [10] reactor.core.publisher.FluxRange$RangeSubscription.request
  [11] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [12] reactor.core.publisher.FluxRange.subscribe
  [13] reactor.core.publisher.FluxFlatMap.subscribe
  [14] reactor.core.publisher.Flux.subscribe
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [16] reactor.core.publisher.Operators$MonoSubscriber.complete
  [17] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [18] reactor.core.publisher.Operators$MonoSubscriber.complete
  [19] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [20] reactor.core.publisher.MonoIgnoreThen.subscribe
  [21] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [22] reactor.core.publisher.Operators$ScalarSubscription.request
  [23] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [24] reactor.core.publisher.MonoJust.subscribe
  [25] reactor.core.publisher.MonoDefer.subscribe
  [26] reactor.core.publisher.MonoFlatMap.subscribe
  [27] reactor.core.publisher.MonoFlatMapMany.subscribe
  [28] reactor.core.publisher.FluxPeek.subscribe
  [29] reactor.core.publisher.FluxPeek.subscribe
  [30] reactor.core.publisher.Flux.blockLast
  [31] io.rsocket.transport.local.LocalPingPong.main

--- 90000000 ns (0.34%), 9 samples
  [ 0] io.netty.buffer.PoolArena.allocate
  [ 1] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 2] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 3] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 4] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 5] io.rsocket.frame.FrameHeaderFlyweight.encode
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [ 8] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [ 9] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [10] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [12] reactor.core.publisher.Operators$ScalarSubscription.request
  [13] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [14] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [15] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [16] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [17] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [19] reactor.core.publisher.MonoJust.subscribe
  [20] reactor.core.publisher.MonoPeekFuseable.subscribe
  [21] reactor.core.publisher.MonoMapFuseable.subscribe
  [22] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [23] reactor.core.publisher.MonoDoFinally.subscribe
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.Mono.subscribeWith
  [26] reactor.core.publisher.Mono.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] reactor.core.publisher.Mono.subscribe
  [29] io.rsocket.RSocketServer.handleRequestResponse
  [30] io.rsocket.RSocketServer.handleFrame
  [31] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [32] reactor.core.publisher.LambdaSubscriber.onNext
  [33] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [35] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [36] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [37] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [38] reactor.core.publisher.UnicastProcessor.drainRegular
  [39] reactor.core.publisher.UnicastProcessor.drain
  [40] reactor.core.publisher.UnicastProcessor.onNext
  [41] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [42] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [43] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [44] io.rsocket.internal.UnboundedProcessor.drainRegular
  [45] io.rsocket.internal.UnboundedProcessor.drain
  [46] io.rsocket.internal.UnboundedProcessor.onNext
  [47] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [48] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [49] reactor.core.publisher.MonoDefer.subscribe
  [50] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [51] reactor.core.publisher.MonoIgnoreThen.subscribe
  [52] reactor.core.publisher.MonoPeekFuseable.subscribe
  [53] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [54] reactor.core.publisher.Mono.subscribe
  [55] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [56] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [57] reactor.core.publisher.FluxRange$RangeSubscription.request
  [58] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [59] reactor.core.publisher.FluxRange.subscribe
  [60] reactor.core.publisher.FluxFlatMap.subscribe
  [61] reactor.core.publisher.Flux.subscribe
  [62] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [63] reactor.core.publisher.Operators$MonoSubscriber.complete
  [64] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [65] reactor.core.publisher.Operators$MonoSubscriber.complete
  [66] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [67] reactor.core.publisher.MonoIgnoreThen.subscribe
  [68] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [69] reactor.core.publisher.Operators$ScalarSubscription.request
  [70] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [71] reactor.core.publisher.MonoJust.subscribe
  [72] reactor.core.publisher.MonoDefer.subscribe
  [73] reactor.core.publisher.MonoFlatMap.subscribe
  [74] reactor.core.publisher.MonoFlatMapMany.subscribe
  [75] reactor.core.publisher.FluxPeek.subscribe
  [76] reactor.core.publisher.FluxPeek.subscribe
  [77] reactor.core.publisher.Flux.blockLast
  [78] io.rsocket.transport.local.LocalPingPong.main

--- 90000000 ns (0.34%), 9 samples
  [ 0] io.netty.buffer.PoolThreadCache.cache
  [ 1] io.netty.buffer.PoolThreadCache.add
  [ 2] io.netty.buffer.PoolArena.free
  [ 3] io.netty.buffer.PooledByteBuf.deallocate
  [ 4] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 5] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 6] io.netty.buffer.AbstractDerivedByteBuf.release0
  [ 7] io.netty.buffer.AbstractDerivedByteBuf.release
  [ 8] io.rsocket.util.ByteBufPayload.deallocate
  [ 9] io.netty.util.AbstractReferenceCounted.release0
  [10] io.netty.util.AbstractReferenceCounted.release
  [11] io.rsocket.test.PingHandler$1.requestResponse
  [12] io.rsocket.RSocketServer.requestResponse
  [13] io.rsocket.RSocketServer.handleFrame
  [14] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [15] reactor.core.publisher.LambdaSubscriber.onNext
  [16] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [19] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [20] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [21] reactor.core.publisher.UnicastProcessor.drainRegular
  [22] reactor.core.publisher.UnicastProcessor.drain
  [23] reactor.core.publisher.UnicastProcessor.onNext
  [24] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [25] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [27] io.rsocket.internal.UnboundedProcessor.drainRegular
  [28] io.rsocket.internal.UnboundedProcessor.drain
  [29] io.rsocket.internal.UnboundedProcessor.onNext
  [30] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [31] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [32] reactor.core.publisher.MonoDefer.subscribe
  [33] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [34] reactor.core.publisher.MonoIgnoreThen.subscribe
  [35] reactor.core.publisher.MonoPeekFuseable.subscribe
  [36] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [39] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [40] reactor.core.publisher.FluxRange$RangeSubscription.request
  [41] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [42] reactor.core.publisher.FluxRange.subscribe
  [43] reactor.core.publisher.FluxFlatMap.subscribe
  [44] reactor.core.publisher.Flux.subscribe
  [45] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [46] reactor.core.publisher.Operators$MonoSubscriber.complete
  [47] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [48] reactor.core.publisher.Operators$MonoSubscriber.complete
  [49] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [50] reactor.core.publisher.MonoIgnoreThen.subscribe
  [51] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [52] reactor.core.publisher.Operators$ScalarSubscription.request
  [53] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [54] reactor.core.publisher.MonoJust.subscribe
  [55] reactor.core.publisher.MonoDefer.subscribe
  [56] reactor.core.publisher.MonoFlatMap.subscribe
  [57] reactor.core.publisher.MonoFlatMapMany.subscribe
  [58] reactor.core.publisher.FluxPeek.subscribe
  [59] reactor.core.publisher.FluxPeek.subscribe
  [60] reactor.core.publisher.Flux.blockLast
  [61] io.rsocket.transport.local.LocalPingPong.main

--- 90000000 ns (0.34%), 9 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 2] io.netty.buffer.AbstractDerivedByteBuf.release0
  [ 3] io.netty.buffer.AbstractDerivedByteBuf.release
  [ 4] io.rsocket.util.ByteBufPayload.deallocate
  [ 5] io.netty.util.AbstractReferenceCounted.release0
  [ 6] io.netty.util.AbstractReferenceCounted.release
  [ 7] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [ 8] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [ 9] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] reactor.core.publisher.Operators$ScalarSubscription.request
  [12] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [13] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [14] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [15] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [16] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [17] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [18] reactor.core.publisher.MonoJust.subscribe
  [19] reactor.core.publisher.MonoPeekFuseable.subscribe
  [20] reactor.core.publisher.MonoMapFuseable.subscribe
  [21] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [22] reactor.core.publisher.MonoDoFinally.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.Mono.subscribeWith
  [25] reactor.core.publisher.Mono.subscribe
  [26] reactor.core.publisher.Mono.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] io.rsocket.RSocketServer.handleRequestResponse
  [29] io.rsocket.RSocketServer.handleFrame
  [30] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [31] reactor.core.publisher.LambdaSubscriber.onNext
  [32] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [34] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [35] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [36] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [37] reactor.core.publisher.UnicastProcessor.drainRegular
  [38] reactor.core.publisher.UnicastProcessor.drain
  [39] reactor.core.publisher.UnicastProcessor.onNext
  [40] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [41] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [42] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [43] io.rsocket.internal.UnboundedProcessor.drainRegular
  [44] io.rsocket.internal.UnboundedProcessor.drain
  [45] io.rsocket.internal.UnboundedProcessor.onNext
  [46] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [47] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [48] reactor.core.publisher.MonoDefer.subscribe
  [49] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [50] reactor.core.publisher.MonoIgnoreThen.subscribe
  [51] reactor.core.publisher.MonoPeekFuseable.subscribe
  [52] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [53] reactor.core.publisher.Mono.subscribe
  [54] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [55] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [56] reactor.core.publisher.FluxRange$RangeSubscription.request
  [57] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [58] reactor.core.publisher.FluxRange.subscribe
  [59] reactor.core.publisher.FluxFlatMap.subscribe
  [60] reactor.core.publisher.Flux.subscribe
  [61] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [62] reactor.core.publisher.Operators$MonoSubscriber.complete
  [63] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [64] reactor.core.publisher.Operators$MonoSubscriber.complete
  [65] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [66] reactor.core.publisher.MonoIgnoreThen.subscribe
  [67] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [68] reactor.core.publisher.Operators$ScalarSubscription.request
  [69] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [70] reactor.core.publisher.MonoJust.subscribe
  [71] reactor.core.publisher.MonoDefer.subscribe
  [72] reactor.core.publisher.MonoFlatMap.subscribe
  [73] reactor.core.publisher.MonoFlatMapMany.subscribe
  [74] reactor.core.publisher.FluxPeek.subscribe
  [75] reactor.core.publisher.FluxPeek.subscribe
  [76] reactor.core.publisher.Flux.blockLast
  [77] io.rsocket.transport.local.LocalPingPong.main

--- 90000000 ns (0.34%), 9 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 2] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.addAndGet
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 4] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 5] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 6] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 7] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 8] reactor.core.publisher.UnicastProcessor.drain
  [ 9] reactor.core.publisher.UnicastProcessor.onNext
  [10] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [11] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [12] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [13] io.rsocket.internal.UnboundedProcessor.drainRegular
  [14] io.rsocket.internal.UnboundedProcessor.drain
  [15] io.rsocket.internal.UnboundedProcessor.onNext
  [16] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [17] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [18] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [19] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [20] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] reactor.core.publisher.Operators$ScalarSubscription.request
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [25] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [26] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [27] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [29] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [30] reactor.core.publisher.MonoJust.subscribe
  [31] reactor.core.publisher.MonoPeekFuseable.subscribe
  [32] reactor.core.publisher.MonoMapFuseable.subscribe
  [33] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [34] reactor.core.publisher.MonoDoFinally.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribeWith
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.Mono.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] io.rsocket.RSocketServer.handleRequestResponse
  [41] io.rsocket.RSocketServer.handleFrame
  [42] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [43] reactor.core.publisher.LambdaSubscriber.onNext
  [44] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [46] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [47] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [48] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [49] reactor.core.publisher.UnicastProcessor.drainRegular
  [50] reactor.core.publisher.UnicastProcessor.drain
  [51] reactor.core.publisher.UnicastProcessor.onNext
  [52] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [53] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [54] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [55] io.rsocket.internal.UnboundedProcessor.drainRegular
  [56] io.rsocket.internal.UnboundedProcessor.drain
  [57] io.rsocket.internal.UnboundedProcessor.onNext
  [58] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [59] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [60] reactor.core.publisher.MonoDefer.subscribe
  [61] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [62] reactor.core.publisher.MonoIgnoreThen.subscribe
  [63] reactor.core.publisher.MonoPeekFuseable.subscribe
  [64] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [65] reactor.core.publisher.Mono.subscribe
  [66] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [67] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [68] reactor.core.publisher.FluxRange$RangeSubscription.request
  [69] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [70] reactor.core.publisher.FluxRange.subscribe
  [71] reactor.core.publisher.FluxFlatMap.subscribe
  [72] reactor.core.publisher.Flux.subscribe
  [73] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [74] reactor.core.publisher.Operators$MonoSubscriber.complete
  [75] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [76] reactor.core.publisher.Operators$MonoSubscriber.complete
  [77] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [78] reactor.core.publisher.MonoIgnoreThen.subscribe
  [79] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [80] reactor.core.publisher.Operators$ScalarSubscription.request
  [81] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [82] reactor.core.publisher.MonoJust.subscribe
  [83] reactor.core.publisher.MonoDefer.subscribe
  [84] reactor.core.publisher.MonoFlatMap.subscribe
  [85] reactor.core.publisher.MonoFlatMapMany.subscribe
  [86] reactor.core.publisher.FluxPeek.subscribe
  [87] reactor.core.publisher.FluxPeek.subscribe
  [88] reactor.core.publisher.Flux.blockLast
  [89] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate
  [ 1] io.netty.buffer.PoolThreadCache.allocate
  [ 2] io.netty.buffer.PoolThreadCache.allocateTiny
  [ 3] io.netty.buffer.PoolArena.allocate
  [ 4] io.netty.buffer.PoolArena.allocate
  [ 5] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 6] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 7] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 8] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 9] io.rsocket.frame.FrameHeaderFlyweight.encode
  [10] io.rsocket.frame.RequestFlyweight.encode
  [11] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [12] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [13] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [14] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [15] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [16] reactor.core.publisher.Operators$ScalarSubscription.request
  [17] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [18] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [19] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [20] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [23] reactor.core.publisher.MonoJust.subscribe
  [24] reactor.core.publisher.MonoPeekFuseable.subscribe
  [25] reactor.core.publisher.MonoMapFuseable.subscribe
  [26] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [27] reactor.core.publisher.MonoDoFinally.subscribe
  [28] reactor.core.publisher.Mono.subscribe
  [29] reactor.core.publisher.Mono.subscribeWith
  [30] reactor.core.publisher.Mono.subscribe
  [31] reactor.core.publisher.Mono.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] io.rsocket.RSocketServer.handleRequestResponse
  [34] io.rsocket.RSocketServer.handleFrame
  [35] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [36] reactor.core.publisher.LambdaSubscriber.onNext
  [37] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [38] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [39] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [40] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [41] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [42] reactor.core.publisher.UnicastProcessor.drainRegular
  [43] reactor.core.publisher.UnicastProcessor.drain
  [44] reactor.core.publisher.UnicastProcessor.onNext
  [45] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [46] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [47] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [48] io.rsocket.internal.UnboundedProcessor.drainRegular
  [49] io.rsocket.internal.UnboundedProcessor.drain
  [50] io.rsocket.internal.UnboundedProcessor.onNext
  [51] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [52] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [53] reactor.core.publisher.MonoDefer.subscribe
  [54] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [55] reactor.core.publisher.MonoIgnoreThen.subscribe
  [56] reactor.core.publisher.MonoPeekFuseable.subscribe
  [57] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [58] reactor.core.publisher.Mono.subscribe
  [59] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [60] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [61] reactor.core.publisher.FluxRange$RangeSubscription.request
  [62] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [63] reactor.core.publisher.FluxRange.subscribe
  [64] reactor.core.publisher.FluxFlatMap.subscribe
  [65] reactor.core.publisher.Flux.subscribe
  [66] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [67] reactor.core.publisher.Operators$MonoSubscriber.complete
  [68] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [69] reactor.core.publisher.Operators$MonoSubscriber.complete
  [70] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [71] reactor.core.publisher.MonoIgnoreThen.subscribe
  [72] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [73] reactor.core.publisher.Operators$ScalarSubscription.request
  [74] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [75] reactor.core.publisher.MonoJust.subscribe
  [76] reactor.core.publisher.MonoDefer.subscribe
  [77] reactor.core.publisher.MonoFlatMap.subscribe
  [78] reactor.core.publisher.MonoFlatMapMany.subscribe
  [79] reactor.core.publisher.FluxPeek.subscribe
  [80] reactor.core.publisher.FluxPeek.subscribe
  [81] reactor.core.publisher.Flux.blockLast
  [82] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] io.rsocket.buffer.Tuple3ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.flags
  [ 3] io.rsocket.frame.FrameHeaderFlyweight.hasMetadata
  [ 4] io.rsocket.frame.RequestFlyweight.data
  [ 5] io.rsocket.frame.RequestResponseFrameFlyweight.data
  [ 6] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 7] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 8] io.rsocket.RSocketServer.handleFrame
  [ 9] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [10] reactor.core.publisher.LambdaSubscriber.onNext
  [11] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [15] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [16] reactor.core.publisher.UnicastProcessor.drainRegular
  [17] reactor.core.publisher.UnicastProcessor.drain
  [18] reactor.core.publisher.UnicastProcessor.onNext
  [19] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [20] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [22] io.rsocket.internal.UnboundedProcessor.drainRegular
  [23] io.rsocket.internal.UnboundedProcessor.drain
  [24] io.rsocket.internal.UnboundedProcessor.onNext
  [25] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [26] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [27] reactor.core.publisher.MonoDefer.subscribe
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoPeekFuseable.subscribe
  [31] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [34] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [35] reactor.core.publisher.FluxRange$RangeSubscription.request
  [36] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [37] reactor.core.publisher.FluxRange.subscribe
  [38] reactor.core.publisher.FluxFlatMap.subscribe
  [39] reactor.core.publisher.Flux.subscribe
  [40] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [41] reactor.core.publisher.Operators$MonoSubscriber.complete
  [42] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [43] reactor.core.publisher.Operators$MonoSubscriber.complete
  [44] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [45] reactor.core.publisher.MonoIgnoreThen.subscribe
  [46] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [47] reactor.core.publisher.Operators$ScalarSubscription.request
  [48] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [49] reactor.core.publisher.MonoJust.subscribe
  [50] reactor.core.publisher.MonoDefer.subscribe
  [51] reactor.core.publisher.MonoFlatMap.subscribe
  [52] reactor.core.publisher.MonoFlatMapMany.subscribe
  [53] reactor.core.publisher.FluxPeek.subscribe
  [54] reactor.core.publisher.FluxPeek.subscribe
  [55] reactor.core.publisher.Flux.blockLast
  [56] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.request
  [ 1] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onSubscribe
  [ 2] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 3] reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe
  [ 4] reactor.core.publisher.MonoProcessor.subscribe
  [ 5] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 6] reactor.core.publisher.MonoPeek.subscribe
  [ 7] reactor.core.publisher.MonoDoFinally.subscribe
  [ 8] reactor.core.publisher.MonoDefer.subscribe
  [ 9] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [10] reactor.core.publisher.MonoIgnoreThen.subscribe
  [11] reactor.core.publisher.MonoPeekFuseable.subscribe
  [12] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [13] reactor.core.publisher.Mono.subscribe
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [15] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [16] reactor.core.publisher.FluxRange$RangeSubscription.request
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [18] reactor.core.publisher.FluxRange.subscribe
  [19] reactor.core.publisher.FluxFlatMap.subscribe
  [20] reactor.core.publisher.Flux.subscribe
  [21] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [24] reactor.core.publisher.Operators$MonoSubscriber.complete
  [25] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [26] reactor.core.publisher.MonoIgnoreThen.subscribe
  [27] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [28] reactor.core.publisher.Operators$ScalarSubscription.request
  [29] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [30] reactor.core.publisher.MonoJust.subscribe
  [31] reactor.core.publisher.MonoDefer.subscribe
  [32] reactor.core.publisher.MonoFlatMap.subscribe
  [33] reactor.core.publisher.MonoFlatMapMany.subscribe
  [34] reactor.core.publisher.FluxPeek.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.Flux.blockLast
  [37] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate
  [ 1] io.netty.buffer.PoolThreadCache.allocate
  [ 2] io.netty.buffer.PoolThreadCache.allocateTiny
  [ 3] io.netty.buffer.PoolArena.allocate
  [ 4] io.netty.buffer.PoolArena.allocate
  [ 5] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 6] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 7] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 8] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 9] io.rsocket.frame.FrameHeaderFlyweight.encode
  [10] io.rsocket.frame.RequestFlyweight.encode
  [11] io.rsocket.frame.RequestFlyweight.encode
  [12] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [13] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [14] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [15] reactor.core.publisher.MonoDefer.subscribe
  [16] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [17] reactor.core.publisher.MonoIgnoreThen.subscribe
  [18] reactor.core.publisher.MonoPeekFuseable.subscribe
  [19] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [22] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [23] reactor.core.publisher.FluxRange$RangeSubscription.request
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [25] reactor.core.publisher.FluxRange.subscribe
  [26] reactor.core.publisher.FluxFlatMap.subscribe
  [27] reactor.core.publisher.Flux.subscribe
  [28] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [29] reactor.core.publisher.Operators$MonoSubscriber.complete
  [30] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [31] reactor.core.publisher.Operators$MonoSubscriber.complete
  [32] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [33] reactor.core.publisher.MonoIgnoreThen.subscribe
  [34] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [35] reactor.core.publisher.Operators$ScalarSubscription.request
  [36] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [37] reactor.core.publisher.MonoJust.subscribe
  [38] reactor.core.publisher.MonoDefer.subscribe
  [39] reactor.core.publisher.MonoFlatMap.subscribe
  [40] reactor.core.publisher.MonoFlatMapMany.subscribe
  [41] reactor.core.publisher.FluxPeek.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.Flux.blockLast
  [44] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 1] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 2] reactor.core.publisher.Operators$ScalarSubscription.request
  [ 3] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [ 4] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [ 5] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [ 6] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [ 7] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [ 8] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 9] reactor.core.publisher.MonoJust.subscribe
  [10] reactor.core.publisher.MonoPeekFuseable.subscribe
  [11] reactor.core.publisher.MonoMapFuseable.subscribe
  [12] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [13] reactor.core.publisher.MonoDoFinally.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.Mono.subscribeWith
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.Mono.subscribe
  [18] reactor.core.publisher.Mono.subscribe
  [19] io.rsocket.RSocketServer.handleRequestResponse
  [20] io.rsocket.RSocketServer.handleFrame
  [21] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [22] reactor.core.publisher.LambdaSubscriber.onNext
  [23] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [24] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [25] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [26] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [27] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [28] reactor.core.publisher.UnicastProcessor.drainRegular
  [29] reactor.core.publisher.UnicastProcessor.drain
  [30] reactor.core.publisher.UnicastProcessor.onNext
  [31] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [32] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [33] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [34] io.rsocket.internal.UnboundedProcessor.drainRegular
  [35] io.rsocket.internal.UnboundedProcessor.drain
  [36] io.rsocket.internal.UnboundedProcessor.onNext
  [37] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [38] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [39] reactor.core.publisher.MonoDefer.subscribe
  [40] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [41] reactor.core.publisher.MonoIgnoreThen.subscribe
  [42] reactor.core.publisher.MonoPeekFuseable.subscribe
  [43] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [44] reactor.core.publisher.Mono.subscribe
  [45] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [46] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [47] reactor.core.publisher.FluxRange$RangeSubscription.request
  [48] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [49] reactor.core.publisher.FluxRange.subscribe
  [50] reactor.core.publisher.FluxFlatMap.subscribe
  [51] reactor.core.publisher.Flux.subscribe
  [52] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [53] reactor.core.publisher.Operators$MonoSubscriber.complete
  [54] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [55] reactor.core.publisher.Operators$MonoSubscriber.complete
  [56] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [57] reactor.core.publisher.MonoIgnoreThen.subscribe
  [58] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [59] reactor.core.publisher.Operators$ScalarSubscription.request
  [60] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [61] reactor.core.publisher.MonoJust.subscribe
  [62] reactor.core.publisher.MonoDefer.subscribe
  [63] reactor.core.publisher.MonoFlatMap.subscribe
  [64] reactor.core.publisher.MonoFlatMapMany.subscribe
  [65] reactor.core.publisher.FluxPeek.subscribe
  [66] reactor.core.publisher.FluxPeek.subscribe
  [67] reactor.core.publisher.Flux.blockLast
  [68] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 1] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 2] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete
  [ 3] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete
  [ 4] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 5] reactor.core.publisher.Operators$ScalarSubscription.request
  [ 6] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [ 7] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [ 8] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [ 9] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [10] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [12] reactor.core.publisher.MonoJust.subscribe
  [13] reactor.core.publisher.MonoPeekFuseable.subscribe
  [14] reactor.core.publisher.MonoMapFuseable.subscribe
  [15] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [16] reactor.core.publisher.MonoDoFinally.subscribe
  [17] reactor.core.publisher.Mono.subscribe
  [18] reactor.core.publisher.Mono.subscribeWith
  [19] reactor.core.publisher.Mono.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] reactor.core.publisher.Mono.subscribe
  [22] io.rsocket.RSocketServer.handleRequestResponse
  [23] io.rsocket.RSocketServer.handleFrame
  [24] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [25] reactor.core.publisher.LambdaSubscriber.onNext
  [26] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [27] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [28] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [29] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [30] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [31] reactor.core.publisher.UnicastProcessor.drainRegular
  [32] reactor.core.publisher.UnicastProcessor.drain
  [33] reactor.core.publisher.UnicastProcessor.onNext
  [34] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [35] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [37] io.rsocket.internal.UnboundedProcessor.drainRegular
  [38] io.rsocket.internal.UnboundedProcessor.drain
  [39] io.rsocket.internal.UnboundedProcessor.onNext
  [40] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [41] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [42] reactor.core.publisher.MonoDefer.subscribe
  [43] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [44] reactor.core.publisher.MonoIgnoreThen.subscribe
  [45] reactor.core.publisher.MonoPeekFuseable.subscribe
  [46] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [47] reactor.core.publisher.Mono.subscribe
  [48] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [49] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [50] reactor.core.publisher.FluxRange$RangeSubscription.request
  [51] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [52] reactor.core.publisher.FluxRange.subscribe
  [53] reactor.core.publisher.FluxFlatMap.subscribe
  [54] reactor.core.publisher.Flux.subscribe
  [55] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [56] reactor.core.publisher.Operators$MonoSubscriber.complete
  [57] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [58] reactor.core.publisher.Operators$MonoSubscriber.complete
  [59] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [60] reactor.core.publisher.MonoIgnoreThen.subscribe
  [61] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [62] reactor.core.publisher.Operators$ScalarSubscription.request
  [63] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [64] reactor.core.publisher.MonoJust.subscribe
  [65] reactor.core.publisher.MonoDefer.subscribe
  [66] reactor.core.publisher.MonoFlatMap.subscribe
  [67] reactor.core.publisher.MonoFlatMapMany.subscribe
  [68] reactor.core.publisher.FluxPeek.subscribe
  [69] reactor.core.publisher.FluxPeek.subscribe
  [70] reactor.core.publisher.Flux.blockLast
  [71] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] io.netty.buffer.AbstractByteBuf.slice
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.slice
  [ 2] io.rsocket.buffer.Tuple3ByteBuf.slice
  [ 3] io.netty.buffer.AbstractByteBuf.readSlice
  [ 4] io.rsocket.frame.DataAndMetadataFlyweight.metadataWithoutMarking
  [ 5] io.rsocket.frame.RequestFlyweight.metadata
  [ 6] io.rsocket.frame.RequestResponseFrameFlyweight.metadata
  [ 7] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 8] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 9] io.rsocket.RSocketServer.handleFrame
  [10] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [11] reactor.core.publisher.LambdaSubscriber.onNext
  [12] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [16] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [17] reactor.core.publisher.UnicastProcessor.drainRegular
  [18] reactor.core.publisher.UnicastProcessor.drain
  [19] reactor.core.publisher.UnicastProcessor.onNext
  [20] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [21] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] io.rsocket.internal.UnboundedProcessor.drainRegular
  [24] io.rsocket.internal.UnboundedProcessor.drain
  [25] io.rsocket.internal.UnboundedProcessor.onNext
  [26] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [27] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [28] reactor.core.publisher.MonoDefer.subscribe
  [29] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [30] reactor.core.publisher.MonoIgnoreThen.subscribe
  [31] reactor.core.publisher.MonoPeekFuseable.subscribe
  [32] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [35] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [36] reactor.core.publisher.FluxRange$RangeSubscription.request
  [37] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.FluxRange.subscribe
  [39] reactor.core.publisher.FluxFlatMap.subscribe
  [40] reactor.core.publisher.Flux.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [42] reactor.core.publisher.Operators$MonoSubscriber.complete
  [43] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [44] reactor.core.publisher.Operators$MonoSubscriber.complete
  [45] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [46] reactor.core.publisher.MonoIgnoreThen.subscribe
  [47] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [48] reactor.core.publisher.Operators$ScalarSubscription.request
  [49] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [50] reactor.core.publisher.MonoJust.subscribe
  [51] reactor.core.publisher.MonoDefer.subscribe
  [52] reactor.core.publisher.MonoFlatMap.subscribe
  [53] reactor.core.publisher.MonoFlatMapMany.subscribe
  [54] reactor.core.publisher.FluxPeek.subscribe
  [55] reactor.core.publisher.FluxPeek.subscribe
  [56] reactor.core.publisher.Flux.blockLast
  [57] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] reactor.core.publisher.MonoCreate$DefaultMonoSink.disposeResource
  [ 1] reactor.core.publisher.MonoCreate$DefaultMonoSink.success
  [ 2] io.rsocket.RSocketClient$Lifecycle.lambda$active$0
  [ 3] io.rsocket.RSocketClient$Lifecycle$$Lambda$61.802600647.accept
  [ 4] reactor.core.publisher.MonoCreate.subscribe
  [ 5] reactor.core.publisher.Mono.subscribe
  [ 6] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 7] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 8] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 9] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [10] reactor.core.publisher.Mono.subscribe
  [11] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [12] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [13] reactor.core.publisher.FluxRange$RangeSubscription.request
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [15] reactor.core.publisher.FluxRange.subscribe
  [16] reactor.core.publisher.FluxFlatMap.subscribe
  [17] reactor.core.publisher.Flux.subscribe
  [18] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [19] reactor.core.publisher.Operators$MonoSubscriber.complete
  [20] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [21] reactor.core.publisher.Operators$MonoSubscriber.complete
  [22] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [23] reactor.core.publisher.MonoIgnoreThen.subscribe
  [24] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [25] reactor.core.publisher.Operators$ScalarSubscription.request
  [26] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [27] reactor.core.publisher.MonoJust.subscribe
  [28] reactor.core.publisher.MonoDefer.subscribe
  [29] reactor.core.publisher.MonoFlatMap.subscribe
  [30] reactor.core.publisher.MonoFlatMapMany.subscribe
  [31] reactor.core.publisher.FluxPeek.subscribe
  [32] reactor.core.publisher.FluxPeek.subscribe
  [33] reactor.core.publisher.Flux.blockLast
  [34] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.internalRefCnt
  [ 1] io.netty.buffer.AbstractByteBuf.ensureAccessible
  [ 2] io.netty.buffer.AbstractByteBuf.ensureWritable0
  [ 3] io.netty.buffer.AbstractByteBuf.writeByte
  [ 4] io.rsocket.frame.DataAndMetadataFlyweight.encodeLength
  [ 5] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.RequestFlyweight.encode
  [ 8] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 9] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [10] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [11] reactor.core.publisher.MonoDefer.subscribe
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [13] reactor.core.publisher.MonoIgnoreThen.subscribe
  [14] reactor.core.publisher.MonoPeekFuseable.subscribe
  [15] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [19] reactor.core.publisher.FluxRange$RangeSubscription.request
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.FluxRange.subscribe
  [22] reactor.core.publisher.FluxFlatMap.subscribe
  [23] reactor.core.publisher.Flux.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [27] reactor.core.publisher.Operators$MonoSubscriber.complete
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoFlatMap.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.Flux.blockLast
  [40] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] io.netty.util.internal.logging.LocationAwareSlf4JLogger.isErrorEnabled
  [ 1] io.netty.util.ResourceLeakDetector.reportLeak
  [ 2] io.netty.util.ResourceLeakDetector.track0
  [ 3] io.netty.util.ResourceLeakDetector.track
  [ 4] io.netty.buffer.AbstractByteBufAllocator.toLeakAwareBuffer
  [ 5] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 6] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 7] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 8] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 9] io.rsocket.frame.FrameHeaderFlyweight.encode
  [10] io.rsocket.frame.RequestFlyweight.encode
  [11] io.rsocket.frame.RequestFlyweight.encode
  [12] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [13] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [14] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [15] reactor.core.publisher.MonoDefer.subscribe
  [16] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [17] reactor.core.publisher.MonoIgnoreThen.subscribe
  [18] reactor.core.publisher.MonoPeekFuseable.subscribe
  [19] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [22] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [23] reactor.core.publisher.FluxRange$RangeSubscription.request
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [25] reactor.core.publisher.FluxRange.subscribe
  [26] reactor.core.publisher.FluxFlatMap.subscribe
  [27] reactor.core.publisher.Flux.subscribe
  [28] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [29] reactor.core.publisher.Operators$MonoSubscriber.complete
  [30] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [31] reactor.core.publisher.Operators$MonoSubscriber.complete
  [32] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [33] reactor.core.publisher.MonoIgnoreThen.subscribe
  [34] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [35] reactor.core.publisher.Operators$ScalarSubscription.request
  [36] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [37] reactor.core.publisher.MonoJust.subscribe
  [38] reactor.core.publisher.MonoDefer.subscribe
  [39] reactor.core.publisher.MonoFlatMap.subscribe
  [40] reactor.core.publisher.MonoFlatMapMany.subscribe
  [41] reactor.core.publisher.FluxPeek.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.Flux.blockLast
  [44] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] java.util.Collections$SynchronizedMap.remove
  [ 1] io.rsocket.RSocketClient.lambda$null$11
  [ 2] io.rsocket.RSocketClient$$Lambda$72.363988129.accept
  [ 3] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 5] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 6] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 7] reactor.core.publisher.MonoProcessor.subscribe
  [ 8] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 9] reactor.core.publisher.MonoPeek.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.MonoDefer.subscribe
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [13] reactor.core.publisher.MonoIgnoreThen.subscribe
  [14] reactor.core.publisher.MonoPeekFuseable.subscribe
  [15] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [19] reactor.core.publisher.FluxRange$RangeSubscription.request
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.FluxRange.subscribe
  [22] reactor.core.publisher.FluxFlatMap.subscribe
  [23] reactor.core.publisher.Flux.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [27] reactor.core.publisher.Operators$MonoSubscriber.complete
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoFlatMap.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.Flux.blockLast
  [40] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] io.netty.util.internal.PlatformDependent.getInt
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.internalRefCnt
  [ 2] io.netty.buffer.AbstractByteBuf.ensureAccessible
  [ 3] io.netty.buffer.AbstractByteBuf.checkReadableBytes0
  [ 4] io.netty.buffer.AbstractByteBuf.checkReadableBytes
  [ 5] io.netty.buffer.AbstractByteBuf.readSlice
  [ 6] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 7] io.rsocket.frame.RequestFlyweight.data
  [ 8] io.rsocket.frame.PayloadFrameFlyweight.data
  [ 9] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.RSocketClient.handleFrame
  [12] io.rsocket.RSocketClient.handleIncomingFrames
  [13] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.UnicastProcessor.drainRegular
  [21] reactor.core.publisher.UnicastProcessor.drain
  [22] reactor.core.publisher.UnicastProcessor.onNext
  [23] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [24] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [26] io.rsocket.internal.UnboundedProcessor.drainRegular
  [27] io.rsocket.internal.UnboundedProcessor.drain
  [28] io.rsocket.internal.UnboundedProcessor.onNext
  [29] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [30] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [31] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [32] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [33] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [34] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [35] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [38] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [39] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [40] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [41] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [42] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [43] reactor.core.publisher.MonoJust.subscribe
  [44] reactor.core.publisher.MonoPeekFuseable.subscribe
  [45] reactor.core.publisher.MonoMapFuseable.subscribe
  [46] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [47] reactor.core.publisher.MonoDoFinally.subscribe
  [48] reactor.core.publisher.Mono.subscribe
  [49] reactor.core.publisher.Mono.subscribeWith
  [50] reactor.core.publisher.Mono.subscribe
  [51] reactor.core.publisher.Mono.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] io.rsocket.RSocketServer.handleRequestResponse
  [54] io.rsocket.RSocketServer.handleFrame
  [55] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [56] reactor.core.publisher.LambdaSubscriber.onNext
  [57] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [58] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [59] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [60] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [61] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [62] reactor.core.publisher.UnicastProcessor.drainRegular
  [63] reactor.core.publisher.UnicastProcessor.drain
  [64] reactor.core.publisher.UnicastProcessor.onNext
  [65] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [66] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [67] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [68] io.rsocket.internal.UnboundedProcessor.drainRegular
  [69] io.rsocket.internal.UnboundedProcessor.drain
  [70] io.rsocket.internal.UnboundedProcessor.onNext
  [71] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [72] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [73] reactor.core.publisher.MonoDefer.subscribe
  [74] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [75] reactor.core.publisher.MonoIgnoreThen.subscribe
  [76] reactor.core.publisher.MonoPeekFuseable.subscribe
  [77] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [78] reactor.core.publisher.Mono.subscribe
  [79] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [80] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [81] reactor.core.publisher.FluxRange$RangeSubscription.request
  [82] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [83] reactor.core.publisher.FluxRange.subscribe
  [84] reactor.core.publisher.FluxFlatMap.subscribe
  [85] reactor.core.publisher.Flux.subscribe
  [86] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [87] reactor.core.publisher.Operators$MonoSubscriber.complete
  [88] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [89] reactor.core.publisher.Operators$MonoSubscriber.complete
  [90] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [91] reactor.core.publisher.MonoIgnoreThen.subscribe
  [92] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [93] reactor.core.publisher.Operators$ScalarSubscription.request
  [94] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [95] reactor.core.publisher.MonoJust.subscribe
  [96] reactor.core.publisher.MonoDefer.subscribe
  [97] reactor.core.publisher.MonoFlatMap.subscribe
  [98] reactor.core.publisher.MonoFlatMapMany.subscribe
  [99] reactor.core.publisher.FluxPeek.subscribe
  [100] reactor.core.publisher.FluxPeek.subscribe
  [101] reactor.core.publisher.Flux.blockLast
  [102] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] java.util.Collections$SynchronizedMap.get
  [ 1] io.rsocket.RSocketClient.handleFrame
  [ 2] io.rsocket.RSocketClient.handleIncomingFrames
  [ 3] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 4] reactor.core.publisher.LambdaSubscriber.onNext
  [ 5] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 6] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 9] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [10] reactor.core.publisher.UnicastProcessor.drainRegular
  [11] reactor.core.publisher.UnicastProcessor.drain
  [12] reactor.core.publisher.UnicastProcessor.onNext
  [13] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [14] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [15] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [16] io.rsocket.internal.UnboundedProcessor.drainRegular
  [17] io.rsocket.internal.UnboundedProcessor.drain
  [18] io.rsocket.internal.UnboundedProcessor.onNext
  [19] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [20] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [21] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [22] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [23] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [24] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [26] reactor.core.publisher.Operators$ScalarSubscription.request
  [27] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [29] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [30] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [31] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [32] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoPeekFuseable.subscribe
  [35] reactor.core.publisher.MonoMapFuseable.subscribe
  [36] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [37] reactor.core.publisher.MonoDoFinally.subscribe
  [38] reactor.core.publisher.Mono.subscribe
  [39] reactor.core.publisher.Mono.subscribeWith
  [40] reactor.core.publisher.Mono.subscribe
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] io.rsocket.RSocketServer.handleRequestResponse
  [44] io.rsocket.RSocketServer.handleFrame
  [45] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [46] reactor.core.publisher.LambdaSubscriber.onNext
  [47] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [48] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [49] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [50] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [51] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [52] reactor.core.publisher.UnicastProcessor.drainRegular
  [53] reactor.core.publisher.UnicastProcessor.drain
  [54] reactor.core.publisher.UnicastProcessor.onNext
  [55] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [56] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [57] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [58] io.rsocket.internal.UnboundedProcessor.drainRegular
  [59] io.rsocket.internal.UnboundedProcessor.drain
  [60] io.rsocket.internal.UnboundedProcessor.onNext
  [61] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [62] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [63] reactor.core.publisher.MonoDefer.subscribe
  [64] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [65] reactor.core.publisher.MonoIgnoreThen.subscribe
  [66] reactor.core.publisher.MonoPeekFuseable.subscribe
  [67] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [68] reactor.core.publisher.Mono.subscribe
  [69] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [70] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [71] reactor.core.publisher.FluxRange$RangeSubscription.request
  [72] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [73] reactor.core.publisher.FluxRange.subscribe
  [74] reactor.core.publisher.FluxFlatMap.subscribe
  [75] reactor.core.publisher.Flux.subscribe
  [76] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [77] reactor.core.publisher.Operators$MonoSubscriber.complete
  [78] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [79] reactor.core.publisher.Operators$MonoSubscriber.complete
  [80] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [81] reactor.core.publisher.MonoIgnoreThen.subscribe
  [82] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [83] reactor.core.publisher.Operators$ScalarSubscription.request
  [84] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [85] reactor.core.publisher.MonoJust.subscribe
  [86] reactor.core.publisher.MonoDefer.subscribe
  [87] reactor.core.publisher.MonoFlatMap.subscribe
  [88] reactor.core.publisher.MonoFlatMapMany.subscribe
  [89] reactor.core.publisher.FluxPeek.subscribe
  [90] reactor.core.publisher.FluxPeek.subscribe
  [91] reactor.core.publisher.Flux.blockLast
  [92] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] io.netty.util.AbstractReferenceCounted.retain0
  [ 1] io.netty.util.AbstractReferenceCounted.retain
  [ 2] io.rsocket.util.ByteBufPayload.retain
  [ 3] io.rsocket.util.ByteBufPayload.retain
  [ 4] io.rsocket.test.PingClient.lambda$null$2
  [ 5] io.rsocket.test.PingClient$$Lambda$59.2100961961.apply
  [ 6] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 7] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [ 8] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 9] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [10] reactor.core.publisher.FluxRange.subscribe
  [11] reactor.core.publisher.FluxFlatMap.subscribe
  [12] reactor.core.publisher.Flux.subscribe
  [13] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [14] reactor.core.publisher.Operators$MonoSubscriber.complete
  [15] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [16] reactor.core.publisher.Operators$MonoSubscriber.complete
  [17] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [18] reactor.core.publisher.MonoIgnoreThen.subscribe
  [19] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [20] reactor.core.publisher.Operators$ScalarSubscription.request
  [21] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [22] reactor.core.publisher.MonoJust.subscribe
  [23] reactor.core.publisher.MonoDefer.subscribe
  [24] reactor.core.publisher.MonoFlatMap.subscribe
  [25] reactor.core.publisher.MonoFlatMapMany.subscribe
  [26] reactor.core.publisher.FluxPeek.subscribe
  [27] reactor.core.publisher.FluxPeek.subscribe
  [28] reactor.core.publisher.Flux.blockLast
  [29] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] reactor.core.publisher.FlatMapTracker.add
  [ 1] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 2] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [ 3] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 4] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [ 5] reactor.core.publisher.FluxRange.subscribe
  [ 6] reactor.core.publisher.FluxFlatMap.subscribe
  [ 7] reactor.core.publisher.Flux.subscribe
  [ 8] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [ 9] reactor.core.publisher.Operators$MonoSubscriber.complete
  [10] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [11] reactor.core.publisher.Operators$MonoSubscriber.complete
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [13] reactor.core.publisher.MonoIgnoreThen.subscribe
  [14] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [15] reactor.core.publisher.Operators$ScalarSubscription.request
  [16] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [17] reactor.core.publisher.MonoJust.subscribe
  [18] reactor.core.publisher.MonoDefer.subscribe
  [19] reactor.core.publisher.MonoFlatMap.subscribe
  [20] reactor.core.publisher.MonoFlatMapMany.subscribe
  [21] reactor.core.publisher.FluxPeek.subscribe
  [22] reactor.core.publisher.FluxPeek.subscribe
  [23] reactor.core.publisher.Flux.blockLast
  [24] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
  [ 1] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet
  [ 2] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [ 3] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 4] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [ 5] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [ 6] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 7] reactor.core.publisher.Operators$ScalarSubscription.request
  [ 8] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [ 9] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [10] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [11] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [12] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [13] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [14] reactor.core.publisher.MonoJust.subscribe
  [15] reactor.core.publisher.MonoPeekFuseable.subscribe
  [16] reactor.core.publisher.MonoMapFuseable.subscribe
  [17] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [18] reactor.core.publisher.MonoDoFinally.subscribe
  [19] reactor.core.publisher.Mono.subscribe
  [20] reactor.core.publisher.Mono.subscribeWith
  [21] reactor.core.publisher.Mono.subscribe
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] io.rsocket.RSocketServer.handleRequestResponse
  [25] io.rsocket.RSocketServer.handleFrame
  [26] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [27] reactor.core.publisher.LambdaSubscriber.onNext
  [28] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [29] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [32] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [33] reactor.core.publisher.UnicastProcessor.drainRegular
  [34] reactor.core.publisher.UnicastProcessor.drain
  [35] reactor.core.publisher.UnicastProcessor.onNext
  [36] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [37] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [38] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [39] io.rsocket.internal.UnboundedProcessor.drainRegular
  [40] io.rsocket.internal.UnboundedProcessor.drain
  [41] io.rsocket.internal.UnboundedProcessor.onNext
  [42] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [43] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [44] reactor.core.publisher.MonoDefer.subscribe
  [45] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [46] reactor.core.publisher.MonoIgnoreThen.subscribe
  [47] reactor.core.publisher.MonoPeekFuseable.subscribe
  [48] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [49] reactor.core.publisher.Mono.subscribe
  [50] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [51] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [52] reactor.core.publisher.FluxRange$RangeSubscription.request
  [53] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [54] reactor.core.publisher.FluxRange.subscribe
  [55] reactor.core.publisher.FluxFlatMap.subscribe
  [56] reactor.core.publisher.Flux.subscribe
  [57] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [58] reactor.core.publisher.Operators$MonoSubscriber.complete
  [59] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [60] reactor.core.publisher.Operators$MonoSubscriber.complete
  [61] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [62] reactor.core.publisher.MonoIgnoreThen.subscribe
  [63] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [64] reactor.core.publisher.Operators$ScalarSubscription.request
  [65] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [66] reactor.core.publisher.MonoJust.subscribe
  [67] reactor.core.publisher.MonoDefer.subscribe
  [68] reactor.core.publisher.MonoFlatMap.subscribe
  [69] reactor.core.publisher.MonoFlatMapMany.subscribe
  [70] reactor.core.publisher.FluxPeek.subscribe
  [71] reactor.core.publisher.FluxPeek.subscribe
  [72] reactor.core.publisher.Flux.blockLast
  [73] io.rsocket.transport.local.LocalPingPong.main

--- 80000000 ns (0.30%), 8 samples
  [ 0] io.netty.buffer.PoolThreadCache.cache
  [ 1] io.netty.buffer.PoolThreadCache.add
  [ 2] io.netty.buffer.PoolArena.free
  [ 3] io.netty.buffer.PooledByteBuf.deallocate
  [ 4] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 5] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 6] io.netty.util.ReferenceCountUtil.release
  [ 7] io.netty.util.ReferenceCountUtil.safeRelease
  [ 8] io.rsocket.buffer.Tuple2ByteBuf.deallocate
  [ 9] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [10] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [11] io.rsocket.RSocketClient.handleIncomingFrames
  [12] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [13] reactor.core.publisher.LambdaSubscriber.onNext
  [14] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [18] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [19] reactor.core.publisher.UnicastProcessor.drainRegular
  [20] reactor.core.publisher.UnicastProcessor.drain
  [21] reactor.core.publisher.UnicastProcessor.onNext
  [22] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [23] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [25] io.rsocket.internal.UnboundedProcessor.drainRegular
  [26] io.rsocket.internal.UnboundedProcessor.drain
  [27] io.rsocket.internal.UnboundedProcessor.onNext
  [28] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [29] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [30] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [31] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [32] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [33] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [34] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [35] reactor.core.publisher.Operators$ScalarSubscription.request
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [37] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [38] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [39] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [40] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [41] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [42] reactor.core.publisher.MonoJust.subscribe
  [43] reactor.core.publisher.MonoPeekFuseable.subscribe
  [44] reactor.core.publisher.MonoMapFuseable.subscribe
  [45] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [46] reactor.core.publisher.MonoDoFinally.subscribe
  [47] reactor.core.publisher.Mono.subscribe
  [48] reactor.core.publisher.Mono.subscribeWith
  [49] reactor.core.publisher.Mono.subscribe
  [50] reactor.core.publisher.Mono.subscribe
  [51] reactor.core.publisher.Mono.subscribe
  [52] io.rsocket.RSocketServer.handleRequestResponse
  [53] io.rsocket.RSocketServer.handleFrame
  [54] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [55] reactor.core.publisher.LambdaSubscriber.onNext
  [56] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [57] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [58] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [59] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [60] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [61] reactor.core.publisher.UnicastProcessor.drainRegular
  [62] reactor.core.publisher.UnicastProcessor.drain
  [63] reactor.core.publisher.UnicastProcessor.onNext
  [64] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [65] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [66] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [67] io.rsocket.internal.UnboundedProcessor.drainRegular
  [68] io.rsocket.internal.UnboundedProcessor.drain
  [69] io.rsocket.internal.UnboundedProcessor.onNext
  [70] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [71] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [72] reactor.core.publisher.MonoDefer.subscribe
  [73] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [74] reactor.core.publisher.MonoIgnoreThen.subscribe
  [75] reactor.core.publisher.MonoPeekFuseable.subscribe
  [76] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [77] reactor.core.publisher.Mono.subscribe
  [78] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [79] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [80] reactor.core.publisher.FluxRange$RangeSubscription.request
  [81] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [82] reactor.core.publisher.FluxRange.subscribe
  [83] reactor.core.publisher.FluxFlatMap.subscribe
  [84] reactor.core.publisher.Flux.subscribe
  [85] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [86] reactor.core.publisher.Operators$MonoSubscriber.complete
  [87] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [88] reactor.core.publisher.Operators$MonoSubscriber.complete
  [89] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [90] reactor.core.publisher.MonoIgnoreThen.subscribe
  [91] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [92] reactor.core.publisher.Operators$ScalarSubscription.request
  [93] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [94] reactor.core.publisher.MonoJust.subscribe
  [95] reactor.core.publisher.MonoDefer.subscribe
  [96] reactor.core.publisher.MonoFlatMap.subscribe
  [97] reactor.core.publisher.MonoFlatMapMany.subscribe
  [98] reactor.core.publisher.FluxPeek.subscribe
  [99] reactor.core.publisher.FluxPeek.subscribe
  [100] reactor.core.publisher.Flux.blockLast
  [101] io.rsocket.transport.local.LocalPingPong.main

--- 70000000 ns (0.26%), 7 samples
  [ 0] reactor.core.publisher.MonoProcessor.onNext
  [ 1] io.rsocket.internal.UnicastMonoProcessor.onNext
  [ 2] io.rsocket.RSocketClient.handleFrame
  [ 3] io.rsocket.RSocketClient.handleIncomingFrames
  [ 4] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 5] reactor.core.publisher.LambdaSubscriber.onNext
  [ 6] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [10] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [11] reactor.core.publisher.UnicastProcessor.drainRegular
  [12] reactor.core.publisher.UnicastProcessor.drain
  [13] reactor.core.publisher.UnicastProcessor.onNext
  [14] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [15] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [17] io.rsocket.internal.UnboundedProcessor.drainRegular
  [18] io.rsocket.internal.UnboundedProcessor.drain
  [19] io.rsocket.internal.UnboundedProcessor.onNext
  [20] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [21] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [22] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [23] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [24] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [25] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [27] reactor.core.publisher.Operators$ScalarSubscription.request
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [29] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [30] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [31] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [32] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [33] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [34] reactor.core.publisher.MonoJust.subscribe
  [35] reactor.core.publisher.MonoPeekFuseable.subscribe
  [36] reactor.core.publisher.MonoMapFuseable.subscribe
  [37] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [38] reactor.core.publisher.MonoDoFinally.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] reactor.core.publisher.Mono.subscribeWith
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.Mono.subscribe
  [44] io.rsocket.RSocketServer.handleRequestResponse
  [45] io.rsocket.RSocketServer.handleFrame
  [46] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [47] reactor.core.publisher.LambdaSubscriber.onNext
  [48] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [49] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [50] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [51] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [52] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [53] reactor.core.publisher.UnicastProcessor.drainRegular
  [54] reactor.core.publisher.UnicastProcessor.drain
  [55] reactor.core.publisher.UnicastProcessor.onNext
  [56] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [57] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [58] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [59] io.rsocket.internal.UnboundedProcessor.drainRegular
  [60] io.rsocket.internal.UnboundedProcessor.drain
  [61] io.rsocket.internal.UnboundedProcessor.onNext
  [62] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [63] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [64] reactor.core.publisher.MonoDefer.subscribe
  [65] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [66] reactor.core.publisher.MonoIgnoreThen.subscribe
  [67] reactor.core.publisher.MonoPeekFuseable.subscribe
  [68] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [69] reactor.core.publisher.Mono.subscribe
  [70] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [71] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [72] reactor.core.publisher.FluxRange$RangeSubscription.request
  [73] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [74] reactor.core.publisher.FluxRange.subscribe
  [75] reactor.core.publisher.FluxFlatMap.subscribe
  [76] reactor.core.publisher.Flux.subscribe
  [77] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [78] reactor.core.publisher.Operators$MonoSubscriber.complete
  [79] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [80] reactor.core.publisher.Operators$MonoSubscriber.complete
  [81] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [82] reactor.core.publisher.MonoIgnoreThen.subscribe
  [83] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [84] reactor.core.publisher.Operators$ScalarSubscription.request
  [85] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [86] reactor.core.publisher.MonoJust.subscribe
  [87] reactor.core.publisher.MonoDefer.subscribe
  [88] reactor.core.publisher.MonoFlatMap.subscribe
  [89] reactor.core.publisher.MonoFlatMapMany.subscribe
  [90] reactor.core.publisher.FluxPeek.subscribe
  [91] reactor.core.publisher.FluxPeek.subscribe
  [92] reactor.core.publisher.Flux.blockLast
  [93] io.rsocket.transport.local.LocalPingPong.main

--- 70000000 ns (0.26%), 7 samples
  [ 0] itable stub
  [ 1] java.util.concurrent.ConcurrentHashMap.get
  [ 2] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 3] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 4] reactor.core.publisher.UnicastProcessor.drain
  [ 5] reactor.core.publisher.UnicastProcessor.onNext
  [ 6] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 7] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [ 8] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 9] reactor.core.publisher.Operators$ScalarSubscription.request
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [11] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [12] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [13] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [14] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [15] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [16] reactor.core.publisher.MonoJust.subscribe
  [17] reactor.core.publisher.MonoPeekFuseable.subscribe
  [18] reactor.core.publisher.MonoMapFuseable.subscribe
  [19] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [20] reactor.core.publisher.MonoDoFinally.subscribe
  [21] reactor.core.publisher.Mono.subscribe
  [22] reactor.core.publisher.Mono.subscribeWith
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.Mono.subscribe
  [26] io.rsocket.RSocketServer.handleRequestResponse
  [27] io.rsocket.RSocketServer.handleFrame
  [28] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [29] reactor.core.publisher.LambdaSubscriber.onNext
  [30] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [33] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [34] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [35] reactor.core.publisher.UnicastProcessor.drainRegular
  [36] reactor.core.publisher.UnicastProcessor.drain
  [37] reactor.core.publisher.UnicastProcessor.onNext
  [38] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [39] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [40] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [41] io.rsocket.internal.UnboundedProcessor.drainRegular
  [42] io.rsocket.internal.UnboundedProcessor.drain
  [43] io.rsocket.internal.UnboundedProcessor.onNext
  [44] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [45] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [46] reactor.core.publisher.MonoDefer.subscribe
  [47] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [48] reactor.core.publisher.MonoIgnoreThen.subscribe
  [49] reactor.core.publisher.MonoPeekFuseable.subscribe
  [50] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [51] reactor.core.publisher.Mono.subscribe
  [52] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [53] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [54] reactor.core.publisher.FluxRange$RangeSubscription.request
  [55] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [56] reactor.core.publisher.FluxRange.subscribe
  [57] reactor.core.publisher.FluxFlatMap.subscribe
  [58] reactor.core.publisher.Flux.subscribe
  [59] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [60] reactor.core.publisher.Operators$MonoSubscriber.complete
  [61] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [62] reactor.core.publisher.Operators$MonoSubscriber.complete
  [63] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [64] reactor.core.publisher.MonoIgnoreThen.subscribe
  [65] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [66] reactor.core.publisher.Operators$ScalarSubscription.request
  [67] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [68] reactor.core.publisher.MonoJust.subscribe
  [69] reactor.core.publisher.MonoDefer.subscribe
  [70] reactor.core.publisher.MonoFlatMap.subscribe
  [71] reactor.core.publisher.MonoFlatMapMany.subscribe
  [72] reactor.core.publisher.FluxPeek.subscribe
  [73] reactor.core.publisher.FluxPeek.subscribe
  [74] reactor.core.publisher.Flux.blockLast
  [75] io.rsocket.transport.local.LocalPingPong.main

--- 70000000 ns (0.26%), 7 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 1] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 2] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 3] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 4] reactor.core.publisher.MonoProcessor.subscribe
  [ 5] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 6] reactor.core.publisher.MonoPeek.subscribe
  [ 7] reactor.core.publisher.MonoDoFinally.subscribe
  [ 8] reactor.core.publisher.MonoDefer.subscribe
  [ 9] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [10] reactor.core.publisher.MonoIgnoreThen.subscribe
  [11] reactor.core.publisher.MonoPeekFuseable.subscribe
  [12] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [13] reactor.core.publisher.Mono.subscribe
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [15] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [16] reactor.core.publisher.FluxRange$RangeSubscription.request
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [18] reactor.core.publisher.FluxRange.subscribe
  [19] reactor.core.publisher.FluxFlatMap.subscribe
  [20] reactor.core.publisher.Flux.subscribe
  [21] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [24] reactor.core.publisher.Operators$MonoSubscriber.complete
  [25] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [26] reactor.core.publisher.MonoIgnoreThen.subscribe
  [27] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [28] reactor.core.publisher.Operators$ScalarSubscription.request
  [29] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [30] reactor.core.publisher.MonoJust.subscribe
  [31] reactor.core.publisher.MonoDefer.subscribe
  [32] reactor.core.publisher.MonoFlatMap.subscribe
  [33] reactor.core.publisher.MonoFlatMapMany.subscribe
  [34] reactor.core.publisher.FluxPeek.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.Flux.blockLast
  [37] io.rsocket.transport.local.LocalPingPong.main

--- 70000000 ns (0.26%), 7 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 2] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.addAndGet
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 4] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 5] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 6] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 7] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 8] reactor.core.publisher.UnicastProcessor.drain
  [ 9] reactor.core.publisher.UnicastProcessor.onNext
  [10] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [11] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [12] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [13] io.rsocket.internal.UnboundedProcessor.drainRegular
  [14] io.rsocket.internal.UnboundedProcessor.drain
  [15] io.rsocket.internal.UnboundedProcessor.onNext
  [16] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [17] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [18] reactor.core.publisher.MonoDefer.subscribe
  [19] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [20] reactor.core.publisher.MonoIgnoreThen.subscribe
  [21] reactor.core.publisher.MonoPeekFuseable.subscribe
  [22] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [25] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [26] reactor.core.publisher.FluxRange$RangeSubscription.request
  [27] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.FluxRange.subscribe
  [29] reactor.core.publisher.FluxFlatMap.subscribe
  [30] reactor.core.publisher.Flux.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [34] reactor.core.publisher.Operators$MonoSubscriber.complete
  [35] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [36] reactor.core.publisher.MonoIgnoreThen.subscribe
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [38] reactor.core.publisher.Operators$ScalarSubscription.request
  [39] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [40] reactor.core.publisher.MonoJust.subscribe
  [41] reactor.core.publisher.MonoDefer.subscribe
  [42] reactor.core.publisher.MonoFlatMap.subscribe
  [43] reactor.core.publisher.MonoFlatMapMany.subscribe
  [44] reactor.core.publisher.FluxPeek.subscribe
  [45] reactor.core.publisher.FluxPeek.subscribe
  [46] reactor.core.publisher.Flux.blockLast
  [47] io.rsocket.transport.local.LocalPingPong.main

--- 70000000 ns (0.26%), 7 samples
  [ 0] io.rsocket.frame.DataAndMetadataFlyweight.metadataWithoutMarking
  [ 1] io.rsocket.frame.RequestFlyweight.metadata
  [ 2] io.rsocket.frame.PayloadFrameFlyweight.metadata
  [ 3] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 4] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 5] io.rsocket.RSocketClient.handleFrame
  [ 6] io.rsocket.RSocketClient.handleIncomingFrames
  [ 7] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 8] reactor.core.publisher.LambdaSubscriber.onNext
  [ 9] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [13] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [14] reactor.core.publisher.UnicastProcessor.drainRegular
  [15] reactor.core.publisher.UnicastProcessor.drain
  [16] reactor.core.publisher.UnicastProcessor.onNext
  [17] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [18] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [19] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [20] io.rsocket.internal.UnboundedProcessor.drainRegular
  [21] io.rsocket.internal.UnboundedProcessor.drain
  [22] io.rsocket.internal.UnboundedProcessor.onNext
  [23] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [24] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [25] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [26] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [27] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [29] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [30] reactor.core.publisher.Operators$ScalarSubscription.request
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [32] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [33] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [34] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [37] reactor.core.publisher.MonoJust.subscribe
  [38] reactor.core.publisher.MonoPeekFuseable.subscribe
  [39] reactor.core.publisher.MonoMapFuseable.subscribe
  [40] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [41] reactor.core.publisher.MonoDoFinally.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.Mono.subscribeWith
  [44] reactor.core.publisher.Mono.subscribe
  [45] reactor.core.publisher.Mono.subscribe
  [46] reactor.core.publisher.Mono.subscribe
  [47] io.rsocket.RSocketServer.handleRequestResponse
  [48] io.rsocket.RSocketServer.handleFrame
  [49] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [50] reactor.core.publisher.LambdaSubscriber.onNext
  [51] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [52] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [53] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [54] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [55] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [56] reactor.core.publisher.UnicastProcessor.drainRegular
  [57] reactor.core.publisher.UnicastProcessor.drain
  [58] reactor.core.publisher.UnicastProcessor.onNext
  [59] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [60] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [61] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [62] io.rsocket.internal.UnboundedProcessor.drainRegular
  [63] io.rsocket.internal.UnboundedProcessor.drain
  [64] io.rsocket.internal.UnboundedProcessor.onNext
  [65] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [66] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [67] reactor.core.publisher.MonoDefer.subscribe
  [68] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [69] reactor.core.publisher.MonoIgnoreThen.subscribe
  [70] reactor.core.publisher.MonoPeekFuseable.subscribe
  [71] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [72] reactor.core.publisher.Mono.subscribe
  [73] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [74] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [75] reactor.core.publisher.FluxRange$RangeSubscription.request
  [76] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [77] reactor.core.publisher.FluxRange.subscribe
  [78] reactor.core.publisher.FluxFlatMap.subscribe
  [79] reactor.core.publisher.Flux.subscribe
  [80] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [81] reactor.core.publisher.Operators$MonoSubscriber.complete
  [82] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [83] reactor.core.publisher.Operators$MonoSubscriber.complete
  [84] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [85] reactor.core.publisher.MonoIgnoreThen.subscribe
  [86] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [87] reactor.core.publisher.Operators$ScalarSubscription.request
  [88] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [89] reactor.core.publisher.MonoJust.subscribe
  [90] reactor.core.publisher.MonoDefer.subscribe
  [91] reactor.core.publisher.MonoFlatMap.subscribe
  [92] reactor.core.publisher.MonoFlatMapMany.subscribe
  [93] reactor.core.publisher.FluxPeek.subscribe
  [94] reactor.core.publisher.FluxPeek.subscribe
  [95] reactor.core.publisher.Flux.blockLast
  [96] io.rsocket.transport.local.LocalPingPong.main

--- 70000000 ns (0.26%), 7 samples
  [ 0] io.rsocket.buffer.Tuple2ByteBuf.slice
  [ 1] io.netty.buffer.AbstractByteBuf.readSlice
  [ 2] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 3] io.rsocket.frame.RequestFlyweight.data
  [ 4] io.rsocket.frame.PayloadFrameFlyweight.data
  [ 5] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 6] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 7] io.rsocket.RSocketClient.handleFrame
  [ 8] io.rsocket.RSocketClient.handleIncomingFrames
  [ 9] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [10] reactor.core.publisher.LambdaSubscriber.onNext
  [11] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [15] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [16] reactor.core.publisher.UnicastProcessor.drainRegular
  [17] reactor.core.publisher.UnicastProcessor.drain
  [18] reactor.core.publisher.UnicastProcessor.onNext
  [19] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [20] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [22] io.rsocket.internal.UnboundedProcessor.drainRegular
  [23] io.rsocket.internal.UnboundedProcessor.drain
  [24] io.rsocket.internal.UnboundedProcessor.onNext
  [25] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [26] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [27] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [28] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [29] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [30] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [32] reactor.core.publisher.Operators$ScalarSubscription.request
  [33] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [34] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [35] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [36] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [37] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [38] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [39] reactor.core.publisher.MonoJust.subscribe
  [40] reactor.core.publisher.MonoPeekFuseable.subscribe
  [41] reactor.core.publisher.MonoMapFuseable.subscribe
  [42] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [43] reactor.core.publisher.MonoDoFinally.subscribe
  [44] reactor.core.publisher.Mono.subscribe
  [45] reactor.core.publisher.Mono.subscribeWith
  [46] reactor.core.publisher.Mono.subscribe
  [47] reactor.core.publisher.Mono.subscribe
  [48] reactor.core.publisher.Mono.subscribe
  [49] io.rsocket.RSocketServer.handleRequestResponse
  [50] io.rsocket.RSocketServer.handleFrame
  [51] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [52] reactor.core.publisher.LambdaSubscriber.onNext
  [53] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [54] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [55] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [56] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [57] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [58] reactor.core.publisher.UnicastProcessor.drainRegular
  [59] reactor.core.publisher.UnicastProcessor.drain
  [60] reactor.core.publisher.UnicastProcessor.onNext
  [61] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [62] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [63] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [64] io.rsocket.internal.UnboundedProcessor.drainRegular
  [65] io.rsocket.internal.UnboundedProcessor.drain
  [66] io.rsocket.internal.UnboundedProcessor.onNext
  [67] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [68] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [69] reactor.core.publisher.MonoDefer.subscribe
  [70] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [71] reactor.core.publisher.MonoIgnoreThen.subscribe
  [72] reactor.core.publisher.MonoPeekFuseable.subscribe
  [73] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [74] reactor.core.publisher.Mono.subscribe
  [75] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [76] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [77] reactor.core.publisher.FluxRange$RangeSubscription.request
  [78] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [79] reactor.core.publisher.FluxRange.subscribe
  [80] reactor.core.publisher.FluxFlatMap.subscribe
  [81] reactor.core.publisher.Flux.subscribe
  [82] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [83] reactor.core.publisher.Operators$MonoSubscriber.complete
  [84] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [85] reactor.core.publisher.Operators$MonoSubscriber.complete
  [86] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [87] reactor.core.publisher.MonoIgnoreThen.subscribe
  [88] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [89] reactor.core.publisher.Operators$ScalarSubscription.request
  [90] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [91] reactor.core.publisher.MonoJust.subscribe
  [92] reactor.core.publisher.MonoDefer.subscribe
  [93] reactor.core.publisher.MonoFlatMap.subscribe
  [94] reactor.core.publisher.MonoFlatMapMany.subscribe
  [95] reactor.core.publisher.FluxPeek.subscribe
  [96] reactor.core.publisher.FluxPeek.subscribe
  [97] reactor.core.publisher.Flux.blockLast
  [98] io.rsocket.transport.local.LocalPingPong.main

--- 70000000 ns (0.26%), 7 samples
  [ 0] io.rsocket.test.PingClient$$Lambda$63.932285561.accept
  [ 1] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 2] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 3] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [ 4] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 5] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 6] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 7] reactor.core.publisher.MonoProcessor.subscribe
  [ 8] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 9] reactor.core.publisher.MonoPeek.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.MonoDefer.subscribe
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [13] reactor.core.publisher.MonoIgnoreThen.subscribe
  [14] reactor.core.publisher.MonoPeekFuseable.subscribe
  [15] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [19] reactor.core.publisher.FluxRange$RangeSubscription.request
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.FluxRange.subscribe
  [22] reactor.core.publisher.FluxFlatMap.subscribe
  [23] reactor.core.publisher.Flux.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [27] reactor.core.publisher.Operators$MonoSubscriber.complete
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoFlatMap.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.Flux.blockLast
  [40] io.rsocket.transport.local.LocalPingPong.main

--- 70000000 ns (0.26%), 7 samples
  [ 0] java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater.get
  [ 2] reactor.core.publisher.Operators.addCap
  [ 3] reactor.core.publisher.UnicastProcessor.request
  [ 4] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 5] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 6] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 8] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 9] reactor.core.publisher.UnicastProcessor.drain
  [10] reactor.core.publisher.UnicastProcessor.onNext
  [11] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [12] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [13] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [14] io.rsocket.internal.UnboundedProcessor.drainRegular
  [15] io.rsocket.internal.UnboundedProcessor.drain
  [16] io.rsocket.internal.UnboundedProcessor.onNext
  [17] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [18] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [19] reactor.core.publisher.MonoDefer.subscribe
  [20] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [21] reactor.core.publisher.MonoIgnoreThen.subscribe
  [22] reactor.core.publisher.MonoPeekFuseable.subscribe
  [23] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [26] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [27] reactor.core.publisher.FluxRange$RangeSubscription.request
  [28] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [29] reactor.core.publisher.FluxRange.subscribe
  [30] reactor.core.publisher.FluxFlatMap.subscribe
  [31] reactor.core.publisher.Flux.subscribe
  [32] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [33] reactor.core.publisher.Operators$MonoSubscriber.complete
  [34] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [35] reactor.core.publisher.Operators$MonoSubscriber.complete
  [36] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [37] reactor.core.publisher.MonoIgnoreThen.subscribe
  [38] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [39] reactor.core.publisher.Operators$ScalarSubscription.request
  [40] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [41] reactor.core.publisher.MonoJust.subscribe
  [42] reactor.core.publisher.MonoDefer.subscribe
  [43] reactor.core.publisher.MonoFlatMap.subscribe
  [44] reactor.core.publisher.MonoFlatMapMany.subscribe
  [45] reactor.core.publisher.FluxPeek.subscribe
  [46] reactor.core.publisher.FluxPeek.subscribe
  [47] reactor.core.publisher.Flux.blockLast
  [48] io.rsocket.transport.local.LocalPingPong.main

--- 70000000 ns (0.26%), 7 samples
  [ 0] java.lang.Number.<init>
  [ 1] java.lang.Integer.<init>
  [ 2] java.lang.Integer.valueOf
  [ 3] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [ 4] io.rsocket.RSocketServer$$Lambda$65.349420578.accept
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 6] reactor.core.publisher.MonoJust.subscribe
  [ 7] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 8] reactor.core.publisher.MonoMapFuseable.subscribe
  [ 9] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.Mono.subscribeWith
  [13] reactor.core.publisher.Mono.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] io.rsocket.RSocketServer.handleRequestResponse
  [17] io.rsocket.RSocketServer.handleFrame
  [18] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [19] reactor.core.publisher.LambdaSubscriber.onNext
  [20] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [21] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [23] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [24] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [25] reactor.core.publisher.UnicastProcessor.drainRegular
  [26] reactor.core.publisher.UnicastProcessor.drain
  [27] reactor.core.publisher.UnicastProcessor.onNext
  [28] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [29] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [30] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [31] io.rsocket.internal.UnboundedProcessor.drainRegular
  [32] io.rsocket.internal.UnboundedProcessor.drain
  [33] io.rsocket.internal.UnboundedProcessor.onNext
  [34] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [35] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [36] reactor.core.publisher.MonoDefer.subscribe
  [37] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [38] reactor.core.publisher.MonoIgnoreThen.subscribe
  [39] reactor.core.publisher.MonoPeekFuseable.subscribe
  [40] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [43] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [44] reactor.core.publisher.FluxRange$RangeSubscription.request
  [45] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [46] reactor.core.publisher.FluxRange.subscribe
  [47] reactor.core.publisher.FluxFlatMap.subscribe
  [48] reactor.core.publisher.Flux.subscribe
  [49] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [50] reactor.core.publisher.Operators$MonoSubscriber.complete
  [51] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [52] reactor.core.publisher.Operators$MonoSubscriber.complete
  [53] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [54] reactor.core.publisher.MonoIgnoreThen.subscribe
  [55] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [56] reactor.core.publisher.Operators$ScalarSubscription.request
  [57] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [58] reactor.core.publisher.MonoJust.subscribe
  [59] reactor.core.publisher.MonoDefer.subscribe
  [60] reactor.core.publisher.MonoFlatMap.subscribe
  [61] reactor.core.publisher.MonoFlatMapMany.subscribe
  [62] reactor.core.publisher.FluxPeek.subscribe
  [63] reactor.core.publisher.FluxPeek.subscribe
  [64] reactor.core.publisher.Flux.blockLast
  [65] io.rsocket.transport.local.LocalPingPong.main

--- 60000000 ns (0.22%), 6 samples
  [ 0] io.netty.buffer.PooledUnsafeDirectByteBuf._setByte
  [ 1] io.netty.buffer.AbstractByteBuf.writeByte
  [ 2] io.rsocket.frame.DataAndMetadataFlyweight.encodeLength
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 4] io.rsocket.frame.RequestFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 7] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 8] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 9] reactor.core.publisher.MonoDefer.subscribe
  [10] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [11] reactor.core.publisher.MonoIgnoreThen.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [19] reactor.core.publisher.FluxRange.subscribe
  [20] reactor.core.publisher.FluxFlatMap.subscribe
  [21] reactor.core.publisher.Flux.subscribe
  [22] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.Operators$ScalarSubscription.request
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [31] reactor.core.publisher.MonoJust.subscribe
  [32] reactor.core.publisher.MonoDefer.subscribe
  [33] reactor.core.publisher.MonoFlatMap.subscribe
  [34] reactor.core.publisher.MonoFlatMapMany.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.Flux.blockLast
  [38] io.rsocket.transport.local.LocalPingPong.main

--- 60000000 ns (0.22%), 6 samples
  [ 0] reactor.core.publisher.Mono.onAssembly
  [ 1] reactor.core.publisher.Mono.doFinally
  [ 2] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 3] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 4] reactor.core.publisher.MonoDefer.subscribe
  [ 5] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 6] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 7] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 8] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 9] reactor.core.publisher.Mono.subscribe
  [10] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [11] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [12] reactor.core.publisher.FluxRange$RangeSubscription.request
  [13] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [14] reactor.core.publisher.FluxRange.subscribe
  [15] reactor.core.publisher.FluxFlatMap.subscribe
  [16] reactor.core.publisher.Flux.subscribe
  [17] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [18] reactor.core.publisher.Operators$MonoSubscriber.complete
  [19] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [20] reactor.core.publisher.Operators$MonoSubscriber.complete
  [21] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [22] reactor.core.publisher.MonoIgnoreThen.subscribe
  [23] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [24] reactor.core.publisher.Operators$ScalarSubscription.request
  [25] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [26] reactor.core.publisher.MonoJust.subscribe
  [27] reactor.core.publisher.MonoDefer.subscribe
  [28] reactor.core.publisher.MonoFlatMap.subscribe
  [29] reactor.core.publisher.MonoFlatMapMany.subscribe
  [30] reactor.core.publisher.FluxPeek.subscribe
  [31] reactor.core.publisher.FluxPeek.subscribe
  [32] reactor.core.publisher.Flux.blockLast
  [33] io.rsocket.transport.local.LocalPingPong.main

--- 60000000 ns (0.22%), 6 samples
  [ 0] reactor.core.publisher.InnerOperator.currentContext
  [ 1] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.currentContext
  [ 2] reactor.core.publisher.MonoCreate$DefaultMonoSink.<init>
  [ 3] reactor.core.publisher.MonoCreate.subscribe
  [ 4] reactor.core.publisher.Mono.subscribe
  [ 5] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 6] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 7] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 8] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 9] reactor.core.publisher.Mono.subscribe
  [10] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [11] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [12] reactor.core.publisher.FluxRange$RangeSubscription.request
  [13] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [14] reactor.core.publisher.FluxRange.subscribe
  [15] reactor.core.publisher.FluxFlatMap.subscribe
  [16] reactor.core.publisher.Flux.subscribe
  [17] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [18] reactor.core.publisher.Operators$MonoSubscriber.complete
  [19] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [20] reactor.core.publisher.Operators$MonoSubscriber.complete
  [21] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [22] reactor.core.publisher.MonoIgnoreThen.subscribe
  [23] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [24] reactor.core.publisher.Operators$ScalarSubscription.request
  [25] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [26] reactor.core.publisher.MonoJust.subscribe
  [27] reactor.core.publisher.MonoDefer.subscribe
  [28] reactor.core.publisher.MonoFlatMap.subscribe
  [29] reactor.core.publisher.MonoFlatMapMany.subscribe
  [30] reactor.core.publisher.FluxPeek.subscribe
  [31] reactor.core.publisher.FluxPeek.subscribe
  [32] reactor.core.publisher.Flux.blockLast
  [33] io.rsocket.transport.local.LocalPingPong.main

--- 60000000 ns (0.22%), 6 samples
  [ 0] io.netty.buffer.AbstractByteBuf.<init>
  [ 1] io.netty.buffer.AbstractDerivedByteBuf.<init>
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 4] io.netty.buffer.AbstractByteBuf.slice
  [ 5] io.netty.buffer.AbstractByteBuf.slice
  [ 6] io.rsocket.util.ByteBufPayload.sliceData
  [ 7] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 8] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 9] reactor.core.publisher.MonoDefer.subscribe
  [10] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [11] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.ignoreDone
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.onComplete
  [13] reactor.core.publisher.MonoCreate$DefaultMonoSink.success
  [14] io.rsocket.RSocketClient$Lifecycle.lambda$active$0
  [15] io.rsocket.RSocketClient$Lifecycle$$Lambda$61.802600647.accept
  [16] reactor.core.publisher.MonoCreate.subscribe
  [17] reactor.core.publisher.Mono.subscribe
  [18] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [19] reactor.core.publisher.MonoIgnoreThen.subscribe
  [20] reactor.core.publisher.MonoPeekFuseable.subscribe
  [21] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [24] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [25] reactor.core.publisher.FluxRange$RangeSubscription.request
  [26] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [27] reactor.core.publisher.FluxRange.subscribe
  [28] reactor.core.publisher.FluxFlatMap.subscribe
  [29] reactor.core.publisher.Flux.subscribe
  [30] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [31] reactor.core.publisher.Operators$MonoSubscriber.complete
  [32] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [33] reactor.core.publisher.Operators$MonoSubscriber.complete
  [34] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [35] reactor.core.publisher.MonoIgnoreThen.subscribe
  [36] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [37] reactor.core.publisher.Operators$ScalarSubscription.request
  [38] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [39] reactor.core.publisher.MonoJust.subscribe
  [40] reactor.core.publisher.MonoDefer.subscribe
  [41] reactor.core.publisher.MonoFlatMap.subscribe
  [42] reactor.core.publisher.MonoFlatMapMany.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.FluxPeek.subscribe
  [45] reactor.core.publisher.Flux.blockLast
  [46] io.rsocket.transport.local.LocalPingPong.main

--- 60000000 ns (0.22%), 6 samples
  [ 0] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 1] reactor.core.publisher.UnicastProcessor.drain
  [ 2] reactor.core.publisher.UnicastProcessor.request
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 4] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 5] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 6] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 7] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 8] reactor.core.publisher.UnicastProcessor.drain
  [ 9] reactor.core.publisher.UnicastProcessor.onNext
  [10] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [11] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [12] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [13] io.rsocket.internal.UnboundedProcessor.drainRegular
  [14] io.rsocket.internal.UnboundedProcessor.drain
  [15] io.rsocket.internal.UnboundedProcessor.onNext
  [16] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [17] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [18] reactor.core.publisher.MonoDefer.subscribe
  [19] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [20] reactor.core.publisher.MonoIgnoreThen.subscribe
  [21] reactor.core.publisher.MonoPeekFuseable.subscribe
  [22] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [25] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [26] reactor.core.publisher.FluxRange$RangeSubscription.request
  [27] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.FluxRange.subscribe
  [29] reactor.core.publisher.FluxFlatMap.subscribe
  [30] reactor.core.publisher.Flux.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [34] reactor.core.publisher.Operators$MonoSubscriber.complete
  [35] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [36] reactor.core.publisher.MonoIgnoreThen.subscribe
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [38] reactor.core.publisher.Operators$ScalarSubscription.request
  [39] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [40] reactor.core.publisher.MonoJust.subscribe
  [41] reactor.core.publisher.MonoDefer.subscribe
  [42] reactor.core.publisher.MonoFlatMap.subscribe
  [43] reactor.core.publisher.MonoFlatMapMany.subscribe
  [44] reactor.core.publisher.FluxPeek.subscribe
  [45] reactor.core.publisher.FluxPeek.subscribe
  [46] reactor.core.publisher.Flux.blockLast
  [47] io.rsocket.transport.local.LocalPingPong.main

--- 60000000 ns (0.22%), 6 samples
  [ 0] io.netty.buffer.AbstractByteBuf.ensureAccessible
  [ 1] io.netty.buffer.AbstractByteBuf.ensureWritable0
  [ 2] io.netty.buffer.AbstractByteBuf.writeByte
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.encodeLength
  [ 4] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 8] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 9] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [10] reactor.core.publisher.MonoDefer.subscribe
  [11] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [12] reactor.core.publisher.MonoIgnoreThen.subscribe
  [13] reactor.core.publisher.MonoPeekFuseable.subscribe
  [14] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [17] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [18] reactor.core.publisher.FluxRange$RangeSubscription.request
  [19] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [20] reactor.core.publisher.FluxRange.subscribe
  [21] reactor.core.publisher.FluxFlatMap.subscribe
  [22] reactor.core.publisher.Flux.subscribe
  [23] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [24] reactor.core.publisher.Operators$MonoSubscriber.complete
  [25] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [26] reactor.core.publisher.Operators$MonoSubscriber.complete
  [27] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [28] reactor.core.publisher.MonoIgnoreThen.subscribe
  [29] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [30] reactor.core.publisher.Operators$ScalarSubscription.request
  [31] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [32] reactor.core.publisher.MonoJust.subscribe
  [33] reactor.core.publisher.MonoDefer.subscribe
  [34] reactor.core.publisher.MonoFlatMap.subscribe
  [35] reactor.core.publisher.MonoFlatMapMany.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.Flux.blockLast
  [39] io.rsocket.transport.local.LocalPingPong.main

--- 60000000 ns (0.22%), 6 samples
  [ 0] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 1] reactor.core.publisher.UnicastProcessor.drain
  [ 2] reactor.core.publisher.UnicastProcessor.request
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 4] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 5] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 6] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 7] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 8] reactor.core.publisher.UnicastProcessor.drain
  [ 9] reactor.core.publisher.UnicastProcessor.onNext
  [10] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [11] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [12] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [13] io.rsocket.internal.UnboundedProcessor.drainRegular
  [14] io.rsocket.internal.UnboundedProcessor.drain
  [15] io.rsocket.internal.UnboundedProcessor.onNext
  [16] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [17] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [18] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [19] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [20] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] reactor.core.publisher.Operators$ScalarSubscription.request
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [25] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [26] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [27] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [29] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [30] reactor.core.publisher.MonoJust.subscribe
  [31] reactor.core.publisher.MonoPeekFuseable.subscribe
  [32] reactor.core.publisher.MonoMapFuseable.subscribe
  [33] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [34] reactor.core.publisher.MonoDoFinally.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribeWith
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.Mono.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] io.rsocket.RSocketServer.handleRequestResponse
  [41] io.rsocket.RSocketServer.handleFrame
  [42] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [43] reactor.core.publisher.LambdaSubscriber.onNext
  [44] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [46] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [47] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [48] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [49] reactor.core.publisher.UnicastProcessor.drainRegular
  [50] reactor.core.publisher.UnicastProcessor.drain
  [51] reactor.core.publisher.UnicastProcessor.onNext
  [52] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [53] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [54] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [55] io.rsocket.internal.UnboundedProcessor.drainRegular
  [56] io.rsocket.internal.UnboundedProcessor.drain
  [57] io.rsocket.internal.UnboundedProcessor.onNext
  [58] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [59] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [60] reactor.core.publisher.MonoDefer.subscribe
  [61] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [62] reactor.core.publisher.MonoIgnoreThen.subscribe
  [63] reactor.core.publisher.MonoPeekFuseable.subscribe
  [64] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [65] reactor.core.publisher.Mono.subscribe
  [66] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [67] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [68] reactor.core.publisher.FluxRange$RangeSubscription.request
  [69] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [70] reactor.core.publisher.FluxRange.subscribe
  [71] reactor.core.publisher.FluxFlatMap.subscribe
  [72] reactor.core.publisher.Flux.subscribe
  [73] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [74] reactor.core.publisher.Operators$MonoSubscriber.complete
  [75] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [76] reactor.core.publisher.Operators$MonoSubscriber.complete
  [77] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [78] reactor.core.publisher.MonoIgnoreThen.subscribe
  [79] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [80] reactor.core.publisher.Operators$ScalarSubscription.request
  [81] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [82] reactor.core.publisher.MonoJust.subscribe
  [83] reactor.core.publisher.MonoDefer.subscribe
  [84] reactor.core.publisher.MonoFlatMap.subscribe
  [85] reactor.core.publisher.MonoFlatMapMany.subscribe
  [86] reactor.core.publisher.FluxPeek.subscribe
  [87] reactor.core.publisher.FluxPeek.subscribe
  [88] reactor.core.publisher.Flux.blockLast
  [89] io.rsocket.transport.local.LocalPingPong.main

--- 60000000 ns (0.22%), 6 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.set
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.setRefCnt
  [ 2] io.netty.buffer.PooledByteBuf.reuse
  [ 3] io.netty.buffer.PooledUnsafeDirectByteBuf.newInstance
  [ 4] io.netty.buffer.PoolArena$DirectArena.newByteBuf
  [ 5] io.netty.buffer.PoolArena.allocate
  [ 6] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 7] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 8] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 9] io.netty.buffer.AbstractByteBufAllocator.buffer
  [10] io.rsocket.frame.FrameHeaderFlyweight.encode
  [11] io.rsocket.frame.RequestFlyweight.encode
  [12] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [13] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [14] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [15] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [17] reactor.core.publisher.Operators$ScalarSubscription.request
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [19] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [20] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [21] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [22] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [23] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [24] reactor.core.publisher.MonoJust.subscribe
  [25] reactor.core.publisher.MonoPeekFuseable.subscribe
  [26] reactor.core.publisher.MonoMapFuseable.subscribe
  [27] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [28] reactor.core.publisher.MonoDoFinally.subscribe
  [29] reactor.core.publisher.Mono.subscribe
  [30] reactor.core.publisher.Mono.subscribeWith
  [31] reactor.core.publisher.Mono.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] io.rsocket.RSocketServer.handleRequestResponse
  [35] io.rsocket.RSocketServer.handleFrame
  [36] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [37] reactor.core.publisher.LambdaSubscriber.onNext
  [38] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [39] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [40] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [41] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [42] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [43] reactor.core.publisher.UnicastProcessor.drainRegular
  [44] reactor.core.publisher.UnicastProcessor.drain
  [45] reactor.core.publisher.UnicastProcessor.onNext
  [46] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [47] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [48] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [49] io.rsocket.internal.UnboundedProcessor.drainRegular
  [50] io.rsocket.internal.UnboundedProcessor.drain
  [51] io.rsocket.internal.UnboundedProcessor.onNext
  [52] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [53] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [54] reactor.core.publisher.MonoDefer.subscribe
  [55] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [56] reactor.core.publisher.MonoIgnoreThen.subscribe
  [57] reactor.core.publisher.MonoPeekFuseable.subscribe
  [58] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [59] reactor.core.publisher.Mono.subscribe
  [60] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [61] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [62] reactor.core.publisher.FluxRange$RangeSubscription.request
  [63] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [64] reactor.core.publisher.FluxRange.subscribe
  [65] reactor.core.publisher.FluxFlatMap.subscribe
  [66] reactor.core.publisher.Flux.subscribe
  [67] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [68] reactor.core.publisher.Operators$MonoSubscriber.complete
  [69] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [70] reactor.core.publisher.Operators$MonoSubscriber.complete
  [71] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [72] reactor.core.publisher.MonoIgnoreThen.subscribe
  [73] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [74] reactor.core.publisher.Operators$ScalarSubscription.request
  [75] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [76] reactor.core.publisher.MonoJust.subscribe
  [77] reactor.core.publisher.MonoDefer.subscribe
  [78] reactor.core.publisher.MonoFlatMap.subscribe
  [79] reactor.core.publisher.MonoFlatMapMany.subscribe
  [80] reactor.core.publisher.FluxPeek.subscribe
  [81] reactor.core.publisher.FluxPeek.subscribe
  [82] reactor.core.publisher.Flux.blockLast
  [83] io.rsocket.transport.local.LocalPingPong.main

--- 60000000 ns (0.22%), 6 samples
  [ 0] io.rsocket.RSocketServer.handleFrame
  [ 1] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 2] reactor.core.publisher.LambdaSubscriber.onNext
  [ 3] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 4] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 5] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 6] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 8] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 9] reactor.core.publisher.UnicastProcessor.drain
  [10] reactor.core.publisher.UnicastProcessor.onNext
  [11] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [12] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [13] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [14] io.rsocket.internal.UnboundedProcessor.drainRegular
  [15] io.rsocket.internal.UnboundedProcessor.drain
  [16] io.rsocket.internal.UnboundedProcessor.onNext
  [17] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [18] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [19] reactor.core.publisher.MonoDefer.subscribe
  [20] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [21] reactor.core.publisher.MonoIgnoreThen.subscribe
  [22] reactor.core.publisher.MonoPeekFuseable.subscribe
  [23] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [24] reactor.core.publisher.Mono.subscribe
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [26] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [27] reactor.core.publisher.FluxRange$RangeSubscription.request
  [28] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [29] reactor.core.publisher.FluxRange.subscribe
  [30] reactor.core.publisher.FluxFlatMap.subscribe
  [31] reactor.core.publisher.Flux.subscribe
  [32] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [33] reactor.core.publisher.Operators$MonoSubscriber.complete
  [34] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [35] reactor.core.publisher.Operators$MonoSubscriber.complete
  [36] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [37] reactor.core.publisher.MonoIgnoreThen.subscribe
  [38] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [39] reactor.core.publisher.Operators$ScalarSubscription.request
  [40] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [41] reactor.core.publisher.MonoJust.subscribe
  [42] reactor.core.publisher.MonoDefer.subscribe
  [43] reactor.core.publisher.MonoFlatMap.subscribe
  [44] reactor.core.publisher.MonoFlatMapMany.subscribe
  [45] reactor.core.publisher.FluxPeek.subscribe
  [46] reactor.core.publisher.FluxPeek.subscribe
  [47] reactor.core.publisher.Flux.blockLast
  [48] io.rsocket.transport.local.LocalPingPong.main

--- 60000000 ns (0.22%), 6 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 1] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [ 2] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [ 3] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 4] reactor.core.publisher.Operators$ScalarSubscription.request
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [ 6] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [ 7] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [ 8] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [ 9] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [11] reactor.core.publisher.MonoJust.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoMapFuseable.subscribe
  [14] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [15] reactor.core.publisher.MonoDoFinally.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.Mono.subscribeWith
  [18] reactor.core.publisher.Mono.subscribe
  [19] reactor.core.publisher.Mono.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] io.rsocket.RSocketServer.handleRequestResponse
  [22] io.rsocket.RSocketServer.handleFrame
  [23] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [24] reactor.core.publisher.LambdaSubscriber.onNext
  [25] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [26] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [27] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [28] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [29] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [30] reactor.core.publisher.UnicastProcessor.drainRegular
  [31] reactor.core.publisher.UnicastProcessor.drain
  [32] reactor.core.publisher.UnicastProcessor.onNext
  [33] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [34] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [35] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [36] io.rsocket.internal.UnboundedProcessor.drainRegular
  [37] io.rsocket.internal.UnboundedProcessor.drain
  [38] io.rsocket.internal.UnboundedProcessor.onNext
  [39] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [40] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [41] reactor.core.publisher.MonoDefer.subscribe
  [42] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [43] reactor.core.publisher.MonoIgnoreThen.subscribe
  [44] reactor.core.publisher.MonoPeekFuseable.subscribe
  [45] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [46] reactor.core.publisher.Mono.subscribe
  [47] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [48] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [49] reactor.core.publisher.FluxRange$RangeSubscription.request
  [50] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [51] reactor.core.publisher.FluxRange.subscribe
  [52] reactor.core.publisher.FluxFlatMap.subscribe
  [53] reactor.core.publisher.Flux.subscribe
  [54] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [55] reactor.core.publisher.Operators$MonoSubscriber.complete
  [56] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [57] reactor.core.publisher.Operators$MonoSubscriber.complete
  [58] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [59] reactor.core.publisher.MonoIgnoreThen.subscribe
  [60] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [61] reactor.core.publisher.Operators$ScalarSubscription.request
  [62] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [63] reactor.core.publisher.MonoJust.subscribe
  [64] reactor.core.publisher.MonoDefer.subscribe
  [65] reactor.core.publisher.MonoFlatMap.subscribe
  [66] reactor.core.publisher.MonoFlatMapMany.subscribe
  [67] reactor.core.publisher.FluxPeek.subscribe
  [68] reactor.core.publisher.FluxPeek.subscribe
  [69] reactor.core.publisher.Flux.blockLast
  [70] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [ 1] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [ 2] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [ 3] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [ 4] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 6] reactor.core.publisher.MonoJust.subscribe
  [ 7] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 8] reactor.core.publisher.MonoMapFuseable.subscribe
  [ 9] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.Mono.subscribeWith
  [13] reactor.core.publisher.Mono.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] io.rsocket.RSocketServer.handleRequestResponse
  [17] io.rsocket.RSocketServer.handleFrame
  [18] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [19] reactor.core.publisher.LambdaSubscriber.onNext
  [20] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [21] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [23] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [24] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [25] reactor.core.publisher.UnicastProcessor.drainRegular
  [26] reactor.core.publisher.UnicastProcessor.drain
  [27] reactor.core.publisher.UnicastProcessor.onNext
  [28] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [29] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [30] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [31] io.rsocket.internal.UnboundedProcessor.drainRegular
  [32] io.rsocket.internal.UnboundedProcessor.drain
  [33] io.rsocket.internal.UnboundedProcessor.onNext
  [34] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [35] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [36] reactor.core.publisher.MonoDefer.subscribe
  [37] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [38] reactor.core.publisher.MonoIgnoreThen.subscribe
  [39] reactor.core.publisher.MonoPeekFuseable.subscribe
  [40] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [43] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [44] reactor.core.publisher.FluxRange$RangeSubscription.request
  [45] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [46] reactor.core.publisher.FluxRange.subscribe
  [47] reactor.core.publisher.FluxFlatMap.subscribe
  [48] reactor.core.publisher.Flux.subscribe
  [49] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [50] reactor.core.publisher.Operators$MonoSubscriber.complete
  [51] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [52] reactor.core.publisher.Operators$MonoSubscriber.complete
  [53] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [54] reactor.core.publisher.MonoIgnoreThen.subscribe
  [55] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [56] reactor.core.publisher.Operators$ScalarSubscription.request
  [57] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [58] reactor.core.publisher.MonoJust.subscribe
  [59] reactor.core.publisher.MonoDefer.subscribe
  [60] reactor.core.publisher.MonoFlatMap.subscribe
  [61] reactor.core.publisher.MonoFlatMapMany.subscribe
  [62] reactor.core.publisher.FluxPeek.subscribe
  [63] reactor.core.publisher.FluxPeek.subscribe
  [64] reactor.core.publisher.Flux.blockLast
  [65] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] io.rsocket.buffer.Tuple2ByteBuf._getInt
  [ 1] io.netty.buffer.AbstractByteBuf.readInt
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.streamId
  [ 3] io.rsocket.RSocketClient.handleIncomingFrames
  [ 4] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 5] reactor.core.publisher.LambdaSubscriber.onNext
  [ 6] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [10] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [11] reactor.core.publisher.UnicastProcessor.drainRegular
  [12] reactor.core.publisher.UnicastProcessor.drain
  [13] reactor.core.publisher.UnicastProcessor.onNext
  [14] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [15] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [17] io.rsocket.internal.UnboundedProcessor.drainRegular
  [18] io.rsocket.internal.UnboundedProcessor.drain
  [19] io.rsocket.internal.UnboundedProcessor.onNext
  [20] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [21] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [22] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [23] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [24] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [25] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [27] reactor.core.publisher.Operators$ScalarSubscription.request
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [29] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [30] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [31] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [32] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [33] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [34] reactor.core.publisher.MonoJust.subscribe
  [35] reactor.core.publisher.MonoPeekFuseable.subscribe
  [36] reactor.core.publisher.MonoMapFuseable.subscribe
  [37] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [38] reactor.core.publisher.MonoDoFinally.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] reactor.core.publisher.Mono.subscribeWith
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.Mono.subscribe
  [44] io.rsocket.RSocketServer.handleRequestResponse
  [45] io.rsocket.RSocketServer.handleFrame
  [46] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [47] reactor.core.publisher.LambdaSubscriber.onNext
  [48] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [49] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [50] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [51] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [52] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [53] reactor.core.publisher.UnicastProcessor.drainRegular
  [54] reactor.core.publisher.UnicastProcessor.drain
  [55] reactor.core.publisher.UnicastProcessor.onNext
  [56] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [57] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [58] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [59] io.rsocket.internal.UnboundedProcessor.drainRegular
  [60] io.rsocket.internal.UnboundedProcessor.drain
  [61] io.rsocket.internal.UnboundedProcessor.onNext
  [62] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [63] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [64] reactor.core.publisher.MonoDefer.subscribe
  [65] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [66] reactor.core.publisher.MonoIgnoreThen.subscribe
  [67] reactor.core.publisher.MonoPeekFuseable.subscribe
  [68] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [69] reactor.core.publisher.Mono.subscribe
  [70] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [71] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [72] reactor.core.publisher.FluxRange$RangeSubscription.request
  [73] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [74] reactor.core.publisher.FluxRange.subscribe
  [75] reactor.core.publisher.FluxFlatMap.subscribe
  [76] reactor.core.publisher.Flux.subscribe
  [77] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [78] reactor.core.publisher.Operators$MonoSubscriber.complete
  [79] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [80] reactor.core.publisher.Operators$MonoSubscriber.complete
  [81] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [82] reactor.core.publisher.MonoIgnoreThen.subscribe
  [83] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [84] reactor.core.publisher.Operators$ScalarSubscription.request
  [85] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [86] reactor.core.publisher.MonoJust.subscribe
  [87] reactor.core.publisher.MonoDefer.subscribe
  [88] reactor.core.publisher.MonoFlatMap.subscribe
  [89] reactor.core.publisher.MonoFlatMapMany.subscribe
  [90] reactor.core.publisher.FluxPeek.subscribe
  [91] reactor.core.publisher.FluxPeek.subscribe
  [92] reactor.core.publisher.Flux.blockLast
  [93] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater.lazySet
  [ 2] reactor.util.concurrent.SpscLinkedArrayQueue.poll
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 4] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 5] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 6] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 7] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 8] reactor.core.publisher.UnicastProcessor.drain
  [ 9] reactor.core.publisher.UnicastProcessor.onNext
  [10] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [11] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [12] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [13] io.rsocket.internal.UnboundedProcessor.drainRegular
  [14] io.rsocket.internal.UnboundedProcessor.drain
  [15] io.rsocket.internal.UnboundedProcessor.onNext
  [16] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [17] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [18] reactor.core.publisher.MonoDefer.subscribe
  [19] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [20] reactor.core.publisher.MonoIgnoreThen.subscribe
  [21] reactor.core.publisher.MonoPeekFuseable.subscribe
  [22] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [25] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [26] reactor.core.publisher.FluxRange$RangeSubscription.request
  [27] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.FluxRange.subscribe
  [29] reactor.core.publisher.FluxFlatMap.subscribe
  [30] reactor.core.publisher.Flux.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [34] reactor.core.publisher.Operators$MonoSubscriber.complete
  [35] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [36] reactor.core.publisher.MonoIgnoreThen.subscribe
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [38] reactor.core.publisher.Operators$ScalarSubscription.request
  [39] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [40] reactor.core.publisher.MonoJust.subscribe
  [41] reactor.core.publisher.MonoDefer.subscribe
  [42] reactor.core.publisher.MonoFlatMap.subscribe
  [43] reactor.core.publisher.MonoFlatMapMany.subscribe
  [44] reactor.core.publisher.FluxPeek.subscribe
  [45] reactor.core.publisher.FluxPeek.subscribe
  [46] reactor.core.publisher.Flux.blockLast
  [47] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.decrementAndGet
  [ 2] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [ 3] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [ 4] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 6] reactor.core.publisher.MonoJust.subscribe
  [ 7] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 8] reactor.core.publisher.MonoMapFuseable.subscribe
  [ 9] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.Mono.subscribeWith
  [13] reactor.core.publisher.Mono.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] io.rsocket.RSocketServer.handleRequestResponse
  [17] io.rsocket.RSocketServer.handleFrame
  [18] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [19] reactor.core.publisher.LambdaSubscriber.onNext
  [20] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [21] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [23] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [24] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [25] reactor.core.publisher.UnicastProcessor.drainRegular
  [26] reactor.core.publisher.UnicastProcessor.drain
  [27] reactor.core.publisher.UnicastProcessor.onNext
  [28] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [29] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [30] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [31] io.rsocket.internal.UnboundedProcessor.drainRegular
  [32] io.rsocket.internal.UnboundedProcessor.drain
  [33] io.rsocket.internal.UnboundedProcessor.onNext
  [34] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [35] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [36] reactor.core.publisher.MonoDefer.subscribe
  [37] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [38] reactor.core.publisher.MonoIgnoreThen.subscribe
  [39] reactor.core.publisher.MonoPeekFuseable.subscribe
  [40] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [43] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [44] reactor.core.publisher.FluxRange$RangeSubscription.request
  [45] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [46] reactor.core.publisher.FluxRange.subscribe
  [47] reactor.core.publisher.FluxFlatMap.subscribe
  [48] reactor.core.publisher.Flux.subscribe
  [49] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [50] reactor.core.publisher.Operators$MonoSubscriber.complete
  [51] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [52] reactor.core.publisher.Operators$MonoSubscriber.complete
  [53] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [54] reactor.core.publisher.MonoIgnoreThen.subscribe
  [55] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [56] reactor.core.publisher.Operators$ScalarSubscription.request
  [57] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [58] reactor.core.publisher.MonoJust.subscribe
  [59] reactor.core.publisher.MonoDefer.subscribe
  [60] reactor.core.publisher.MonoFlatMap.subscribe
  [61] reactor.core.publisher.MonoFlatMapMany.subscribe
  [62] reactor.core.publisher.FluxPeek.subscribe
  [63] reactor.core.publisher.FluxPeek.subscribe
  [64] reactor.core.publisher.Flux.blockLast
  [65] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] io.netty.buffer.UnpooledSlicedByteBuf.capacity
  [ 1] io.netty.buffer.AbstractByteBuf.writerIndex
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 4] io.netty.buffer.AbstractByteBuf.slice
  [ 5] io.rsocket.buffer.Tuple2ByteBuf.slice
  [ 6] io.netty.buffer.AbstractByteBuf.readSlice
  [ 7] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 8] io.rsocket.frame.RequestFlyweight.data
  [ 9] io.rsocket.frame.PayloadFrameFlyweight.data
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [12] io.rsocket.RSocketClient.handleFrame
  [13] io.rsocket.RSocketClient.handleIncomingFrames
  [14] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [15] reactor.core.publisher.LambdaSubscriber.onNext
  [16] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [19] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [20] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [21] reactor.core.publisher.UnicastProcessor.drainRegular
  [22] reactor.core.publisher.UnicastProcessor.drain
  [23] reactor.core.publisher.UnicastProcessor.onNext
  [24] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [25] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [27] io.rsocket.internal.UnboundedProcessor.drainRegular
  [28] io.rsocket.internal.UnboundedProcessor.drain
  [29] io.rsocket.internal.UnboundedProcessor.onNext
  [30] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [31] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [32] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [33] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [34] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [37] reactor.core.publisher.Operators$ScalarSubscription.request
  [38] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [39] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [40] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [41] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [42] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [43] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [44] reactor.core.publisher.MonoJust.subscribe
  [45] reactor.core.publisher.MonoPeekFuseable.subscribe
  [46] reactor.core.publisher.MonoMapFuseable.subscribe
  [47] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [48] reactor.core.publisher.MonoDoFinally.subscribe
  [49] reactor.core.publisher.Mono.subscribe
  [50] reactor.core.publisher.Mono.subscribeWith
  [51] reactor.core.publisher.Mono.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] reactor.core.publisher.Mono.subscribe
  [54] io.rsocket.RSocketServer.handleRequestResponse
  [55] io.rsocket.RSocketServer.handleFrame
  [56] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [57] reactor.core.publisher.LambdaSubscriber.onNext
  [58] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [59] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [60] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [61] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [62] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [63] reactor.core.publisher.UnicastProcessor.drainRegular
  [64] reactor.core.publisher.UnicastProcessor.drain
  [65] reactor.core.publisher.UnicastProcessor.onNext
  [66] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [67] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [68] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [69] io.rsocket.internal.UnboundedProcessor.drainRegular
  [70] io.rsocket.internal.UnboundedProcessor.drain
  [71] io.rsocket.internal.UnboundedProcessor.onNext
  [72] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [73] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [74] reactor.core.publisher.MonoDefer.subscribe
  [75] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [76] reactor.core.publisher.MonoIgnoreThen.subscribe
  [77] reactor.core.publisher.MonoPeekFuseable.subscribe
  [78] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [79] reactor.core.publisher.Mono.subscribe
  [80] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [81] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [82] reactor.core.publisher.FluxRange$RangeSubscription.request
  [83] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [84] reactor.core.publisher.FluxRange.subscribe
  [85] reactor.core.publisher.FluxFlatMap.subscribe
  [86] reactor.core.publisher.Flux.subscribe
  [87] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [88] reactor.core.publisher.Operators$MonoSubscriber.complete
  [89] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [90] reactor.core.publisher.Operators$MonoSubscriber.complete
  [91] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [92] reactor.core.publisher.MonoIgnoreThen.subscribe
  [93] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [94] reactor.core.publisher.Operators$ScalarSubscription.request
  [95] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [96] reactor.core.publisher.MonoJust.subscribe
  [97] reactor.core.publisher.MonoDefer.subscribe
  [98] reactor.core.publisher.MonoFlatMap.subscribe
  [99] reactor.core.publisher.MonoFlatMapMany.subscribe
  [100] reactor.core.publisher.FluxPeek.subscribe
  [101] reactor.core.publisher.FluxPeek.subscribe
  [102] reactor.core.publisher.Flux.blockLast
  [103] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.set
  [ 2] io.netty.buffer.AbstractReferenceCountedByteBuf.setRefCnt
  [ 3] io.netty.buffer.PooledByteBuf.reuse
  [ 4] io.netty.buffer.PooledUnsafeDirectByteBuf.newInstance
  [ 5] io.netty.buffer.PoolArena$DirectArena.newByteBuf
  [ 6] io.netty.buffer.PoolArena.allocate
  [ 7] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 8] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 9] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [10] io.netty.buffer.AbstractByteBufAllocator.buffer
  [11] io.rsocket.frame.FrameHeaderFlyweight.encode
  [12] io.rsocket.frame.RequestFlyweight.encode
  [13] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [14] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [15] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [16] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [17] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [18] reactor.core.publisher.Operators$ScalarSubscription.request
  [19] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [20] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [21] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [22] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [23] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [25] reactor.core.publisher.MonoJust.subscribe
  [26] reactor.core.publisher.MonoPeekFuseable.subscribe
  [27] reactor.core.publisher.MonoMapFuseable.subscribe
  [28] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [29] reactor.core.publisher.MonoDoFinally.subscribe
  [30] reactor.core.publisher.Mono.subscribe
  [31] reactor.core.publisher.Mono.subscribeWith
  [32] reactor.core.publisher.Mono.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribe
  [35] io.rsocket.RSocketServer.handleRequestResponse
  [36] io.rsocket.RSocketServer.handleFrame
  [37] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [38] reactor.core.publisher.LambdaSubscriber.onNext
  [39] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [40] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [41] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [42] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [43] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [44] reactor.core.publisher.UnicastProcessor.drainRegular
  [45] reactor.core.publisher.UnicastProcessor.drain
  [46] reactor.core.publisher.UnicastProcessor.onNext
  [47] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [48] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [49] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [50] io.rsocket.internal.UnboundedProcessor.drainRegular
  [51] io.rsocket.internal.UnboundedProcessor.drain
  [52] io.rsocket.internal.UnboundedProcessor.onNext
  [53] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [54] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [55] reactor.core.publisher.MonoDefer.subscribe
  [56] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [57] reactor.core.publisher.MonoIgnoreThen.subscribe
  [58] reactor.core.publisher.MonoPeekFuseable.subscribe
  [59] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [60] reactor.core.publisher.Mono.subscribe
  [61] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [62] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [63] reactor.core.publisher.FluxRange$RangeSubscription.request
  [64] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [65] reactor.core.publisher.FluxRange.subscribe
  [66] reactor.core.publisher.FluxFlatMap.subscribe
  [67] reactor.core.publisher.Flux.subscribe
  [68] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [69] reactor.core.publisher.Operators$MonoSubscriber.complete
  [70] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [71] reactor.core.publisher.Operators$MonoSubscriber.complete
  [72] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [73] reactor.core.publisher.MonoIgnoreThen.subscribe
  [74] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [75] reactor.core.publisher.Operators$ScalarSubscription.request
  [76] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [77] reactor.core.publisher.MonoJust.subscribe
  [78] reactor.core.publisher.MonoDefer.subscribe
  [79] reactor.core.publisher.MonoFlatMap.subscribe
  [80] reactor.core.publisher.MonoFlatMapMany.subscribe
  [81] reactor.core.publisher.FluxPeek.subscribe
  [82] reactor.core.publisher.FluxPeek.subscribe
  [83] reactor.core.publisher.Flux.blockLast
  [84] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] io.rsocket.internal.UnboundedProcessor.onNext
  [ 1] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 2] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 3] reactor.core.publisher.MonoDefer.subscribe
  [ 4] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 5] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 6] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 7] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 8] reactor.core.publisher.Mono.subscribe
  [ 9] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [10] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [11] reactor.core.publisher.FluxRange$RangeSubscription.request
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [13] reactor.core.publisher.FluxRange.subscribe
  [14] reactor.core.publisher.FluxFlatMap.subscribe
  [15] reactor.core.publisher.Flux.subscribe
  [16] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [17] reactor.core.publisher.Operators$MonoSubscriber.complete
  [18] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [19] reactor.core.publisher.Operators$MonoSubscriber.complete
  [20] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [21] reactor.core.publisher.MonoIgnoreThen.subscribe
  [22] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.Operators$ScalarSubscription.request
  [24] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [25] reactor.core.publisher.MonoJust.subscribe
  [26] reactor.core.publisher.MonoDefer.subscribe
  [27] reactor.core.publisher.MonoFlatMap.subscribe
  [28] reactor.core.publisher.MonoFlatMapMany.subscribe
  [29] reactor.core.publisher.FluxPeek.subscribe
  [30] reactor.core.publisher.FluxPeek.subscribe
  [31] reactor.core.publisher.Flux.blockLast
  [32] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] io.netty.util.collection.IntObjectHashMap.put
  [ 1] io.netty.util.collection.IntObjectHashMap.put
  [ 2] java.util.Collections$SynchronizedMap.put
  [ 3] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [ 4] io.rsocket.RSocketServer$$Lambda$65.349420578.accept
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 6] reactor.core.publisher.MonoJust.subscribe
  [ 7] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 8] reactor.core.publisher.MonoMapFuseable.subscribe
  [ 9] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.Mono.subscribeWith
  [13] reactor.core.publisher.Mono.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] io.rsocket.RSocketServer.handleRequestResponse
  [17] io.rsocket.RSocketServer.handleFrame
  [18] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [19] reactor.core.publisher.LambdaSubscriber.onNext
  [20] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [21] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [23] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [24] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [25] reactor.core.publisher.UnicastProcessor.drainRegular
  [26] reactor.core.publisher.UnicastProcessor.drain
  [27] reactor.core.publisher.UnicastProcessor.onNext
  [28] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [29] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [30] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [31] io.rsocket.internal.UnboundedProcessor.drainRegular
  [32] io.rsocket.internal.UnboundedProcessor.drain
  [33] io.rsocket.internal.UnboundedProcessor.onNext
  [34] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [35] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [36] reactor.core.publisher.MonoDefer.subscribe
  [37] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [38] reactor.core.publisher.MonoIgnoreThen.subscribe
  [39] reactor.core.publisher.MonoPeekFuseable.subscribe
  [40] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [43] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [44] reactor.core.publisher.FluxRange$RangeSubscription.request
  [45] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [46] reactor.core.publisher.FluxRange.subscribe
  [47] reactor.core.publisher.FluxFlatMap.subscribe
  [48] reactor.core.publisher.Flux.subscribe
  [49] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [50] reactor.core.publisher.Operators$MonoSubscriber.complete
  [51] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [52] reactor.core.publisher.Operators$MonoSubscriber.complete
  [53] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [54] reactor.core.publisher.MonoIgnoreThen.subscribe
  [55] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [56] reactor.core.publisher.Operators$ScalarSubscription.request
  [57] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [58] reactor.core.publisher.MonoJust.subscribe
  [59] reactor.core.publisher.MonoDefer.subscribe
  [60] reactor.core.publisher.MonoFlatMap.subscribe
  [61] reactor.core.publisher.MonoFlatMapMany.subscribe
  [62] reactor.core.publisher.FluxPeek.subscribe
  [63] reactor.core.publisher.FluxPeek.subscribe
  [64] reactor.core.publisher.Flux.blockLast
  [65] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] io.rsocket.buffer.Tuple2ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.frameType
  [ 3] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 4] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 5] io.rsocket.RSocketClient.handleFrame
  [ 6] io.rsocket.RSocketClient.handleIncomingFrames
  [ 7] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 8] reactor.core.publisher.LambdaSubscriber.onNext
  [ 9] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [13] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [14] reactor.core.publisher.UnicastProcessor.drainRegular
  [15] reactor.core.publisher.UnicastProcessor.drain
  [16] reactor.core.publisher.UnicastProcessor.onNext
  [17] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [18] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [19] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [20] io.rsocket.internal.UnboundedProcessor.drainRegular
  [21] io.rsocket.internal.UnboundedProcessor.drain
  [22] io.rsocket.internal.UnboundedProcessor.onNext
  [23] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [24] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [25] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [26] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [27] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [29] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [30] reactor.core.publisher.Operators$ScalarSubscription.request
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [32] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [33] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [34] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [37] reactor.core.publisher.MonoJust.subscribe
  [38] reactor.core.publisher.MonoPeekFuseable.subscribe
  [39] reactor.core.publisher.MonoMapFuseable.subscribe
  [40] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [41] reactor.core.publisher.MonoDoFinally.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.Mono.subscribeWith
  [44] reactor.core.publisher.Mono.subscribe
  [45] reactor.core.publisher.Mono.subscribe
  [46] reactor.core.publisher.Mono.subscribe
  [47] io.rsocket.RSocketServer.handleRequestResponse
  [48] io.rsocket.RSocketServer.handleFrame
  [49] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [50] reactor.core.publisher.LambdaSubscriber.onNext
  [51] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [52] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [53] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [54] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [55] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [56] reactor.core.publisher.UnicastProcessor.drainRegular
  [57] reactor.core.publisher.UnicastProcessor.drain
  [58] reactor.core.publisher.UnicastProcessor.onNext
  [59] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [60] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [61] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [62] io.rsocket.internal.UnboundedProcessor.drainRegular
  [63] io.rsocket.internal.UnboundedProcessor.drain
  [64] io.rsocket.internal.UnboundedProcessor.onNext
  [65] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [66] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [67] reactor.core.publisher.MonoDefer.subscribe
  [68] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [69] reactor.core.publisher.MonoIgnoreThen.subscribe
  [70] reactor.core.publisher.MonoPeekFuseable.subscribe
  [71] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [72] reactor.core.publisher.Mono.subscribe
  [73] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [74] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [75] reactor.core.publisher.FluxRange$RangeSubscription.request
  [76] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [77] reactor.core.publisher.FluxRange.subscribe
  [78] reactor.core.publisher.FluxFlatMap.subscribe
  [79] reactor.core.publisher.Flux.subscribe
  [80] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [81] reactor.core.publisher.Operators$MonoSubscriber.complete
  [82] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [83] reactor.core.publisher.Operators$MonoSubscriber.complete
  [84] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [85] reactor.core.publisher.MonoIgnoreThen.subscribe
  [86] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [87] reactor.core.publisher.Operators$ScalarSubscription.request
  [88] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [89] reactor.core.publisher.MonoJust.subscribe
  [90] reactor.core.publisher.MonoDefer.subscribe
  [91] reactor.core.publisher.MonoFlatMap.subscribe
  [92] reactor.core.publisher.MonoFlatMapMany.subscribe
  [93] reactor.core.publisher.FluxPeek.subscribe
  [94] reactor.core.publisher.FluxPeek.subscribe
  [95] reactor.core.publisher.Flux.blockLast
  [96] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] java.util.Collections$SynchronizedMap.put
  [ 1] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [ 2] io.rsocket.RSocketServer$$Lambda$65.349420578.accept
  [ 3] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 4] reactor.core.publisher.MonoJust.subscribe
  [ 5] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 6] reactor.core.publisher.MonoMapFuseable.subscribe
  [ 7] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [ 8] reactor.core.publisher.MonoDoFinally.subscribe
  [ 9] reactor.core.publisher.Mono.subscribe
  [10] reactor.core.publisher.Mono.subscribeWith
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.Mono.subscribe
  [13] reactor.core.publisher.Mono.subscribe
  [14] io.rsocket.RSocketServer.handleRequestResponse
  [15] io.rsocket.RSocketServer.handleFrame
  [16] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [17] reactor.core.publisher.LambdaSubscriber.onNext
  [18] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [19] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [20] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [21] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [22] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [23] reactor.core.publisher.UnicastProcessor.drainRegular
  [24] reactor.core.publisher.UnicastProcessor.drain
  [25] reactor.core.publisher.UnicastProcessor.onNext
  [26] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [27] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [29] io.rsocket.internal.UnboundedProcessor.drainRegular
  [30] io.rsocket.internal.UnboundedProcessor.drain
  [31] io.rsocket.internal.UnboundedProcessor.onNext
  [32] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [33] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [36] reactor.core.publisher.MonoIgnoreThen.subscribe
  [37] reactor.core.publisher.MonoPeekFuseable.subscribe
  [38] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [41] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [42] reactor.core.publisher.FluxRange$RangeSubscription.request
  [43] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [44] reactor.core.publisher.FluxRange.subscribe
  [45] reactor.core.publisher.FluxFlatMap.subscribe
  [46] reactor.core.publisher.Flux.subscribe
  [47] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [48] reactor.core.publisher.Operators$MonoSubscriber.complete
  [49] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [50] reactor.core.publisher.Operators$MonoSubscriber.complete
  [51] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [52] reactor.core.publisher.MonoIgnoreThen.subscribe
  [53] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [54] reactor.core.publisher.Operators$ScalarSubscription.request
  [55] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [56] reactor.core.publisher.MonoJust.subscribe
  [57] reactor.core.publisher.MonoDefer.subscribe
  [58] reactor.core.publisher.MonoFlatMap.subscribe
  [59] reactor.core.publisher.MonoFlatMapMany.subscribe
  [60] reactor.core.publisher.FluxPeek.subscribe
  [61] reactor.core.publisher.FluxPeek.subscribe
  [62] reactor.core.publisher.Flux.blockLast
  [63] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 1] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 2] reactor.core.publisher.MonoDefer.subscribe
  [ 3] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 4] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 5] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 6] reactor.core.publisher.MonoMapFuseable.subscribe
  [ 7] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [ 8] reactor.core.publisher.MonoDoFinally.subscribe
  [ 9] reactor.core.publisher.Mono.subscribe
  [10] reactor.core.publisher.Mono.subscribeWith
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.Mono.subscribe
  [13] reactor.core.publisher.Mono.subscribe
  [14] io.rsocket.RSocketServer.handleRequestResponse
  [15] io.rsocket.RSocketServer.handleFrame
  [16] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [17] reactor.core.publisher.LambdaSubscriber.onNext
  [18] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [19] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [20] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [21] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [22] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [23] reactor.core.publisher.UnicastProcessor.drainRegular
  [24] reactor.core.publisher.UnicastProcessor.drain
  [25] reactor.core.publisher.UnicastProcessor.onNext
  [26] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [27] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [29] io.rsocket.internal.UnboundedProcessor.drainRegular
  [30] io.rsocket.internal.UnboundedProcessor.drain
  [31] io.rsocket.internal.UnboundedProcessor.onNext
  [32] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [33] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [36] reactor.core.publisher.MonoIgnoreThen.subscribe
  [37] reactor.core.publisher.MonoPeekFuseable.subscribe
  [38] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [41] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [42] reactor.core.publisher.FluxRange$RangeSubscription.request
  [43] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [44] reactor.core.publisher.FluxRange.subscribe
  [45] reactor.core.publisher.FluxFlatMap.subscribe
  [46] reactor.core.publisher.Flux.subscribe
  [47] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [48] reactor.core.publisher.Operators$MonoSubscriber.complete
  [49] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [50] reactor.core.publisher.Operators$MonoSubscriber.complete
  [51] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [52] reactor.core.publisher.MonoIgnoreThen.subscribe
  [53] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [54] reactor.core.publisher.Operators$ScalarSubscription.request
  [55] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [56] reactor.core.publisher.MonoJust.subscribe
  [57] reactor.core.publisher.MonoDefer.subscribe
  [58] reactor.core.publisher.MonoFlatMap.subscribe
  [59] reactor.core.publisher.MonoFlatMapMany.subscribe
  [60] reactor.core.publisher.FluxPeek.subscribe
  [61] reactor.core.publisher.FluxPeek.subscribe
  [62] reactor.core.publisher.Flux.blockLast
  [63] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] io.netty.buffer.WrappedByteBuf.writeInt
  [ 1] io.rsocket.frame.FrameHeaderFlyweight.encode
  [ 2] io.rsocket.frame.RequestFlyweight.encode
  [ 3] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [ 4] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [ 5] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [ 6] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [ 7] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 8] reactor.core.publisher.Operators$ScalarSubscription.request
  [ 9] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [10] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [11] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [12] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [13] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [14] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [15] reactor.core.publisher.MonoJust.subscribe
  [16] reactor.core.publisher.MonoPeekFuseable.subscribe
  [17] reactor.core.publisher.MonoMapFuseable.subscribe
  [18] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [19] reactor.core.publisher.MonoDoFinally.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] reactor.core.publisher.Mono.subscribeWith
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.Mono.subscribe
  [25] io.rsocket.RSocketServer.handleRequestResponse
  [26] io.rsocket.RSocketServer.handleFrame
  [27] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [28] reactor.core.publisher.LambdaSubscriber.onNext
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [30] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [31] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [32] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [33] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [34] reactor.core.publisher.UnicastProcessor.drainRegular
  [35] reactor.core.publisher.UnicastProcessor.drain
  [36] reactor.core.publisher.UnicastProcessor.onNext
  [37] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [38] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [39] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [40] io.rsocket.internal.UnboundedProcessor.drainRegular
  [41] io.rsocket.internal.UnboundedProcessor.drain
  [42] io.rsocket.internal.UnboundedProcessor.onNext
  [43] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [44] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [45] reactor.core.publisher.MonoDefer.subscribe
  [46] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [47] reactor.core.publisher.MonoIgnoreThen.subscribe
  [48] reactor.core.publisher.MonoPeekFuseable.subscribe
  [49] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [50] reactor.core.publisher.Mono.subscribe
  [51] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [52] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [53] reactor.core.publisher.FluxRange$RangeSubscription.request
  [54] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [55] reactor.core.publisher.FluxRange.subscribe
  [56] reactor.core.publisher.FluxFlatMap.subscribe
  [57] reactor.core.publisher.Flux.subscribe
  [58] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [59] reactor.core.publisher.Operators$MonoSubscriber.complete
  [60] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [61] reactor.core.publisher.Operators$MonoSubscriber.complete
  [62] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [63] reactor.core.publisher.MonoIgnoreThen.subscribe
  [64] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [65] reactor.core.publisher.Operators$ScalarSubscription.request
  [66] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [67] reactor.core.publisher.MonoJust.subscribe
  [68] reactor.core.publisher.MonoDefer.subscribe
  [69] reactor.core.publisher.MonoFlatMap.subscribe
  [70] reactor.core.publisher.MonoFlatMapMany.subscribe
  [71] reactor.core.publisher.FluxPeek.subscribe
  [72] reactor.core.publisher.FluxPeek.subscribe
  [73] reactor.core.publisher.Flux.blockLast
  [74] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 1] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 2] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 3] reactor.core.publisher.Mono.subscribe
  [ 4] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 5] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [ 6] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 7] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [ 8] reactor.core.publisher.FluxRange.subscribe
  [ 9] reactor.core.publisher.FluxFlatMap.subscribe
  [10] reactor.core.publisher.Flux.subscribe
  [11] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [12] reactor.core.publisher.Operators$MonoSubscriber.complete
  [13] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [14] reactor.core.publisher.Operators$MonoSubscriber.complete
  [15] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [16] reactor.core.publisher.MonoIgnoreThen.subscribe
  [17] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.Operators$ScalarSubscription.request
  [19] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [20] reactor.core.publisher.MonoJust.subscribe
  [21] reactor.core.publisher.MonoDefer.subscribe
  [22] reactor.core.publisher.MonoFlatMap.subscribe
  [23] reactor.core.publisher.MonoFlatMapMany.subscribe
  [24] reactor.core.publisher.FluxPeek.subscribe
  [25] reactor.core.publisher.FluxPeek.subscribe
  [26] reactor.core.publisher.Flux.blockLast
  [27] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 1] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 2] io.rsocket.RSocketClient.handleFrame
  [ 3] io.rsocket.RSocketClient.handleIncomingFrames
  [ 4] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 5] reactor.core.publisher.LambdaSubscriber.onNext
  [ 6] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [10] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [11] reactor.core.publisher.UnicastProcessor.drainRegular
  [12] reactor.core.publisher.UnicastProcessor.drain
  [13] reactor.core.publisher.UnicastProcessor.onNext
  [14] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [15] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [17] io.rsocket.internal.UnboundedProcessor.drainRegular
  [18] io.rsocket.internal.UnboundedProcessor.drain
  [19] io.rsocket.internal.UnboundedProcessor.onNext
  [20] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [21] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [22] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [23] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [24] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [25] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [27] reactor.core.publisher.Operators$ScalarSubscription.request
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [29] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [30] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [31] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [32] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [33] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [34] reactor.core.publisher.MonoJust.subscribe
  [35] reactor.core.publisher.MonoPeekFuseable.subscribe
  [36] reactor.core.publisher.MonoMapFuseable.subscribe
  [37] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [38] reactor.core.publisher.MonoDoFinally.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] reactor.core.publisher.Mono.subscribeWith
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.Mono.subscribe
  [44] io.rsocket.RSocketServer.handleRequestResponse
  [45] io.rsocket.RSocketServer.handleFrame
  [46] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [47] reactor.core.publisher.LambdaSubscriber.onNext
  [48] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [49] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [50] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [51] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [52] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [53] reactor.core.publisher.UnicastProcessor.drainRegular
  [54] reactor.core.publisher.UnicastProcessor.drain
  [55] reactor.core.publisher.UnicastProcessor.onNext
  [56] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [57] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [58] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [59] io.rsocket.internal.UnboundedProcessor.drainRegular
  [60] io.rsocket.internal.UnboundedProcessor.drain
  [61] io.rsocket.internal.UnboundedProcessor.onNext
  [62] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [63] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [64] reactor.core.publisher.MonoDefer.subscribe
  [65] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [66] reactor.core.publisher.MonoIgnoreThen.subscribe
  [67] reactor.core.publisher.MonoPeekFuseable.subscribe
  [68] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [69] reactor.core.publisher.Mono.subscribe
  [70] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [71] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [72] reactor.core.publisher.FluxRange$RangeSubscription.request
  [73] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [74] reactor.core.publisher.FluxRange.subscribe
  [75] reactor.core.publisher.FluxFlatMap.subscribe
  [76] reactor.core.publisher.Flux.subscribe
  [77] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [78] reactor.core.publisher.Operators$MonoSubscriber.complete
  [79] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [80] reactor.core.publisher.Operators$MonoSubscriber.complete
  [81] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [82] reactor.core.publisher.MonoIgnoreThen.subscribe
  [83] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [84] reactor.core.publisher.Operators$ScalarSubscription.request
  [85] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [86] reactor.core.publisher.MonoJust.subscribe
  [87] reactor.core.publisher.MonoDefer.subscribe
  [88] reactor.core.publisher.MonoFlatMap.subscribe
  [89] reactor.core.publisher.MonoFlatMapMany.subscribe
  [90] reactor.core.publisher.FluxPeek.subscribe
  [91] reactor.core.publisher.FluxPeek.subscribe
  [92] reactor.core.publisher.Flux.blockLast
  [93] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 2] io.rsocket.buffer.Tuple3ByteBuf.deallocate
  [ 3] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 4] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 5] io.netty.util.ReferenceCountUtil.release
  [ 6] io.netty.util.ReferenceCountUtil.safeRelease
  [ 7] io.rsocket.RSocketServer.handleFrame
  [ 8] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 9] reactor.core.publisher.LambdaSubscriber.onNext
  [10] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [14] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [15] reactor.core.publisher.UnicastProcessor.drainRegular
  [16] reactor.core.publisher.UnicastProcessor.drain
  [17] reactor.core.publisher.UnicastProcessor.onNext
  [18] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [19] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [21] io.rsocket.internal.UnboundedProcessor.drainRegular
  [22] io.rsocket.internal.UnboundedProcessor.drain
  [23] io.rsocket.internal.UnboundedProcessor.onNext
  [24] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [25] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [26] reactor.core.publisher.MonoDefer.subscribe
  [27] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [28] reactor.core.publisher.MonoIgnoreThen.subscribe
  [29] reactor.core.publisher.MonoPeekFuseable.subscribe
  [30] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [31] reactor.core.publisher.Mono.subscribe
  [32] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [33] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [34] reactor.core.publisher.FluxRange$RangeSubscription.request
  [35] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [36] reactor.core.publisher.FluxRange.subscribe
  [37] reactor.core.publisher.FluxFlatMap.subscribe
  [38] reactor.core.publisher.Flux.subscribe
  [39] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [40] reactor.core.publisher.Operators$MonoSubscriber.complete
  [41] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [42] reactor.core.publisher.Operators$MonoSubscriber.complete
  [43] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [44] reactor.core.publisher.MonoIgnoreThen.subscribe
  [45] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [46] reactor.core.publisher.Operators$ScalarSubscription.request
  [47] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [48] reactor.core.publisher.MonoJust.subscribe
  [49] reactor.core.publisher.MonoDefer.subscribe
  [50] reactor.core.publisher.MonoFlatMap.subscribe
  [51] reactor.core.publisher.MonoFlatMapMany.subscribe
  [52] reactor.core.publisher.FluxPeek.subscribe
  [53] reactor.core.publisher.FluxPeek.subscribe
  [54] reactor.core.publisher.Flux.blockLast
  [55] io.rsocket.transport.local.LocalPingPong.main

--- 50000000 ns (0.19%), 5 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
  [ 1] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 2] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 3] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 4] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [ 5] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 6] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 7] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 8] reactor.core.publisher.MonoProcessor.subscribe
  [ 9] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [10] reactor.core.publisher.MonoPeek.subscribe
  [11] reactor.core.publisher.MonoDoFinally.subscribe
  [12] reactor.core.publisher.MonoDefer.subscribe
  [13] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [14] reactor.core.publisher.MonoIgnoreThen.subscribe
  [15] reactor.core.publisher.MonoPeekFuseable.subscribe
  [16] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [17] reactor.core.publisher.Mono.subscribe
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [19] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [20] reactor.core.publisher.FluxRange$RangeSubscription.request
  [21] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [22] reactor.core.publisher.FluxRange.subscribe
  [23] reactor.core.publisher.FluxFlatMap.subscribe
  [24] reactor.core.publisher.Flux.subscribe
  [25] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [26] reactor.core.publisher.Operators$MonoSubscriber.complete
  [27] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [28] reactor.core.publisher.Operators$MonoSubscriber.complete
  [29] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [30] reactor.core.publisher.MonoIgnoreThen.subscribe
  [31] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [32] reactor.core.publisher.Operators$ScalarSubscription.request
  [33] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [34] reactor.core.publisher.MonoJust.subscribe
  [35] reactor.core.publisher.MonoDefer.subscribe
  [36] reactor.core.publisher.MonoFlatMap.subscribe
  [37] reactor.core.publisher.MonoFlatMapMany.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.FluxPeek.subscribe
  [40] reactor.core.publisher.Flux.blockLast
  [41] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] io.rsocket.frame.FrameHeaderFlyweight.hasMetadata
  [ 1] io.rsocket.frame.RequestFlyweight.metadata
  [ 2] io.rsocket.frame.RequestResponseFrameFlyweight.metadata
  [ 3] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 4] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 5] io.rsocket.RSocketServer.handleFrame
  [ 6] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 7] reactor.core.publisher.LambdaSubscriber.onNext
  [ 8] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [12] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [13] reactor.core.publisher.UnicastProcessor.drainRegular
  [14] reactor.core.publisher.UnicastProcessor.drain
  [15] reactor.core.publisher.UnicastProcessor.onNext
  [16] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [17] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [19] io.rsocket.internal.UnboundedProcessor.drainRegular
  [20] io.rsocket.internal.UnboundedProcessor.drain
  [21] io.rsocket.internal.UnboundedProcessor.onNext
  [22] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [23] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [24] reactor.core.publisher.MonoDefer.subscribe
  [25] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [26] reactor.core.publisher.MonoIgnoreThen.subscribe
  [27] reactor.core.publisher.MonoPeekFuseable.subscribe
  [28] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [29] reactor.core.publisher.Mono.subscribe
  [30] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [32] reactor.core.publisher.FluxRange$RangeSubscription.request
  [33] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [34] reactor.core.publisher.FluxRange.subscribe
  [35] reactor.core.publisher.FluxFlatMap.subscribe
  [36] reactor.core.publisher.Flux.subscribe
  [37] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [38] reactor.core.publisher.Operators$MonoSubscriber.complete
  [39] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [40] reactor.core.publisher.Operators$MonoSubscriber.complete
  [41] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [42] reactor.core.publisher.MonoIgnoreThen.subscribe
  [43] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [44] reactor.core.publisher.Operators$ScalarSubscription.request
  [45] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [46] reactor.core.publisher.MonoJust.subscribe
  [47] reactor.core.publisher.MonoDefer.subscribe
  [48] reactor.core.publisher.MonoFlatMap.subscribe
  [49] reactor.core.publisher.MonoFlatMapMany.subscribe
  [50] reactor.core.publisher.FluxPeek.subscribe
  [51] reactor.core.publisher.FluxPeek.subscribe
  [52] reactor.core.publisher.Flux.blockLast
  [53] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] io.netty.util.ReferenceCountUtil.release
  [ 1] io.netty.util.ReferenceCountUtil.safeRelease
  [ 2] io.rsocket.buffer.Tuple2ByteBuf.deallocate
  [ 3] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 4] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 5] io.rsocket.RSocketClient.handleIncomingFrames
  [ 6] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 7] reactor.core.publisher.LambdaSubscriber.onNext
  [ 8] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [12] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [13] reactor.core.publisher.UnicastProcessor.drainRegular
  [14] reactor.core.publisher.UnicastProcessor.drain
  [15] reactor.core.publisher.UnicastProcessor.onNext
  [16] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [17] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [19] io.rsocket.internal.UnboundedProcessor.drainRegular
  [20] io.rsocket.internal.UnboundedProcessor.drain
  [21] io.rsocket.internal.UnboundedProcessor.onNext
  [22] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [23] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [24] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [25] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [26] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [27] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [29] reactor.core.publisher.Operators$ScalarSubscription.request
  [30] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [31] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [32] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [33] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [34] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [35] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [36] reactor.core.publisher.MonoJust.subscribe
  [37] reactor.core.publisher.MonoPeekFuseable.subscribe
  [38] reactor.core.publisher.MonoMapFuseable.subscribe
  [39] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [40] reactor.core.publisher.MonoDoFinally.subscribe
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.Mono.subscribeWith
  [43] reactor.core.publisher.Mono.subscribe
  [44] reactor.core.publisher.Mono.subscribe
  [45] reactor.core.publisher.Mono.subscribe
  [46] io.rsocket.RSocketServer.handleRequestResponse
  [47] io.rsocket.RSocketServer.handleFrame
  [48] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [49] reactor.core.publisher.LambdaSubscriber.onNext
  [50] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [51] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [52] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [53] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [54] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [55] reactor.core.publisher.UnicastProcessor.drainRegular
  [56] reactor.core.publisher.UnicastProcessor.drain
  [57] reactor.core.publisher.UnicastProcessor.onNext
  [58] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [59] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [60] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [61] io.rsocket.internal.UnboundedProcessor.drainRegular
  [62] io.rsocket.internal.UnboundedProcessor.drain
  [63] io.rsocket.internal.UnboundedProcessor.onNext
  [64] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [65] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [66] reactor.core.publisher.MonoDefer.subscribe
  [67] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [68] reactor.core.publisher.MonoIgnoreThen.subscribe
  [69] reactor.core.publisher.MonoPeekFuseable.subscribe
  [70] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [71] reactor.core.publisher.Mono.subscribe
  [72] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [73] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [74] reactor.core.publisher.FluxRange$RangeSubscription.request
  [75] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [76] reactor.core.publisher.FluxRange.subscribe
  [77] reactor.core.publisher.FluxFlatMap.subscribe
  [78] reactor.core.publisher.Flux.subscribe
  [79] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [80] reactor.core.publisher.Operators$MonoSubscriber.complete
  [81] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [82] reactor.core.publisher.Operators$MonoSubscriber.complete
  [83] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [84] reactor.core.publisher.MonoIgnoreThen.subscribe
  [85] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [86] reactor.core.publisher.Operators$ScalarSubscription.request
  [87] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [88] reactor.core.publisher.MonoJust.subscribe
  [89] reactor.core.publisher.MonoDefer.subscribe
  [90] reactor.core.publisher.MonoFlatMap.subscribe
  [91] reactor.core.publisher.MonoFlatMapMany.subscribe
  [92] reactor.core.publisher.FluxPeek.subscribe
  [93] reactor.core.publisher.FluxPeek.subscribe
  [94] reactor.core.publisher.Flux.blockLast
  [95] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] reactor.core.publisher.LambdaMonoSubscriber.onSubscribe
  [ 1] java.lang.Number.<init>
  [ 2] java.lang.Integer.<init>
  [ 3] java.lang.Integer.valueOf
  [ 4] io.rsocket.RSocketServer.lambda$handleRequestResponse$8
  [ 5] io.rsocket.RSocketServer$$Lambda$65.349420578.accept
  [ 6] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 7] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 8] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 9] reactor.core.publisher.MonoMapFuseable.subscribe
  [10] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [11] reactor.core.publisher.MonoDoFinally.subscribe
  [12] reactor.core.publisher.Mono.subscribe
  [13] reactor.core.publisher.Mono.subscribeWith
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] io.rsocket.RSocketServer.handleRequestResponse
  [18] io.rsocket.RSocketServer.handleFrame
  [19] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [20] reactor.core.publisher.LambdaSubscriber.onNext
  [21] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [23] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [24] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [25] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [26] reactor.core.publisher.UnicastProcessor.drainRegular
  [27] reactor.core.publisher.UnicastProcessor.drain
  [28] reactor.core.publisher.UnicastProcessor.onNext
  [29] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [30] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [32] io.rsocket.internal.UnboundedProcessor.drainRegular
  [33] io.rsocket.internal.UnboundedProcessor.drain
  [34] io.rsocket.internal.UnboundedProcessor.onNext
  [35] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [36] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [37] reactor.core.publisher.MonoDefer.subscribe
  [38] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [39] reactor.core.publisher.MonoIgnoreThen.subscribe
  [40] reactor.core.publisher.MonoPeekFuseable.subscribe
  [41] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [44] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [45] reactor.core.publisher.FluxRange$RangeSubscription.request
  [46] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [47] reactor.core.publisher.FluxRange.subscribe
  [48] reactor.core.publisher.FluxFlatMap.subscribe
  [49] reactor.core.publisher.Flux.subscribe
  [50] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [51] reactor.core.publisher.Operators$MonoSubscriber.complete
  [52] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [53] reactor.core.publisher.Operators$MonoSubscriber.complete
  [54] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [55] reactor.core.publisher.MonoIgnoreThen.subscribe
  [56] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [57] reactor.core.publisher.Operators$ScalarSubscription.request
  [58] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [59] reactor.core.publisher.MonoJust.subscribe
  [60] reactor.core.publisher.MonoDefer.subscribe
  [61] reactor.core.publisher.MonoFlatMap.subscribe
  [62] reactor.core.publisher.MonoFlatMapMany.subscribe
  [63] reactor.core.publisher.FluxPeek.subscribe
  [64] reactor.core.publisher.FluxPeek.subscribe
  [65] reactor.core.publisher.Flux.blockLast
  [66] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] reactor.core.publisher.Operators.addCap
  [ 1] reactor.core.publisher.UnicastProcessor.request
  [ 2] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 4] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 5] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 6] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 7] reactor.core.publisher.UnicastProcessor.drain
  [ 8] reactor.core.publisher.UnicastProcessor.onNext
  [ 9] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [10] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [12] io.rsocket.internal.UnboundedProcessor.drainRegular
  [13] io.rsocket.internal.UnboundedProcessor.drain
  [14] io.rsocket.internal.UnboundedProcessor.onNext
  [15] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [16] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [17] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [18] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [19] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [20] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [22] reactor.core.publisher.Operators$ScalarSubscription.request
  [23] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [24] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [25] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [26] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [27] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [29] reactor.core.publisher.MonoJust.subscribe
  [30] reactor.core.publisher.MonoPeekFuseable.subscribe
  [31] reactor.core.publisher.MonoMapFuseable.subscribe
  [32] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [33] reactor.core.publisher.MonoDoFinally.subscribe
  [34] reactor.core.publisher.Mono.subscribe
  [35] reactor.core.publisher.Mono.subscribeWith
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.Mono.subscribe
  [39] io.rsocket.RSocketServer.handleRequestResponse
  [40] io.rsocket.RSocketServer.handleFrame
  [41] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [42] reactor.core.publisher.LambdaSubscriber.onNext
  [43] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [46] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [47] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [48] reactor.core.publisher.UnicastProcessor.drainRegular
  [49] reactor.core.publisher.UnicastProcessor.drain
  [50] reactor.core.publisher.UnicastProcessor.onNext
  [51] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [52] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [53] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [54] io.rsocket.internal.UnboundedProcessor.drainRegular
  [55] io.rsocket.internal.UnboundedProcessor.drain
  [56] io.rsocket.internal.UnboundedProcessor.onNext
  [57] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [58] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [59] reactor.core.publisher.MonoDefer.subscribe
  [60] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [61] reactor.core.publisher.MonoIgnoreThen.subscribe
  [62] reactor.core.publisher.MonoPeekFuseable.subscribe
  [63] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [64] reactor.core.publisher.Mono.subscribe
  [65] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [66] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [67] reactor.core.publisher.FluxRange$RangeSubscription.request
  [68] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [69] reactor.core.publisher.FluxRange.subscribe
  [70] reactor.core.publisher.FluxFlatMap.subscribe
  [71] reactor.core.publisher.Flux.subscribe
  [72] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [73] reactor.core.publisher.Operators$MonoSubscriber.complete
  [74] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [75] reactor.core.publisher.Operators$MonoSubscriber.complete
  [76] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [77] reactor.core.publisher.MonoIgnoreThen.subscribe
  [78] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [79] reactor.core.publisher.Operators$ScalarSubscription.request
  [80] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [81] reactor.core.publisher.MonoJust.subscribe
  [82] reactor.core.publisher.MonoDefer.subscribe
  [83] reactor.core.publisher.MonoFlatMap.subscribe
  [84] reactor.core.publisher.MonoFlatMapMany.subscribe
  [85] reactor.core.publisher.FluxPeek.subscribe
  [86] reactor.core.publisher.FluxPeek.subscribe
  [87] reactor.core.publisher.Flux.blockLast
  [88] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] io.netty.util.internal.PlatformDependent0.directBufferAddress
  [ 1] io.netty.util.internal.PlatformDependent.directBufferAddress
  [ 2] io.netty.buffer.PooledUnsafeDirectByteBuf.initMemoryAddress
  [ 3] io.netty.buffer.PooledUnsafeDirectByteBuf.init
  [ 4] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 5] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 6] io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache.initBuf
  [ 7] io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate
  [ 8] io.netty.buffer.PoolThreadCache.allocate
  [ 9] io.netty.buffer.PoolThreadCache.allocateTiny
  [10] io.netty.buffer.PoolArena.allocate
  [11] io.netty.buffer.PoolArena.allocate
  [12] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [13] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [14] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [15] io.netty.buffer.AbstractByteBufAllocator.buffer
  [16] io.rsocket.frame.FrameHeaderFlyweight.encode
  [17] io.rsocket.frame.RequestFlyweight.encode
  [18] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [19] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [20] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] reactor.core.publisher.Operators$ScalarSubscription.request
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [25] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [26] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [27] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [29] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [30] reactor.core.publisher.MonoJust.subscribe
  [31] reactor.core.publisher.MonoPeekFuseable.subscribe
  [32] reactor.core.publisher.MonoMapFuseable.subscribe
  [33] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [34] reactor.core.publisher.MonoDoFinally.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribeWith
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.Mono.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] io.rsocket.RSocketServer.handleRequestResponse
  [41] io.rsocket.RSocketServer.handleFrame
  [42] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [43] reactor.core.publisher.LambdaSubscriber.onNext
  [44] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [46] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [47] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [48] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [49] reactor.core.publisher.UnicastProcessor.drainRegular
  [50] reactor.core.publisher.UnicastProcessor.drain
  [51] reactor.core.publisher.UnicastProcessor.onNext
  [52] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [53] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [54] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [55] io.rsocket.internal.UnboundedProcessor.drainRegular
  [56] io.rsocket.internal.UnboundedProcessor.drain
  [57] io.rsocket.internal.UnboundedProcessor.onNext
  [58] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [59] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [60] reactor.core.publisher.MonoDefer.subscribe
  [61] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [62] reactor.core.publisher.MonoIgnoreThen.subscribe
  [63] reactor.core.publisher.MonoPeekFuseable.subscribe
  [64] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [65] reactor.core.publisher.Mono.subscribe
  [66] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [67] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [68] reactor.core.publisher.FluxRange$RangeSubscription.request
  [69] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [70] reactor.core.publisher.FluxRange.subscribe
  [71] reactor.core.publisher.FluxFlatMap.subscribe
  [72] reactor.core.publisher.Flux.subscribe
  [73] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [74] reactor.core.publisher.Operators$MonoSubscriber.complete
  [75] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [76] reactor.core.publisher.Operators$MonoSubscriber.complete
  [77] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [78] reactor.core.publisher.MonoIgnoreThen.subscribe
  [79] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [80] reactor.core.publisher.Operators$ScalarSubscription.request
  [81] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [82] reactor.core.publisher.MonoJust.subscribe
  [83] reactor.core.publisher.MonoDefer.subscribe
  [84] reactor.core.publisher.MonoFlatMap.subscribe
  [85] reactor.core.publisher.MonoFlatMapMany.subscribe
  [86] reactor.core.publisher.FluxPeek.subscribe
  [87] reactor.core.publisher.FluxPeek.subscribe
  [88] reactor.core.publisher.Flux.blockLast
  [89] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] io.rsocket.frame.FrameHeaderFlyweight.flags
  [ 1] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 2] io.rsocket.frame.RequestFlyweight.data
  [ 3] io.rsocket.frame.PayloadFrameFlyweight.data
  [ 4] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 5] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 6] io.rsocket.RSocketClient.handleFrame
  [ 7] io.rsocket.RSocketClient.handleIncomingFrames
  [ 8] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 9] reactor.core.publisher.LambdaSubscriber.onNext
  [10] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [14] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [15] reactor.core.publisher.UnicastProcessor.drainRegular
  [16] reactor.core.publisher.UnicastProcessor.drain
  [17] reactor.core.publisher.UnicastProcessor.onNext
  [18] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [19] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [21] io.rsocket.internal.UnboundedProcessor.drainRegular
  [22] io.rsocket.internal.UnboundedProcessor.drain
  [23] io.rsocket.internal.UnboundedProcessor.onNext
  [24] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [25] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [26] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [27] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [28] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [29] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [30] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [33] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [34] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [35] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [36] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [37] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [38] reactor.core.publisher.MonoJust.subscribe
  [39] reactor.core.publisher.MonoPeekFuseable.subscribe
  [40] reactor.core.publisher.MonoMapFuseable.subscribe
  [41] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [42] reactor.core.publisher.MonoDoFinally.subscribe
  [43] reactor.core.publisher.Mono.subscribe
  [44] reactor.core.publisher.Mono.subscribeWith
  [45] reactor.core.publisher.Mono.subscribe
  [46] reactor.core.publisher.Mono.subscribe
  [47] reactor.core.publisher.Mono.subscribe
  [48] io.rsocket.RSocketServer.handleRequestResponse
  [49] io.rsocket.RSocketServer.handleFrame
  [50] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [51] reactor.core.publisher.LambdaSubscriber.onNext
  [52] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [53] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [54] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [55] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [56] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [57] reactor.core.publisher.UnicastProcessor.drainRegular
  [58] reactor.core.publisher.UnicastProcessor.drain
  [59] reactor.core.publisher.UnicastProcessor.onNext
  [60] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [61] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [62] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [63] io.rsocket.internal.UnboundedProcessor.drainRegular
  [64] io.rsocket.internal.UnboundedProcessor.drain
  [65] io.rsocket.internal.UnboundedProcessor.onNext
  [66] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [67] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [68] reactor.core.publisher.MonoDefer.subscribe
  [69] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [70] reactor.core.publisher.MonoIgnoreThen.subscribe
  [71] reactor.core.publisher.MonoPeekFuseable.subscribe
  [72] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [73] reactor.core.publisher.Mono.subscribe
  [74] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [75] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [76] reactor.core.publisher.FluxRange$RangeSubscription.request
  [77] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [78] reactor.core.publisher.FluxRange.subscribe
  [79] reactor.core.publisher.FluxFlatMap.subscribe
  [80] reactor.core.publisher.Flux.subscribe
  [81] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [82] reactor.core.publisher.Operators$MonoSubscriber.complete
  [83] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [84] reactor.core.publisher.Operators$MonoSubscriber.complete
  [85] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [86] reactor.core.publisher.MonoIgnoreThen.subscribe
  [87] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [88] reactor.core.publisher.Operators$ScalarSubscription.request
  [89] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [90] reactor.core.publisher.MonoJust.subscribe
  [91] reactor.core.publisher.MonoDefer.subscribe
  [92] reactor.core.publisher.MonoFlatMap.subscribe
  [93] reactor.core.publisher.MonoFlatMapMany.subscribe
  [94] reactor.core.publisher.FluxPeek.subscribe
  [95] reactor.core.publisher.FluxPeek.subscribe
  [96] reactor.core.publisher.Flux.blockLast
  [97] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] vtable stub
  [ 1] io.netty.buffer.AbstractByteBuf.ensureAccessible
  [ 2] io.netty.buffer.AbstractByteBuf.ensureWritable0
  [ 3] io.netty.buffer.AbstractByteBuf.writeByte
  [ 4] io.rsocket.frame.DataAndMetadataFlyweight.encodeLength
  [ 5] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.RequestFlyweight.encode
  [ 8] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 9] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [10] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [11] reactor.core.publisher.MonoDefer.subscribe
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [13] reactor.core.publisher.MonoIgnoreThen.subscribe
  [14] reactor.core.publisher.MonoPeekFuseable.subscribe
  [15] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [19] reactor.core.publisher.FluxRange$RangeSubscription.request
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.FluxRange.subscribe
  [22] reactor.core.publisher.FluxFlatMap.subscribe
  [23] reactor.core.publisher.Flux.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [27] reactor.core.publisher.Operators$MonoSubscriber.complete
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoFlatMap.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.Flux.blockLast
  [40] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] io.rsocket.buffer.Tuple3ByteBuf._getInt
  [ 1] io.netty.buffer.AbstractByteBuf.readInt
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.streamId
  [ 3] io.rsocket.internal.ClientServerInputMultiplexer.lambda$new$0
  [ 4] io.rsocket.internal.ClientServerInputMultiplexer$$Lambda$38.556529265.apply
  [ 5] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 6] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 7] reactor.core.publisher.UnicastProcessor.drain
  [ 8] reactor.core.publisher.UnicastProcessor.onNext
  [ 9] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [10] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [12] io.rsocket.internal.UnboundedProcessor.drainRegular
  [13] io.rsocket.internal.UnboundedProcessor.drain
  [14] io.rsocket.internal.UnboundedProcessor.onNext
  [15] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [16] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [17] reactor.core.publisher.MonoDefer.subscribe
  [18] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [19] reactor.core.publisher.MonoIgnoreThen.subscribe
  [20] reactor.core.publisher.MonoPeekFuseable.subscribe
  [21] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [24] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [25] reactor.core.publisher.FluxRange$RangeSubscription.request
  [26] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [27] reactor.core.publisher.FluxRange.subscribe
  [28] reactor.core.publisher.FluxFlatMap.subscribe
  [29] reactor.core.publisher.Flux.subscribe
  [30] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [31] reactor.core.publisher.Operators$MonoSubscriber.complete
  [32] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [33] reactor.core.publisher.Operators$MonoSubscriber.complete
  [34] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [35] reactor.core.publisher.MonoIgnoreThen.subscribe
  [36] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [37] reactor.core.publisher.Operators$ScalarSubscription.request
  [38] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [39] reactor.core.publisher.MonoJust.subscribe
  [40] reactor.core.publisher.MonoDefer.subscribe
  [41] reactor.core.publisher.MonoFlatMap.subscribe
  [42] reactor.core.publisher.MonoFlatMapMany.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.FluxPeek.subscribe
  [45] reactor.core.publisher.Flux.blockLast
  [46] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] io.rsocket.buffer.Tuple3ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.frameType
  [ 3] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 4] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 5] io.rsocket.RSocketServer.handleFrame
  [ 6] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 7] reactor.core.publisher.LambdaSubscriber.onNext
  [ 8] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [12] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [13] reactor.core.publisher.UnicastProcessor.drainRegular
  [14] reactor.core.publisher.UnicastProcessor.drain
  [15] reactor.core.publisher.UnicastProcessor.onNext
  [16] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [17] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [19] io.rsocket.internal.UnboundedProcessor.drainRegular
  [20] io.rsocket.internal.UnboundedProcessor.drain
  [21] io.rsocket.internal.UnboundedProcessor.onNext
  [22] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [23] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [24] reactor.core.publisher.MonoDefer.subscribe
  [25] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [26] reactor.core.publisher.MonoIgnoreThen.subscribe
  [27] reactor.core.publisher.MonoPeekFuseable.subscribe
  [28] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [29] reactor.core.publisher.Mono.subscribe
  [30] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [32] reactor.core.publisher.FluxRange$RangeSubscription.request
  [33] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [34] reactor.core.publisher.FluxRange.subscribe
  [35] reactor.core.publisher.FluxFlatMap.subscribe
  [36] reactor.core.publisher.Flux.subscribe
  [37] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [38] reactor.core.publisher.Operators$MonoSubscriber.complete
  [39] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [40] reactor.core.publisher.Operators$MonoSubscriber.complete
  [41] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [42] reactor.core.publisher.MonoIgnoreThen.subscribe
  [43] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [44] reactor.core.publisher.Operators$ScalarSubscription.request
  [45] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [46] reactor.core.publisher.MonoJust.subscribe
  [47] reactor.core.publisher.MonoDefer.subscribe
  [48] reactor.core.publisher.MonoFlatMap.subscribe
  [49] reactor.core.publisher.MonoFlatMapMany.subscribe
  [50] reactor.core.publisher.FluxPeek.subscribe
  [51] reactor.core.publisher.FluxPeek.subscribe
  [52] reactor.core.publisher.Flux.blockLast
  [53] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] io.netty.buffer.PoolThreadCache.cache
  [ 1] io.netty.buffer.PoolThreadCache.add
  [ 2] io.netty.buffer.PoolArena.free
  [ 3] io.netty.buffer.PooledByteBuf.deallocate
  [ 4] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 5] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 6] io.rsocket.buffer.Tuple3ByteBuf.deallocate
  [ 7] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 8] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 9] io.netty.util.ReferenceCountUtil.release
  [10] io.netty.util.ReferenceCountUtil.safeRelease
  [11] io.rsocket.RSocketServer.handleFrame
  [12] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [13] reactor.core.publisher.LambdaSubscriber.onNext
  [14] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [18] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [19] reactor.core.publisher.UnicastProcessor.drainRegular
  [20] reactor.core.publisher.UnicastProcessor.drain
  [21] reactor.core.publisher.UnicastProcessor.onNext
  [22] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [23] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [25] io.rsocket.internal.UnboundedProcessor.drainRegular
  [26] io.rsocket.internal.UnboundedProcessor.drain
  [27] io.rsocket.internal.UnboundedProcessor.onNext
  [28] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [29] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [30] reactor.core.publisher.MonoDefer.subscribe
  [31] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [32] reactor.core.publisher.MonoIgnoreThen.subscribe
  [33] reactor.core.publisher.MonoPeekFuseable.subscribe
  [34] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [37] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [38] reactor.core.publisher.FluxRange$RangeSubscription.request
  [39] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [40] reactor.core.publisher.FluxRange.subscribe
  [41] reactor.core.publisher.FluxFlatMap.subscribe
  [42] reactor.core.publisher.Flux.subscribe
  [43] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [44] reactor.core.publisher.Operators$MonoSubscriber.complete
  [45] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [46] reactor.core.publisher.Operators$MonoSubscriber.complete
  [47] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [48] reactor.core.publisher.MonoIgnoreThen.subscribe
  [49] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [50] reactor.core.publisher.Operators$ScalarSubscription.request
  [51] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [52] reactor.core.publisher.MonoJust.subscribe
  [53] reactor.core.publisher.MonoDefer.subscribe
  [54] reactor.core.publisher.MonoFlatMap.subscribe
  [55] reactor.core.publisher.MonoFlatMapMany.subscribe
  [56] reactor.core.publisher.FluxPeek.subscribe
  [57] reactor.core.publisher.FluxPeek.subscribe
  [58] reactor.core.publisher.Flux.blockLast
  [59] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] io.rsocket.buffer.Tuple2ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.flags
  [ 3] io.rsocket.frame.FrameHeaderFlyweight.hasMetadata
  [ 4] io.rsocket.frame.RequestFlyweight.data
  [ 5] io.rsocket.frame.RequestResponseFrameFlyweight.data
  [ 6] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 7] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 8] io.rsocket.RSocketServer.handleFrame
  [ 9] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [10] reactor.core.publisher.LambdaSubscriber.onNext
  [11] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [15] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [16] reactor.core.publisher.UnicastProcessor.drainRegular
  [17] reactor.core.publisher.UnicastProcessor.drain
  [18] reactor.core.publisher.UnicastProcessor.onNext
  [19] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [20] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [22] io.rsocket.internal.UnboundedProcessor.drainRegular
  [23] io.rsocket.internal.UnboundedProcessor.drain
  [24] io.rsocket.internal.UnboundedProcessor.onNext
  [25] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [26] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [27] reactor.core.publisher.MonoDefer.subscribe
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoPeekFuseable.subscribe
  [31] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [34] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [35] reactor.core.publisher.FluxRange$RangeSubscription.request
  [36] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [37] reactor.core.publisher.FluxRange.subscribe
  [38] reactor.core.publisher.FluxFlatMap.subscribe
  [39] reactor.core.publisher.Flux.subscribe
  [40] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [41] reactor.core.publisher.Operators$MonoSubscriber.complete
  [42] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [43] reactor.core.publisher.Operators$MonoSubscriber.complete
  [44] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [45] reactor.core.publisher.MonoIgnoreThen.subscribe
  [46] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [47] reactor.core.publisher.Operators$ScalarSubscription.request
  [48] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [49] reactor.core.publisher.MonoJust.subscribe
  [50] reactor.core.publisher.MonoDefer.subscribe
  [51] reactor.core.publisher.MonoFlatMap.subscribe
  [52] reactor.core.publisher.MonoFlatMapMany.subscribe
  [53] reactor.core.publisher.FluxPeek.subscribe
  [54] reactor.core.publisher.FluxPeek.subscribe
  [55] reactor.core.publisher.Flux.blockLast
  [56] io.rsocket.transport.local.LocalPingPong.main

--- 40000000 ns (0.15%), 4 samples
  [ 0] reactor.core.publisher.MonoCreate.subscribe
  [ 1] reactor.core.publisher.Operators.toCoreSubscriber
  [ 2] reactor.core.publisher.Mono.subscribe
  [ 3] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 4] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 5] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 6] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 7] reactor.core.publisher.Mono.subscribe
  [ 8] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 9] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [10] reactor.core.publisher.FluxRange$RangeSubscription.request
  [11] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [12] reactor.core.publisher.FluxRange.subscribe
  [13] reactor.core.publisher.FluxFlatMap.subscribe
  [14] reactor.core.publisher.Flux.subscribe
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [16] reactor.core.publisher.Operators$MonoSubscriber.complete
  [17] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [18] reactor.core.publisher.Operators$MonoSubscriber.complete
  [19] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [20] reactor.core.publisher.MonoIgnoreThen.subscribe
  [21] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [22] reactor.core.publisher.Operators$ScalarSubscription.request
  [23] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [24] reactor.core.publisher.MonoJust.subscribe
  [25] reactor.core.publisher.MonoDefer.subscribe
  [26] reactor.core.publisher.MonoFlatMap.subscribe
  [27] reactor.core.publisher.MonoFlatMapMany.subscribe
  [28] reactor.core.publisher.FluxPeek.subscribe
  [29] reactor.core.publisher.FluxPeek.subscribe
  [30] reactor.core.publisher.Flux.blockLast
  [31] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.netty.buffer.AbstractByteBuf.<init>
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.checkSliceOutOfBounds
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 4] io.netty.buffer.AbstractByteBuf.slice
  [ 5] io.rsocket.buffer.Tuple2ByteBuf.slice
  [ 6] io.netty.buffer.AbstractByteBuf.readSlice
  [ 7] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 8] io.rsocket.frame.RequestFlyweight.data
  [ 9] io.rsocket.frame.PayloadFrameFlyweight.data
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [12] io.rsocket.RSocketClient.handleFrame
  [13] io.rsocket.RSocketClient.handleIncomingFrames
  [14] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [15] reactor.core.publisher.LambdaSubscriber.onNext
  [16] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [19] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [20] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [21] reactor.core.publisher.UnicastProcessor.drainRegular
  [22] reactor.core.publisher.UnicastProcessor.drain
  [23] reactor.core.publisher.UnicastProcessor.onNext
  [24] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [25] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [27] io.rsocket.internal.UnboundedProcessor.drainRegular
  [28] io.rsocket.internal.UnboundedProcessor.drain
  [29] io.rsocket.internal.UnboundedProcessor.onNext
  [30] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [31] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [32] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [33] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [34] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [37] reactor.core.publisher.Operators$ScalarSubscription.request
  [38] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [39] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [40] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [41] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [42] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [43] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [44] reactor.core.publisher.MonoJust.subscribe
  [45] reactor.core.publisher.MonoPeekFuseable.subscribe
  [46] reactor.core.publisher.MonoMapFuseable.subscribe
  [47] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [48] reactor.core.publisher.MonoDoFinally.subscribe
  [49] reactor.core.publisher.Mono.subscribe
  [50] reactor.core.publisher.Mono.subscribeWith
  [51] reactor.core.publisher.Mono.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] reactor.core.publisher.Mono.subscribe
  [54] io.rsocket.RSocketServer.handleRequestResponse
  [55] io.rsocket.RSocketServer.handleFrame
  [56] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [57] reactor.core.publisher.LambdaSubscriber.onNext
  [58] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [59] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [60] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [61] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [62] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [63] reactor.core.publisher.UnicastProcessor.drainRegular
  [64] reactor.core.publisher.UnicastProcessor.drain
  [65] reactor.core.publisher.UnicastProcessor.onNext
  [66] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [67] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [68] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [69] io.rsocket.internal.UnboundedProcessor.drainRegular
  [70] io.rsocket.internal.UnboundedProcessor.drain
  [71] io.rsocket.internal.UnboundedProcessor.onNext
  [72] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [73] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [74] reactor.core.publisher.MonoDefer.subscribe
  [75] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [76] reactor.core.publisher.MonoIgnoreThen.subscribe
  [77] reactor.core.publisher.MonoPeekFuseable.subscribe
  [78] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [79] reactor.core.publisher.Mono.subscribe
  [80] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [81] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [82] reactor.core.publisher.FluxRange$RangeSubscription.request
  [83] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [84] reactor.core.publisher.FluxRange.subscribe
  [85] reactor.core.publisher.FluxFlatMap.subscribe
  [86] reactor.core.publisher.Flux.subscribe
  [87] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [88] reactor.core.publisher.Operators$MonoSubscriber.complete
  [89] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [90] reactor.core.publisher.Operators$MonoSubscriber.complete
  [91] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [92] reactor.core.publisher.MonoIgnoreThen.subscribe
  [93] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [94] reactor.core.publisher.Operators$ScalarSubscription.request
  [95] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [96] reactor.core.publisher.MonoJust.subscribe
  [97] reactor.core.publisher.MonoDefer.subscribe
  [98] reactor.core.publisher.MonoFlatMap.subscribe
  [99] reactor.core.publisher.MonoFlatMapMany.subscribe
  [100] reactor.core.publisher.FluxPeek.subscribe
  [101] reactor.core.publisher.FluxPeek.subscribe
  [102] reactor.core.publisher.Flux.blockLast
  [103] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.netty.buffer.AbstractByteBuf.readSlice
  [ 1] io.rsocket.frame.DataAndMetadataFlyweight.metadataWithoutMarking
  [ 2] io.rsocket.frame.RequestFlyweight.metadata
  [ 3] io.rsocket.frame.RequestResponseFrameFlyweight.metadata
  [ 4] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 5] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 6] io.rsocket.RSocketServer.handleFrame
  [ 7] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 8] reactor.core.publisher.LambdaSubscriber.onNext
  [ 9] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [13] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [14] reactor.core.publisher.UnicastProcessor.drainRegular
  [15] reactor.core.publisher.UnicastProcessor.drain
  [16] reactor.core.publisher.UnicastProcessor.onNext
  [17] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [18] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [19] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [20] io.rsocket.internal.UnboundedProcessor.drainRegular
  [21] io.rsocket.internal.UnboundedProcessor.drain
  [22] io.rsocket.internal.UnboundedProcessor.onNext
  [23] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [24] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [25] reactor.core.publisher.MonoDefer.subscribe
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoPeekFuseable.subscribe
  [29] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [30] reactor.core.publisher.Mono.subscribe
  [31] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [32] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [33] reactor.core.publisher.FluxRange$RangeSubscription.request
  [34] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [35] reactor.core.publisher.FluxRange.subscribe
  [36] reactor.core.publisher.FluxFlatMap.subscribe
  [37] reactor.core.publisher.Flux.subscribe
  [38] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [39] reactor.core.publisher.Operators$MonoSubscriber.complete
  [40] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [41] reactor.core.publisher.Operators$MonoSubscriber.complete
  [42] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [43] reactor.core.publisher.MonoIgnoreThen.subscribe
  [44] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [45] reactor.core.publisher.Operators$ScalarSubscription.request
  [46] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [47] reactor.core.publisher.MonoJust.subscribe
  [48] reactor.core.publisher.MonoDefer.subscribe
  [49] reactor.core.publisher.MonoFlatMap.subscribe
  [50] reactor.core.publisher.MonoFlatMapMany.subscribe
  [51] reactor.core.publisher.FluxPeek.subscribe
  [52] reactor.core.publisher.FluxPeek.subscribe
  [53] reactor.core.publisher.Flux.blockLast
  [54] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 1] io.rsocket.frame.RequestFlyweight.data
  [ 2] io.rsocket.frame.PayloadFrameFlyweight.data
  [ 3] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 4] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 5] io.rsocket.RSocketClient.handleFrame
  [ 6] io.rsocket.RSocketClient.handleIncomingFrames
  [ 7] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 8] reactor.core.publisher.LambdaSubscriber.onNext
  [ 9] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [13] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [14] reactor.core.publisher.UnicastProcessor.drainRegular
  [15] reactor.core.publisher.UnicastProcessor.drain
  [16] reactor.core.publisher.UnicastProcessor.onNext
  [17] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [18] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [19] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [20] io.rsocket.internal.UnboundedProcessor.drainRegular
  [21] io.rsocket.internal.UnboundedProcessor.drain
  [22] io.rsocket.internal.UnboundedProcessor.onNext
  [23] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [24] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [25] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [26] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [27] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [29] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [30] reactor.core.publisher.Operators$ScalarSubscription.request
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [32] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [33] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [34] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [37] reactor.core.publisher.MonoJust.subscribe
  [38] reactor.core.publisher.MonoPeekFuseable.subscribe
  [39] reactor.core.publisher.MonoMapFuseable.subscribe
  [40] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [41] reactor.core.publisher.MonoDoFinally.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.Mono.subscribeWith
  [44] reactor.core.publisher.Mono.subscribe
  [45] reactor.core.publisher.Mono.subscribe
  [46] reactor.core.publisher.Mono.subscribe
  [47] io.rsocket.RSocketServer.handleRequestResponse
  [48] io.rsocket.RSocketServer.handleFrame
  [49] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [50] reactor.core.publisher.LambdaSubscriber.onNext
  [51] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [52] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [53] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [54] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [55] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [56] reactor.core.publisher.UnicastProcessor.drainRegular
  [57] reactor.core.publisher.UnicastProcessor.drain
  [58] reactor.core.publisher.UnicastProcessor.onNext
  [59] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [60] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [61] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [62] io.rsocket.internal.UnboundedProcessor.drainRegular
  [63] io.rsocket.internal.UnboundedProcessor.drain
  [64] io.rsocket.internal.UnboundedProcessor.onNext
  [65] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [66] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [67] reactor.core.publisher.MonoDefer.subscribe
  [68] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [69] reactor.core.publisher.MonoIgnoreThen.subscribe
  [70] reactor.core.publisher.MonoPeekFuseable.subscribe
  [71] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [72] reactor.core.publisher.Mono.subscribe
  [73] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [74] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [75] reactor.core.publisher.FluxRange$RangeSubscription.request
  [76] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [77] reactor.core.publisher.FluxRange.subscribe
  [78] reactor.core.publisher.FluxFlatMap.subscribe
  [79] reactor.core.publisher.Flux.subscribe
  [80] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [81] reactor.core.publisher.Operators$MonoSubscriber.complete
  [82] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [83] reactor.core.publisher.Operators$MonoSubscriber.complete
  [84] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [85] reactor.core.publisher.MonoIgnoreThen.subscribe
  [86] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [87] reactor.core.publisher.Operators$ScalarSubscription.request
  [88] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [89] reactor.core.publisher.MonoJust.subscribe
  [90] reactor.core.publisher.MonoDefer.subscribe
  [91] reactor.core.publisher.MonoFlatMap.subscribe
  [92] reactor.core.publisher.MonoFlatMapMany.subscribe
  [93] reactor.core.publisher.FluxPeek.subscribe
  [94] reactor.core.publisher.FluxPeek.subscribe
  [95] reactor.core.publisher.Flux.blockLast
  [96] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.rsocket.frame.DataAndMetadataFlyweight.decodeLength
  [ 1] io.netty.util.internal.PlatformDependent.getInt
  [ 2] io.netty.buffer.AbstractReferenceCountedByteBuf.internalRefCnt
  [ 3] io.netty.buffer.AbstractByteBuf.ensureAccessible
  [ 4] io.netty.buffer.AbstractByteBuf.checkReadableBytes0
  [ 5] io.netty.buffer.AbstractByteBuf.checkReadableBytes
  [ 6] io.netty.buffer.AbstractByteBuf.skipBytes
  [ 7] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 8] io.rsocket.frame.RequestFlyweight.data
  [ 9] io.rsocket.frame.RequestResponseFrameFlyweight.data
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [12] io.rsocket.RSocketServer.handleFrame
  [13] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.UnicastProcessor.drainRegular
  [21] reactor.core.publisher.UnicastProcessor.drain
  [22] reactor.core.publisher.UnicastProcessor.onNext
  [23] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [24] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [26] io.rsocket.internal.UnboundedProcessor.drainRegular
  [27] io.rsocket.internal.UnboundedProcessor.drain
  [28] io.rsocket.internal.UnboundedProcessor.onNext
  [29] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [30] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [31] reactor.core.publisher.MonoDefer.subscribe
  [32] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [33] reactor.core.publisher.MonoIgnoreThen.subscribe
  [34] reactor.core.publisher.MonoPeekFuseable.subscribe
  [35] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [38] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [39] reactor.core.publisher.FluxRange$RangeSubscription.request
  [40] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [41] reactor.core.publisher.FluxRange.subscribe
  [42] reactor.core.publisher.FluxFlatMap.subscribe
  [43] reactor.core.publisher.Flux.subscribe
  [44] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [45] reactor.core.publisher.Operators$MonoSubscriber.complete
  [46] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [47] reactor.core.publisher.Operators$MonoSubscriber.complete
  [48] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [49] reactor.core.publisher.MonoIgnoreThen.subscribe
  [50] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [51] reactor.core.publisher.Operators$ScalarSubscription.request
  [52] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [53] reactor.core.publisher.MonoJust.subscribe
  [54] reactor.core.publisher.MonoDefer.subscribe
  [55] reactor.core.publisher.MonoFlatMap.subscribe
  [56] reactor.core.publisher.MonoFlatMapMany.subscribe
  [57] reactor.core.publisher.FluxPeek.subscribe
  [58] reactor.core.publisher.FluxPeek.subscribe
  [59] reactor.core.publisher.Flux.blockLast
  [60] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater.get
  [ 2] reactor.core.publisher.Operators.addCap
  [ 3] reactor.core.publisher.UnicastProcessor.request
  [ 4] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 5] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 6] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 8] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 9] reactor.core.publisher.UnicastProcessor.drain
  [10] reactor.core.publisher.UnicastProcessor.onNext
  [11] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [12] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [13] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [14] io.rsocket.internal.UnboundedProcessor.drainRegular
  [15] io.rsocket.internal.UnboundedProcessor.drain
  [16] io.rsocket.internal.UnboundedProcessor.onNext
  [17] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [18] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [19] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [20] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [21] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [22] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [23] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [24] reactor.core.publisher.Operators$ScalarSubscription.request
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [26] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [27] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [28] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [29] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [30] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [31] reactor.core.publisher.MonoJust.subscribe
  [32] reactor.core.publisher.MonoPeekFuseable.subscribe
  [33] reactor.core.publisher.MonoMapFuseable.subscribe
  [34] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [35] reactor.core.publisher.MonoDoFinally.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.Mono.subscribeWith
  [38] reactor.core.publisher.Mono.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] reactor.core.publisher.Mono.subscribe
  [41] io.rsocket.RSocketServer.handleRequestResponse
  [42] io.rsocket.RSocketServer.handleFrame
  [43] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [44] reactor.core.publisher.LambdaSubscriber.onNext
  [45] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [46] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [47] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [48] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [49] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [50] reactor.core.publisher.UnicastProcessor.drainRegular
  [51] reactor.core.publisher.UnicastProcessor.drain
  [52] reactor.core.publisher.UnicastProcessor.onNext
  [53] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [54] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [55] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [56] io.rsocket.internal.UnboundedProcessor.drainRegular
  [57] io.rsocket.internal.UnboundedProcessor.drain
  [58] io.rsocket.internal.UnboundedProcessor.onNext
  [59] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [60] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [61] reactor.core.publisher.MonoDefer.subscribe
  [62] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [63] reactor.core.publisher.MonoIgnoreThen.subscribe
  [64] reactor.core.publisher.MonoPeekFuseable.subscribe
  [65] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [66] reactor.core.publisher.Mono.subscribe
  [67] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [68] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [69] reactor.core.publisher.FluxRange$RangeSubscription.request
  [70] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [71] reactor.core.publisher.FluxRange.subscribe
  [72] reactor.core.publisher.FluxFlatMap.subscribe
  [73] reactor.core.publisher.Flux.subscribe
  [74] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [75] reactor.core.publisher.Operators$MonoSubscriber.complete
  [76] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [77] reactor.core.publisher.Operators$MonoSubscriber.complete
  [78] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [79] reactor.core.publisher.MonoIgnoreThen.subscribe
  [80] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [81] reactor.core.publisher.Operators$ScalarSubscription.request
  [82] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [83] reactor.core.publisher.MonoJust.subscribe
  [84] reactor.core.publisher.MonoDefer.subscribe
  [85] reactor.core.publisher.MonoFlatMap.subscribe
  [86] reactor.core.publisher.MonoFlatMapMany.subscribe
  [87] reactor.core.publisher.FluxPeek.subscribe
  [88] reactor.core.publisher.FluxPeek.subscribe
  [89] reactor.core.publisher.Flux.blockLast
  [90] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] java.lang.ThreadLocal$ThreadLocalMap.access$000
  [ 1] java.lang.ThreadLocal.get
  [ 2] io.netty.util.internal.InternalThreadLocalMap.slowGet
  [ 3] io.netty.util.internal.InternalThreadLocalMap.get
  [ 4] io.netty.util.concurrent.FastThreadLocal.get
  [ 5] io.netty.util.Recycler.get
  [ 6] io.netty.buffer.PoolThreadCache$MemoryRegionCache.newEntry
  [ 7] io.netty.buffer.PoolThreadCache$MemoryRegionCache.add
  [ 8] io.netty.buffer.PoolThreadCache.add
  [ 9] io.netty.buffer.PoolArena.free
  [10] io.netty.buffer.PooledByteBuf.deallocate
  [11] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [12] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [13] io.rsocket.buffer.Tuple3ByteBuf.deallocate
  [14] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [15] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [16] io.netty.util.ReferenceCountUtil.release
  [17] io.netty.util.ReferenceCountUtil.safeRelease
  [18] io.rsocket.RSocketServer.handleFrame
  [19] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [20] reactor.core.publisher.LambdaSubscriber.onNext
  [21] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [23] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [24] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [25] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [26] reactor.core.publisher.UnicastProcessor.drainRegular
  [27] reactor.core.publisher.UnicastProcessor.drain
  [28] reactor.core.publisher.UnicastProcessor.onNext
  [29] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [30] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [32] io.rsocket.internal.UnboundedProcessor.drainRegular
  [33] io.rsocket.internal.UnboundedProcessor.drain
  [34] io.rsocket.internal.UnboundedProcessor.onNext
  [35] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [36] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [37] reactor.core.publisher.MonoDefer.subscribe
  [38] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [39] reactor.core.publisher.MonoIgnoreThen.subscribe
  [40] reactor.core.publisher.MonoPeekFuseable.subscribe
  [41] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [44] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [45] reactor.core.publisher.FluxRange$RangeSubscription.request
  [46] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [47] reactor.core.publisher.FluxRange.subscribe
  [48] reactor.core.publisher.FluxFlatMap.subscribe
  [49] reactor.core.publisher.Flux.subscribe
  [50] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [51] reactor.core.publisher.Operators$MonoSubscriber.complete
  [52] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [53] reactor.core.publisher.Operators$MonoSubscriber.complete
  [54] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [55] reactor.core.publisher.MonoIgnoreThen.subscribe
  [56] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [57] reactor.core.publisher.Operators$ScalarSubscription.request
  [58] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [59] reactor.core.publisher.MonoJust.subscribe
  [60] reactor.core.publisher.MonoDefer.subscribe
  [61] reactor.core.publisher.MonoFlatMap.subscribe
  [62] reactor.core.publisher.MonoFlatMapMany.subscribe
  [63] reactor.core.publisher.FluxPeek.subscribe
  [64] reactor.core.publisher.FluxPeek.subscribe
  [65] reactor.core.publisher.Flux.blockLast
  [66] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceArray.byteOffset
  [ 1] java.util.concurrent.atomic.AtomicReferenceArray.checkedByteOffset
  [ 2] java.util.concurrent.atomic.AtomicReferenceArray.lazySet
  [ 3] reactor.util.concurrent.SpscLinkedArrayQueue.offer
  [ 4] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 5] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 6] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 7] reactor.core.publisher.UnicastProcessor.drain
  [ 8] reactor.core.publisher.UnicastProcessor.onNext
  [ 9] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [10] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [12] io.rsocket.internal.UnboundedProcessor.drainRegular
  [13] io.rsocket.internal.UnboundedProcessor.drain
  [14] io.rsocket.internal.UnboundedProcessor.onNext
  [15] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [16] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [17] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [18] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [19] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [20] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [22] reactor.core.publisher.Operators$ScalarSubscription.request
  [23] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [24] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [25] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [26] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [27] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [29] reactor.core.publisher.MonoJust.subscribe
  [30] reactor.core.publisher.MonoPeekFuseable.subscribe
  [31] reactor.core.publisher.MonoMapFuseable.subscribe
  [32] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [33] reactor.core.publisher.MonoDoFinally.subscribe
  [34] reactor.core.publisher.Mono.subscribe
  [35] reactor.core.publisher.Mono.subscribeWith
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.Mono.subscribe
  [39] io.rsocket.RSocketServer.handleRequestResponse
  [40] io.rsocket.RSocketServer.handleFrame
  [41] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [42] reactor.core.publisher.LambdaSubscriber.onNext
  [43] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [46] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [47] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [48] reactor.core.publisher.UnicastProcessor.drainRegular
  [49] reactor.core.publisher.UnicastProcessor.drain
  [50] reactor.core.publisher.UnicastProcessor.onNext
  [51] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [52] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [53] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [54] io.rsocket.internal.UnboundedProcessor.drainRegular
  [55] io.rsocket.internal.UnboundedProcessor.drain
  [56] io.rsocket.internal.UnboundedProcessor.onNext
  [57] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [58] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [59] reactor.core.publisher.MonoDefer.subscribe
  [60] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [61] reactor.core.publisher.MonoIgnoreThen.subscribe
  [62] reactor.core.publisher.MonoPeekFuseable.subscribe
  [63] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [64] reactor.core.publisher.Mono.subscribe
  [65] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [66] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [67] reactor.core.publisher.FluxRange$RangeSubscription.request
  [68] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [69] reactor.core.publisher.FluxRange.subscribe
  [70] reactor.core.publisher.FluxFlatMap.subscribe
  [71] reactor.core.publisher.Flux.subscribe
  [72] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [73] reactor.core.publisher.Operators$MonoSubscriber.complete
  [74] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [75] reactor.core.publisher.Operators$MonoSubscriber.complete
  [76] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [77] reactor.core.publisher.MonoIgnoreThen.subscribe
  [78] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [79] reactor.core.publisher.Operators$ScalarSubscription.request
  [80] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [81] reactor.core.publisher.MonoJust.subscribe
  [82] reactor.core.publisher.MonoDefer.subscribe
  [83] reactor.core.publisher.MonoFlatMap.subscribe
  [84] reactor.core.publisher.MonoFlatMapMany.subscribe
  [85] reactor.core.publisher.FluxPeek.subscribe
  [86] reactor.core.publisher.FluxPeek.subscribe
  [87] reactor.core.publisher.Flux.blockLast
  [88] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.netty.util.internal.logging.LocationAwareSlf4JLogger.isErrorEnabled
  [ 1] io.netty.util.ResourceLeakDetector.reportLeak
  [ 2] io.netty.util.ResourceLeakDetector.track0
  [ 3] io.netty.util.ResourceLeakDetector.track
  [ 4] io.netty.buffer.AbstractByteBufAllocator.toLeakAwareBuffer
  [ 5] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 6] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 7] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 8] io.netty.buffer.AbstractByteBufAllocator.buffer
  [ 9] io.rsocket.frame.FrameHeaderFlyweight.encode
  [10] io.rsocket.frame.RequestFlyweight.encode
  [11] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [12] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [13] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [14] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [15] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [16] reactor.core.publisher.Operators$ScalarSubscription.request
  [17] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [18] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [19] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [20] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [21] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [23] reactor.core.publisher.MonoJust.subscribe
  [24] reactor.core.publisher.MonoPeekFuseable.subscribe
  [25] reactor.core.publisher.MonoMapFuseable.subscribe
  [26] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [27] reactor.core.publisher.MonoDoFinally.subscribe
  [28] reactor.core.publisher.Mono.subscribe
  [29] reactor.core.publisher.Mono.subscribeWith
  [30] reactor.core.publisher.Mono.subscribe
  [31] reactor.core.publisher.Mono.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] io.rsocket.RSocketServer.handleRequestResponse
  [34] io.rsocket.RSocketServer.handleFrame
  [35] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [36] reactor.core.publisher.LambdaSubscriber.onNext
  [37] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [38] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [39] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [40] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [41] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [42] reactor.core.publisher.UnicastProcessor.drainRegular
  [43] reactor.core.publisher.UnicastProcessor.drain
  [44] reactor.core.publisher.UnicastProcessor.onNext
  [45] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [46] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [47] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [48] io.rsocket.internal.UnboundedProcessor.drainRegular
  [49] io.rsocket.internal.UnboundedProcessor.drain
  [50] io.rsocket.internal.UnboundedProcessor.onNext
  [51] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [52] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [53] reactor.core.publisher.MonoDefer.subscribe
  [54] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [55] reactor.core.publisher.MonoIgnoreThen.subscribe
  [56] reactor.core.publisher.MonoPeekFuseable.subscribe
  [57] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [58] reactor.core.publisher.Mono.subscribe
  [59] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [60] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [61] reactor.core.publisher.FluxRange$RangeSubscription.request
  [62] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [63] reactor.core.publisher.FluxRange.subscribe
  [64] reactor.core.publisher.FluxFlatMap.subscribe
  [65] reactor.core.publisher.Flux.subscribe
  [66] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [67] reactor.core.publisher.Operators$MonoSubscriber.complete
  [68] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [69] reactor.core.publisher.Operators$MonoSubscriber.complete
  [70] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [71] reactor.core.publisher.MonoIgnoreThen.subscribe
  [72] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [73] reactor.core.publisher.Operators$ScalarSubscription.request
  [74] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [75] reactor.core.publisher.MonoJust.subscribe
  [76] reactor.core.publisher.MonoDefer.subscribe
  [77] reactor.core.publisher.MonoFlatMap.subscribe
  [78] reactor.core.publisher.MonoFlatMapMany.subscribe
  [79] reactor.core.publisher.FluxPeek.subscribe
  [80] reactor.core.publisher.FluxPeek.subscribe
  [81] reactor.core.publisher.Flux.blockLast
  [82] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.rsocket.RSocketClient.handleFrame
  [ 1] io.netty.util.ReferenceCountUtil.release
  [ 2] io.netty.util.ReferenceCountUtil.safeRelease
  [ 3] io.rsocket.buffer.Tuple2ByteBuf.deallocate
  [ 4] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 5] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 6] io.rsocket.RSocketClient.handleIncomingFrames
  [ 7] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 8] reactor.core.publisher.LambdaSubscriber.onNext
  [ 9] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [13] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [14] reactor.core.publisher.UnicastProcessor.drainRegular
  [15] reactor.core.publisher.UnicastProcessor.drain
  [16] reactor.core.publisher.UnicastProcessor.onNext
  [17] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [18] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [19] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [20] io.rsocket.internal.UnboundedProcessor.drainRegular
  [21] io.rsocket.internal.UnboundedProcessor.drain
  [22] io.rsocket.internal.UnboundedProcessor.onNext
  [23] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [24] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [25] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [26] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [27] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [29] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [30] reactor.core.publisher.Operators$ScalarSubscription.request
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [32] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [33] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [34] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [37] reactor.core.publisher.MonoJust.subscribe
  [38] reactor.core.publisher.MonoPeekFuseable.subscribe
  [39] reactor.core.publisher.MonoMapFuseable.subscribe
  [40] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [41] reactor.core.publisher.MonoDoFinally.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.Mono.subscribeWith
  [44] reactor.core.publisher.Mono.subscribe
  [45] reactor.core.publisher.Mono.subscribe
  [46] reactor.core.publisher.Mono.subscribe
  [47] io.rsocket.RSocketServer.handleRequestResponse
  [48] io.rsocket.RSocketServer.handleFrame
  [49] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [50] reactor.core.publisher.LambdaSubscriber.onNext
  [51] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [52] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [53] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [54] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [55] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [56] reactor.core.publisher.UnicastProcessor.drainRegular
  [57] reactor.core.publisher.UnicastProcessor.drain
  [58] reactor.core.publisher.UnicastProcessor.onNext
  [59] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [60] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [61] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [62] io.rsocket.internal.UnboundedProcessor.drainRegular
  [63] io.rsocket.internal.UnboundedProcessor.drain
  [64] io.rsocket.internal.UnboundedProcessor.onNext
  [65] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [66] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [67] reactor.core.publisher.MonoDefer.subscribe
  [68] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [69] reactor.core.publisher.MonoIgnoreThen.subscribe
  [70] reactor.core.publisher.MonoPeekFuseable.subscribe
  [71] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [72] reactor.core.publisher.Mono.subscribe
  [73] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [74] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [75] reactor.core.publisher.FluxRange$RangeSubscription.request
  [76] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [77] reactor.core.publisher.FluxRange.subscribe
  [78] reactor.core.publisher.FluxFlatMap.subscribe
  [79] reactor.core.publisher.Flux.subscribe
  [80] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [81] reactor.core.publisher.Operators$MonoSubscriber.complete
  [82] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [83] reactor.core.publisher.Operators$MonoSubscriber.complete
  [84] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [85] reactor.core.publisher.MonoIgnoreThen.subscribe
  [86] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [87] reactor.core.publisher.Operators$ScalarSubscription.request
  [88] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [89] reactor.core.publisher.MonoJust.subscribe
  [90] reactor.core.publisher.MonoDefer.subscribe
  [91] reactor.core.publisher.MonoFlatMap.subscribe
  [92] reactor.core.publisher.MonoFlatMapMany.subscribe
  [93] reactor.core.publisher.FluxPeek.subscribe
  [94] reactor.core.publisher.FluxPeek.subscribe
  [95] reactor.core.publisher.Flux.blockLast
  [96] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.netty.util.internal.PlatformDependent0.directBufferAddress
  [ 1] io.netty.util.internal.PlatformDependent.directBufferAddress
  [ 2] io.netty.buffer.PooledUnsafeDirectByteBuf.initMemoryAddress
  [ 3] io.netty.buffer.PooledUnsafeDirectByteBuf.init
  [ 4] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 5] io.netty.buffer.PoolChunk.initBufWithSubpage
  [ 6] io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache.initBuf
  [ 7] io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate
  [ 8] io.netty.buffer.PoolThreadCache.allocate
  [ 9] io.netty.buffer.PoolThreadCache.allocateTiny
  [10] io.netty.buffer.PoolArena.allocate
  [11] io.netty.buffer.PoolArena.allocate
  [12] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [13] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [14] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [15] io.netty.buffer.AbstractByteBufAllocator.buffer
  [16] io.rsocket.frame.FrameHeaderFlyweight.encode
  [17] io.rsocket.frame.RequestFlyweight.encode
  [18] io.rsocket.frame.RequestFlyweight.encode
  [19] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [20] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [21] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [22] reactor.core.publisher.MonoDefer.subscribe
  [23] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [24] reactor.core.publisher.MonoIgnoreThen.subscribe
  [25] reactor.core.publisher.MonoPeekFuseable.subscribe
  [26] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [30] reactor.core.publisher.FluxRange$RangeSubscription.request
  [31] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [32] reactor.core.publisher.FluxRange.subscribe
  [33] reactor.core.publisher.FluxFlatMap.subscribe
  [34] reactor.core.publisher.Flux.subscribe
  [35] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [36] reactor.core.publisher.Operators$MonoSubscriber.complete
  [37] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [38] reactor.core.publisher.Operators$MonoSubscriber.complete
  [39] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [40] reactor.core.publisher.MonoIgnoreThen.subscribe
  [41] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [42] reactor.core.publisher.Operators$ScalarSubscription.request
  [43] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [44] reactor.core.publisher.MonoJust.subscribe
  [45] reactor.core.publisher.MonoDefer.subscribe
  [46] reactor.core.publisher.MonoFlatMap.subscribe
  [47] reactor.core.publisher.MonoFlatMapMany.subscribe
  [48] reactor.core.publisher.FluxPeek.subscribe
  [49] reactor.core.publisher.FluxPeek.subscribe
  [50] reactor.core.publisher.Flux.blockLast
  [51] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] reactor.core.publisher.InnerOperator.currentContext
  [ 1] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.currentContext
  [ 2] reactor.core.publisher.InnerOperator.currentContext
  [ 3] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.currentContext
  [ 4] reactor.core.publisher.MonoCreate$DefaultMonoSink.<init>
  [ 5] reactor.core.publisher.MonoCreate.subscribe
  [ 6] reactor.core.publisher.Mono.subscribe
  [ 7] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 8] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 9] reactor.core.publisher.MonoPeekFuseable.subscribe
  [10] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [13] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [14] reactor.core.publisher.FluxRange$RangeSubscription.request
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [16] reactor.core.publisher.FluxRange.subscribe
  [17] reactor.core.publisher.FluxFlatMap.subscribe
  [18] reactor.core.publisher.Flux.subscribe
  [19] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [20] reactor.core.publisher.Operators$MonoSubscriber.complete
  [21] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [24] reactor.core.publisher.MonoIgnoreThen.subscribe
  [25] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [26] reactor.core.publisher.Operators$ScalarSubscription.request
  [27] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoDefer.subscribe
  [30] reactor.core.publisher.MonoFlatMap.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany.subscribe
  [32] reactor.core.publisher.FluxPeek.subscribe
  [33] reactor.core.publisher.FluxPeek.subscribe
  [34] reactor.core.publisher.Flux.blockLast
  [35] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.rsocket.buffer.Tuple2ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.frameType
  [ 3] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 4] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 5] io.rsocket.RSocketServer.handleFrame
  [ 6] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 7] reactor.core.publisher.LambdaSubscriber.onNext
  [ 8] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [12] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [13] reactor.core.publisher.UnicastProcessor.drainRegular
  [14] reactor.core.publisher.UnicastProcessor.drain
  [15] reactor.core.publisher.UnicastProcessor.onNext
  [16] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [17] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [18] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [19] io.rsocket.internal.UnboundedProcessor.drainRegular
  [20] io.rsocket.internal.UnboundedProcessor.drain
  [21] io.rsocket.internal.UnboundedProcessor.onNext
  [22] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [23] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [24] reactor.core.publisher.MonoDefer.subscribe
  [25] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [26] reactor.core.publisher.MonoIgnoreThen.subscribe
  [27] reactor.core.publisher.MonoPeekFuseable.subscribe
  [28] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [29] reactor.core.publisher.Mono.subscribe
  [30] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [32] reactor.core.publisher.FluxRange$RangeSubscription.request
  [33] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [34] reactor.core.publisher.FluxRange.subscribe
  [35] reactor.core.publisher.FluxFlatMap.subscribe
  [36] reactor.core.publisher.Flux.subscribe
  [37] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [38] reactor.core.publisher.Operators$MonoSubscriber.complete
  [39] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [40] reactor.core.publisher.Operators$MonoSubscriber.complete
  [41] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [42] reactor.core.publisher.MonoIgnoreThen.subscribe
  [43] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [44] reactor.core.publisher.Operators$ScalarSubscription.request
  [45] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [46] reactor.core.publisher.MonoJust.subscribe
  [47] reactor.core.publisher.MonoDefer.subscribe
  [48] reactor.core.publisher.MonoFlatMap.subscribe
  [49] reactor.core.publisher.MonoFlatMapMany.subscribe
  [50] reactor.core.publisher.FluxPeek.subscribe
  [51] reactor.core.publisher.FluxPeek.subscribe
  [52] reactor.core.publisher.Flux.blockLast
  [53] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 2] io.netty.util.ReferenceCountUtil.release
  [ 3] io.netty.util.ReferenceCountUtil.safeRelease
  [ 4] io.rsocket.RSocketServer.handleFrame
  [ 5] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 6] reactor.core.publisher.LambdaSubscriber.onNext
  [ 7] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [11] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [12] reactor.core.publisher.UnicastProcessor.drainRegular
  [13] reactor.core.publisher.UnicastProcessor.drain
  [14] reactor.core.publisher.UnicastProcessor.onNext
  [15] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [16] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [17] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [18] io.rsocket.internal.UnboundedProcessor.drainRegular
  [19] io.rsocket.internal.UnboundedProcessor.drain
  [20] io.rsocket.internal.UnboundedProcessor.onNext
  [21] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [22] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [23] reactor.core.publisher.MonoDefer.subscribe
  [24] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [25] reactor.core.publisher.MonoIgnoreThen.subscribe
  [26] reactor.core.publisher.MonoPeekFuseable.subscribe
  [27] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [28] reactor.core.publisher.Mono.subscribe
  [29] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [30] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [31] reactor.core.publisher.FluxRange$RangeSubscription.request
  [32] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.FluxRange.subscribe
  [34] reactor.core.publisher.FluxFlatMap.subscribe
  [35] reactor.core.publisher.Flux.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [37] reactor.core.publisher.Operators$MonoSubscriber.complete
  [38] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [39] reactor.core.publisher.Operators$MonoSubscriber.complete
  [40] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [41] reactor.core.publisher.MonoIgnoreThen.subscribe
  [42] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [43] reactor.core.publisher.Operators$ScalarSubscription.request
  [44] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [45] reactor.core.publisher.MonoJust.subscribe
  [46] reactor.core.publisher.MonoDefer.subscribe
  [47] reactor.core.publisher.MonoFlatMap.subscribe
  [48] reactor.core.publisher.MonoFlatMapMany.subscribe
  [49] reactor.core.publisher.FluxPeek.subscribe
  [50] reactor.core.publisher.FluxPeek.subscribe
  [51] reactor.core.publisher.Flux.blockLast
  [52] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.netty.util.internal.PlatformDependent.putInt
  [ 1] io.netty.buffer.UnsafeByteBufUtil.setInt
  [ 2] io.netty.buffer.PooledUnsafeDirectByteBuf._setInt
  [ 3] io.netty.buffer.AbstractByteBuf.writeInt
  [ 4] io.rsocket.frame.FrameHeaderFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 8] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 9] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [10] reactor.core.publisher.MonoDefer.subscribe
  [11] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [12] reactor.core.publisher.MonoIgnoreThen.subscribe
  [13] reactor.core.publisher.MonoPeekFuseable.subscribe
  [14] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [17] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [18] reactor.core.publisher.FluxRange$RangeSubscription.request
  [19] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [20] reactor.core.publisher.FluxRange.subscribe
  [21] reactor.core.publisher.FluxFlatMap.subscribe
  [22] reactor.core.publisher.Flux.subscribe
  [23] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [24] reactor.core.publisher.Operators$MonoSubscriber.complete
  [25] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [26] reactor.core.publisher.Operators$MonoSubscriber.complete
  [27] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [28] reactor.core.publisher.MonoIgnoreThen.subscribe
  [29] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [30] reactor.core.publisher.Operators$ScalarSubscription.request
  [31] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [32] reactor.core.publisher.MonoJust.subscribe
  [33] reactor.core.publisher.MonoDefer.subscribe
  [34] reactor.core.publisher.MonoFlatMap.subscribe
  [35] reactor.core.publisher.MonoFlatMapMany.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.Flux.blockLast
  [39] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] itable stub
  [ 1] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 2] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 3] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 4] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [ 5] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 6] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 7] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 8] reactor.core.publisher.MonoProcessor.subscribe
  [ 9] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [10] reactor.core.publisher.MonoPeek.subscribe
  [11] reactor.core.publisher.MonoDoFinally.subscribe
  [12] reactor.core.publisher.MonoDefer.subscribe
  [13] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [14] reactor.core.publisher.MonoIgnoreThen.subscribe
  [15] reactor.core.publisher.MonoPeekFuseable.subscribe
  [16] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [17] reactor.core.publisher.Mono.subscribe
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [19] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [20] reactor.core.publisher.FluxRange$RangeSubscription.request
  [21] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [22] reactor.core.publisher.FluxRange.subscribe
  [23] reactor.core.publisher.FluxFlatMap.subscribe
  [24] reactor.core.publisher.Flux.subscribe
  [25] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [26] reactor.core.publisher.Operators$MonoSubscriber.complete
  [27] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [28] reactor.core.publisher.Operators$MonoSubscriber.complete
  [29] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [30] reactor.core.publisher.MonoIgnoreThen.subscribe
  [31] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [32] reactor.core.publisher.Operators$ScalarSubscription.request
  [33] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [34] reactor.core.publisher.MonoJust.subscribe
  [35] reactor.core.publisher.MonoDefer.subscribe
  [36] reactor.core.publisher.MonoFlatMap.subscribe
  [37] reactor.core.publisher.MonoFlatMapMany.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.FluxPeek.subscribe
  [40] reactor.core.publisher.Flux.blockLast
  [41] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.rsocket.buffer.Tuple2ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.flags
  [ 3] io.rsocket.frame.FrameHeaderFlyweight.hasMetadata
  [ 4] io.rsocket.frame.RequestFlyweight.metadata
  [ 5] io.rsocket.frame.RequestResponseFrameFlyweight.metadata
  [ 6] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 7] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 8] io.rsocket.RSocketServer.handleFrame
  [ 9] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [10] reactor.core.publisher.LambdaSubscriber.onNext
  [11] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [15] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [16] reactor.core.publisher.UnicastProcessor.drainRegular
  [17] reactor.core.publisher.UnicastProcessor.drain
  [18] reactor.core.publisher.UnicastProcessor.onNext
  [19] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [20] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [22] io.rsocket.internal.UnboundedProcessor.drainRegular
  [23] io.rsocket.internal.UnboundedProcessor.drain
  [24] io.rsocket.internal.UnboundedProcessor.onNext
  [25] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [26] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [27] reactor.core.publisher.MonoDefer.subscribe
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoPeekFuseable.subscribe
  [31] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [32] reactor.core.publisher.Mono.subscribe
  [33] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [34] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [35] reactor.core.publisher.FluxRange$RangeSubscription.request
  [36] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [37] reactor.core.publisher.FluxRange.subscribe
  [38] reactor.core.publisher.FluxFlatMap.subscribe
  [39] reactor.core.publisher.Flux.subscribe
  [40] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [41] reactor.core.publisher.Operators$MonoSubscriber.complete
  [42] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [43] reactor.core.publisher.Operators$MonoSubscriber.complete
  [44] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [45] reactor.core.publisher.MonoIgnoreThen.subscribe
  [46] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [47] reactor.core.publisher.Operators$ScalarSubscription.request
  [48] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [49] reactor.core.publisher.MonoJust.subscribe
  [50] reactor.core.publisher.MonoDefer.subscribe
  [51] reactor.core.publisher.MonoFlatMap.subscribe
  [52] reactor.core.publisher.MonoFlatMapMany.subscribe
  [53] reactor.core.publisher.FluxPeek.subscribe
  [54] reactor.core.publisher.FluxPeek.subscribe
  [55] reactor.core.publisher.Flux.blockLast
  [56] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.netty.util.internal.PlatformDependent0.getInt
  [ 1] io.rsocket.buffer.Tuple2ByteBuf.slice
  [ 2] io.netty.buffer.AbstractByteBuf.readSlice
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 4] io.rsocket.frame.RequestFlyweight.data
  [ 5] io.rsocket.frame.PayloadFrameFlyweight.data
  [ 6] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 7] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 8] io.rsocket.RSocketClient.handleFrame
  [ 9] io.rsocket.RSocketClient.handleIncomingFrames
  [10] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [11] reactor.core.publisher.LambdaSubscriber.onNext
  [12] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [14] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [16] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [17] reactor.core.publisher.UnicastProcessor.drainRegular
  [18] reactor.core.publisher.UnicastProcessor.drain
  [19] reactor.core.publisher.UnicastProcessor.onNext
  [20] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [21] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [23] io.rsocket.internal.UnboundedProcessor.drainRegular
  [24] io.rsocket.internal.UnboundedProcessor.drain
  [25] io.rsocket.internal.UnboundedProcessor.onNext
  [26] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [27] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [28] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [29] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [30] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [31] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [32] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [33] reactor.core.publisher.Operators$ScalarSubscription.request
  [34] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [36] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [37] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [38] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [39] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [40] reactor.core.publisher.MonoJust.subscribe
  [41] reactor.core.publisher.MonoPeekFuseable.subscribe
  [42] reactor.core.publisher.MonoMapFuseable.subscribe
  [43] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [44] reactor.core.publisher.MonoDoFinally.subscribe
  [45] reactor.core.publisher.Mono.subscribe
  [46] reactor.core.publisher.Mono.subscribeWith
  [47] reactor.core.publisher.Mono.subscribe
  [48] reactor.core.publisher.Mono.subscribe
  [49] reactor.core.publisher.Mono.subscribe
  [50] io.rsocket.RSocketServer.handleRequestResponse
  [51] io.rsocket.RSocketServer.handleFrame
  [52] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [53] reactor.core.publisher.LambdaSubscriber.onNext
  [54] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [55] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [56] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [57] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [58] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [59] reactor.core.publisher.UnicastProcessor.drainRegular
  [60] reactor.core.publisher.UnicastProcessor.drain
  [61] reactor.core.publisher.UnicastProcessor.onNext
  [62] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [63] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [64] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [65] io.rsocket.internal.UnboundedProcessor.drainRegular
  [66] io.rsocket.internal.UnboundedProcessor.drain
  [67] io.rsocket.internal.UnboundedProcessor.onNext
  [68] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [69] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [70] reactor.core.publisher.MonoDefer.subscribe
  [71] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [72] reactor.core.publisher.MonoIgnoreThen.subscribe
  [73] reactor.core.publisher.MonoPeekFuseable.subscribe
  [74] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [75] reactor.core.publisher.Mono.subscribe
  [76] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [77] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [78] reactor.core.publisher.FluxRange$RangeSubscription.request
  [79] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [80] reactor.core.publisher.FluxRange.subscribe
  [81] reactor.core.publisher.FluxFlatMap.subscribe
  [82] reactor.core.publisher.Flux.subscribe
  [83] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [84] reactor.core.publisher.Operators$MonoSubscriber.complete
  [85] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [86] reactor.core.publisher.Operators$MonoSubscriber.complete
  [87] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [88] reactor.core.publisher.MonoIgnoreThen.subscribe
  [89] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [90] reactor.core.publisher.Operators$ScalarSubscription.request
  [91] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [92] reactor.core.publisher.MonoJust.subscribe
  [93] reactor.core.publisher.MonoDefer.subscribe
  [94] reactor.core.publisher.MonoFlatMap.subscribe
  [95] reactor.core.publisher.MonoFlatMapMany.subscribe
  [96] reactor.core.publisher.FluxPeek.subscribe
  [97] reactor.core.publisher.FluxPeek.subscribe
  [98] reactor.core.publisher.Flux.blockLast
  [99] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.rsocket.buffer.Tuple2ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.frameType
  [ 3] io.rsocket.RSocketClient.handleIncomingFrames
  [ 4] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 5] reactor.core.publisher.LambdaSubscriber.onNext
  [ 6] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [10] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [11] reactor.core.publisher.UnicastProcessor.drainRegular
  [12] reactor.core.publisher.UnicastProcessor.drain
  [13] reactor.core.publisher.UnicastProcessor.onNext
  [14] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [15] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [17] io.rsocket.internal.UnboundedProcessor.drainRegular
  [18] io.rsocket.internal.UnboundedProcessor.drain
  [19] io.rsocket.internal.UnboundedProcessor.onNext
  [20] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [21] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [22] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [23] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [24] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [25] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [27] reactor.core.publisher.Operators$ScalarSubscription.request
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [29] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [30] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [31] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [32] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [33] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [34] reactor.core.publisher.MonoJust.subscribe
  [35] reactor.core.publisher.MonoPeekFuseable.subscribe
  [36] reactor.core.publisher.MonoMapFuseable.subscribe
  [37] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [38] reactor.core.publisher.MonoDoFinally.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] reactor.core.publisher.Mono.subscribeWith
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.Mono.subscribe
  [44] io.rsocket.RSocketServer.handleRequestResponse
  [45] io.rsocket.RSocketServer.handleFrame
  [46] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [47] reactor.core.publisher.LambdaSubscriber.onNext
  [48] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [49] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [50] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [51] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [52] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [53] reactor.core.publisher.UnicastProcessor.drainRegular
  [54] reactor.core.publisher.UnicastProcessor.drain
  [55] reactor.core.publisher.UnicastProcessor.onNext
  [56] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [57] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [58] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [59] io.rsocket.internal.UnboundedProcessor.drainRegular
  [60] io.rsocket.internal.UnboundedProcessor.drain
  [61] io.rsocket.internal.UnboundedProcessor.onNext
  [62] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [63] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [64] reactor.core.publisher.MonoDefer.subscribe
  [65] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [66] reactor.core.publisher.MonoIgnoreThen.subscribe
  [67] reactor.core.publisher.MonoPeekFuseable.subscribe
  [68] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [69] reactor.core.publisher.Mono.subscribe
  [70] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [71] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [72] reactor.core.publisher.FluxRange$RangeSubscription.request
  [73] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [74] reactor.core.publisher.FluxRange.subscribe
  [75] reactor.core.publisher.FluxFlatMap.subscribe
  [76] reactor.core.publisher.Flux.subscribe
  [77] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [78] reactor.core.publisher.Operators$MonoSubscriber.complete
  [79] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [80] reactor.core.publisher.Operators$MonoSubscriber.complete
  [81] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [82] reactor.core.publisher.MonoIgnoreThen.subscribe
  [83] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [84] reactor.core.publisher.Operators$ScalarSubscription.request
  [85] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [86] reactor.core.publisher.MonoJust.subscribe
  [87] reactor.core.publisher.MonoDefer.subscribe
  [88] reactor.core.publisher.MonoFlatMap.subscribe
  [89] reactor.core.publisher.MonoFlatMapMany.subscribe
  [90] reactor.core.publisher.FluxPeek.subscribe
  [91] reactor.core.publisher.FluxPeek.subscribe
  [92] reactor.core.publisher.Flux.blockLast
  [93] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.netty.buffer.UnsafeByteBufUtil.setInt
  [ 1] io.netty.buffer.PooledUnsafeDirectByteBuf._setInt
  [ 2] io.netty.buffer.AbstractByteBuf.writeInt
  [ 3] io.rsocket.frame.FrameHeaderFlyweight.encode
  [ 4] io.rsocket.frame.RequestFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 7] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 8] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 9] reactor.core.publisher.MonoDefer.subscribe
  [10] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [11] reactor.core.publisher.MonoIgnoreThen.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [19] reactor.core.publisher.FluxRange.subscribe
  [20] reactor.core.publisher.FluxFlatMap.subscribe
  [21] reactor.core.publisher.Flux.subscribe
  [22] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.Operators$ScalarSubscription.request
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [31] reactor.core.publisher.MonoJust.subscribe
  [32] reactor.core.publisher.MonoDefer.subscribe
  [33] reactor.core.publisher.MonoFlatMap.subscribe
  [34] reactor.core.publisher.MonoFlatMapMany.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.Flux.blockLast
  [38] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.rsocket.buffer.Tuple2ByteBuf._getInt
  [ 1] io.netty.buffer.AbstractByteBuf.resetReaderIndex
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.streamId
  [ 3] io.rsocket.internal.ClientServerInputMultiplexer.lambda$new$0
  [ 4] io.rsocket.internal.ClientServerInputMultiplexer$$Lambda$38.556529265.apply
  [ 5] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 6] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 7] reactor.core.publisher.UnicastProcessor.drain
  [ 8] reactor.core.publisher.UnicastProcessor.onNext
  [ 9] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [10] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [11] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [12] io.rsocket.internal.UnboundedProcessor.drainRegular
  [13] io.rsocket.internal.UnboundedProcessor.drain
  [14] io.rsocket.internal.UnboundedProcessor.onNext
  [15] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [16] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [17] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [18] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [19] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [20] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [21] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [22] reactor.core.publisher.Operators$ScalarSubscription.request
  [23] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [24] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [25] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [26] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [27] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [29] reactor.core.publisher.MonoJust.subscribe
  [30] reactor.core.publisher.MonoPeekFuseable.subscribe
  [31] reactor.core.publisher.MonoMapFuseable.subscribe
  [32] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [33] reactor.core.publisher.MonoDoFinally.subscribe
  [34] reactor.core.publisher.Mono.subscribe
  [35] reactor.core.publisher.Mono.subscribeWith
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] reactor.core.publisher.Mono.subscribe
  [39] io.rsocket.RSocketServer.handleRequestResponse
  [40] io.rsocket.RSocketServer.handleFrame
  [41] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [42] reactor.core.publisher.LambdaSubscriber.onNext
  [43] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [46] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [47] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [48] reactor.core.publisher.UnicastProcessor.drainRegular
  [49] reactor.core.publisher.UnicastProcessor.drain
  [50] reactor.core.publisher.UnicastProcessor.onNext
  [51] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [52] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [53] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [54] io.rsocket.internal.UnboundedProcessor.drainRegular
  [55] io.rsocket.internal.UnboundedProcessor.drain
  [56] io.rsocket.internal.UnboundedProcessor.onNext
  [57] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [58] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [59] reactor.core.publisher.MonoDefer.subscribe
  [60] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [61] reactor.core.publisher.MonoIgnoreThen.subscribe
  [62] reactor.core.publisher.MonoPeekFuseable.subscribe
  [63] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [64] reactor.core.publisher.Mono.subscribe
  [65] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [66] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [67] reactor.core.publisher.FluxRange$RangeSubscription.request
  [68] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [69] reactor.core.publisher.FluxRange.subscribe
  [70] reactor.core.publisher.FluxFlatMap.subscribe
  [71] reactor.core.publisher.Flux.subscribe
  [72] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [73] reactor.core.publisher.Operators$MonoSubscriber.complete
  [74] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [75] reactor.core.publisher.Operators$MonoSubscriber.complete
  [76] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [77] reactor.core.publisher.MonoIgnoreThen.subscribe
  [78] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [79] reactor.core.publisher.Operators$ScalarSubscription.request
  [80] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [81] reactor.core.publisher.MonoJust.subscribe
  [82] reactor.core.publisher.MonoDefer.subscribe
  [83] reactor.core.publisher.MonoFlatMap.subscribe
  [84] reactor.core.publisher.MonoFlatMapMany.subscribe
  [85] reactor.core.publisher.FluxPeek.subscribe
  [86] reactor.core.publisher.FluxPeek.subscribe
  [87] reactor.core.publisher.Flux.blockLast
  [88] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 2] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.decrementAndGet
  [ 3] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [ 4] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [ 5] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [ 6] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 7] reactor.core.publisher.MonoJust.subscribe
  [ 8] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 9] reactor.core.publisher.MonoMapFuseable.subscribe
  [10] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [11] reactor.core.publisher.MonoDoFinally.subscribe
  [12] reactor.core.publisher.Mono.subscribe
  [13] reactor.core.publisher.Mono.subscribeWith
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] io.rsocket.RSocketServer.handleRequestResponse
  [18] io.rsocket.RSocketServer.handleFrame
  [19] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [20] reactor.core.publisher.LambdaSubscriber.onNext
  [21] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [22] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [23] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [24] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [25] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [26] reactor.core.publisher.UnicastProcessor.drainRegular
  [27] reactor.core.publisher.UnicastProcessor.drain
  [28] reactor.core.publisher.UnicastProcessor.onNext
  [29] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [30] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [32] io.rsocket.internal.UnboundedProcessor.drainRegular
  [33] io.rsocket.internal.UnboundedProcessor.drain
  [34] io.rsocket.internal.UnboundedProcessor.onNext
  [35] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [36] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [37] reactor.core.publisher.MonoDefer.subscribe
  [38] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [39] reactor.core.publisher.MonoIgnoreThen.subscribe
  [40] reactor.core.publisher.MonoPeekFuseable.subscribe
  [41] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [44] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [45] reactor.core.publisher.FluxRange$RangeSubscription.request
  [46] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [47] reactor.core.publisher.FluxRange.subscribe
  [48] reactor.core.publisher.FluxFlatMap.subscribe
  [49] reactor.core.publisher.Flux.subscribe
  [50] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [51] reactor.core.publisher.Operators$MonoSubscriber.complete
  [52] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [53] reactor.core.publisher.Operators$MonoSubscriber.complete
  [54] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [55] reactor.core.publisher.MonoIgnoreThen.subscribe
  [56] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [57] reactor.core.publisher.Operators$ScalarSubscription.request
  [58] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [59] reactor.core.publisher.MonoJust.subscribe
  [60] reactor.core.publisher.MonoDefer.subscribe
  [61] reactor.core.publisher.MonoFlatMap.subscribe
  [62] reactor.core.publisher.MonoFlatMapMany.subscribe
  [63] reactor.core.publisher.FluxPeek.subscribe
  [64] reactor.core.publisher.FluxPeek.subscribe
  [65] reactor.core.publisher.Flux.blockLast
  [66] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.netty.buffer.AbstractByteBuf.ensureWritable0
  [ 1] io.netty.buffer.AbstractByteBuf.writeByte
  [ 2] io.rsocket.frame.DataAndMetadataFlyweight.encodeLength
  [ 3] io.rsocket.frame.DataAndMetadataFlyweight.encode
  [ 4] io.rsocket.frame.RequestFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 7] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 8] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 9] reactor.core.publisher.MonoDefer.subscribe
  [10] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [11] reactor.core.publisher.MonoIgnoreThen.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [19] reactor.core.publisher.FluxRange.subscribe
  [20] reactor.core.publisher.FluxFlatMap.subscribe
  [21] reactor.core.publisher.Flux.subscribe
  [22] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.Operators$ScalarSubscription.request
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [31] reactor.core.publisher.MonoJust.subscribe
  [32] reactor.core.publisher.MonoDefer.subscribe
  [33] reactor.core.publisher.MonoFlatMap.subscribe
  [34] reactor.core.publisher.MonoFlatMapMany.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.Flux.blockLast
  [38] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.netty.buffer.AbstractByteBuf.writerIndex
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 2] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.AbstractByteBuf.slice
  [ 4] io.rsocket.buffer.Tuple2ByteBuf.slice
  [ 5] io.netty.buffer.AbstractByteBuf.readSlice
  [ 6] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 7] io.rsocket.frame.RequestFlyweight.data
  [ 8] io.rsocket.frame.PayloadFrameFlyweight.data
  [ 9] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.RSocketClient.handleFrame
  [12] io.rsocket.RSocketClient.handleIncomingFrames
  [13] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.UnicastProcessor.drainRegular
  [21] reactor.core.publisher.UnicastProcessor.drain
  [22] reactor.core.publisher.UnicastProcessor.onNext
  [23] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [24] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [26] io.rsocket.internal.UnboundedProcessor.drainRegular
  [27] io.rsocket.internal.UnboundedProcessor.drain
  [28] io.rsocket.internal.UnboundedProcessor.onNext
  [29] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [30] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [31] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [32] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [33] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [34] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [35] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [38] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [39] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [40] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [41] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [42] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [43] reactor.core.publisher.MonoJust.subscribe
  [44] reactor.core.publisher.MonoPeekFuseable.subscribe
  [45] reactor.core.publisher.MonoMapFuseable.subscribe
  [46] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [47] reactor.core.publisher.MonoDoFinally.subscribe
  [48] reactor.core.publisher.Mono.subscribe
  [49] reactor.core.publisher.Mono.subscribeWith
  [50] reactor.core.publisher.Mono.subscribe
  [51] reactor.core.publisher.Mono.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] io.rsocket.RSocketServer.handleRequestResponse
  [54] io.rsocket.RSocketServer.handleFrame
  [55] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [56] reactor.core.publisher.LambdaSubscriber.onNext
  [57] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [58] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [59] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [60] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [61] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [62] reactor.core.publisher.UnicastProcessor.drainRegular
  [63] reactor.core.publisher.UnicastProcessor.drain
  [64] reactor.core.publisher.UnicastProcessor.onNext
  [65] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [66] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [67] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [68] io.rsocket.internal.UnboundedProcessor.drainRegular
  [69] io.rsocket.internal.UnboundedProcessor.drain
  [70] io.rsocket.internal.UnboundedProcessor.onNext
  [71] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [72] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [73] reactor.core.publisher.MonoDefer.subscribe
  [74] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [75] reactor.core.publisher.MonoIgnoreThen.subscribe
  [76] reactor.core.publisher.MonoPeekFuseable.subscribe
  [77] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [78] reactor.core.publisher.Mono.subscribe
  [79] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [80] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [81] reactor.core.publisher.FluxRange$RangeSubscription.request
  [82] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [83] reactor.core.publisher.FluxRange.subscribe
  [84] reactor.core.publisher.FluxFlatMap.subscribe
  [85] reactor.core.publisher.Flux.subscribe
  [86] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [87] reactor.core.publisher.Operators$MonoSubscriber.complete
  [88] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [89] reactor.core.publisher.Operators$MonoSubscriber.complete
  [90] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [91] reactor.core.publisher.MonoIgnoreThen.subscribe
  [92] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [93] reactor.core.publisher.Operators$ScalarSubscription.request
  [94] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [95] reactor.core.publisher.MonoJust.subscribe
  [96] reactor.core.publisher.MonoDefer.subscribe
  [97] reactor.core.publisher.MonoFlatMap.subscribe
  [98] reactor.core.publisher.MonoFlatMapMany.subscribe
  [99] reactor.core.publisher.FluxPeek.subscribe
  [100] reactor.core.publisher.FluxPeek.subscribe
  [101] reactor.core.publisher.Flux.blockLast
  [102] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceArray.checkedByteOffset
  [ 1] java.util.concurrent.atomic.AtomicReferenceArray.lazySet
  [ 2] reactor.util.concurrent.SpscLinkedArrayQueue.offer
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [16] reactor.core.publisher.MonoDefer.subscribe
  [17] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [18] reactor.core.publisher.MonoIgnoreThen.subscribe
  [19] reactor.core.publisher.MonoPeekFuseable.subscribe
  [20] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [21] reactor.core.publisher.Mono.subscribe
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [24] reactor.core.publisher.FluxRange$RangeSubscription.request
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [26] reactor.core.publisher.FluxRange.subscribe
  [27] reactor.core.publisher.FluxFlatMap.subscribe
  [28] reactor.core.publisher.Flux.subscribe
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [34] reactor.core.publisher.MonoIgnoreThen.subscribe
  [35] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.MonoJust.subscribe
  [39] reactor.core.publisher.MonoDefer.subscribe
  [40] reactor.core.publisher.MonoFlatMap.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.Flux.blockLast
  [45] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] reactor.core.publisher.UnicastProcessor.request
  [ 1] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 2] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [16] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [17] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [18] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [19] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [21] reactor.core.publisher.Operators$ScalarSubscription.request
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [23] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [24] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [25] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [26] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [27] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoPeekFuseable.subscribe
  [30] reactor.core.publisher.MonoMapFuseable.subscribe
  [31] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [32] reactor.core.publisher.MonoDoFinally.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribeWith
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] io.rsocket.RSocketServer.handleRequestResponse
  [39] io.rsocket.RSocketServer.handleFrame
  [40] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [41] reactor.core.publisher.LambdaSubscriber.onNext
  [42] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [46] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [47] reactor.core.publisher.UnicastProcessor.drainRegular
  [48] reactor.core.publisher.UnicastProcessor.drain
  [49] reactor.core.publisher.UnicastProcessor.onNext
  [50] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [51] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [52] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [53] io.rsocket.internal.UnboundedProcessor.drainRegular
  [54] io.rsocket.internal.UnboundedProcessor.drain
  [55] io.rsocket.internal.UnboundedProcessor.onNext
  [56] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [57] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [58] reactor.core.publisher.MonoDefer.subscribe
  [59] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [60] reactor.core.publisher.MonoIgnoreThen.subscribe
  [61] reactor.core.publisher.MonoPeekFuseable.subscribe
  [62] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [63] reactor.core.publisher.Mono.subscribe
  [64] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [65] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [66] reactor.core.publisher.FluxRange$RangeSubscription.request
  [67] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [68] reactor.core.publisher.FluxRange.subscribe
  [69] reactor.core.publisher.FluxFlatMap.subscribe
  [70] reactor.core.publisher.Flux.subscribe
  [71] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [72] reactor.core.publisher.Operators$MonoSubscriber.complete
  [73] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [74] reactor.core.publisher.Operators$MonoSubscriber.complete
  [75] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [76] reactor.core.publisher.MonoIgnoreThen.subscribe
  [77] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [78] reactor.core.publisher.Operators$ScalarSubscription.request
  [79] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [80] reactor.core.publisher.MonoJust.subscribe
  [81] reactor.core.publisher.MonoDefer.subscribe
  [82] reactor.core.publisher.MonoFlatMap.subscribe
  [83] reactor.core.publisher.MonoFlatMapMany.subscribe
  [84] reactor.core.publisher.FluxPeek.subscribe
  [85] reactor.core.publisher.FluxPeek.subscribe
  [86] reactor.core.publisher.Flux.blockLast
  [87] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.rsocket.test.PingClient$$Lambda$63.932285561.accept
  [ 1] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 2] io.rsocket.internal.UnboundedProcessor.drainRegular
  [ 3] io.rsocket.internal.UnboundedProcessor.drain
  [ 4] io.rsocket.internal.UnboundedProcessor.onNext
  [ 5] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 6] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [ 7] reactor.core.publisher.MonoDefer.subscribe
  [ 8] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 9] reactor.core.publisher.MonoIgnoreThen.subscribe
  [10] reactor.core.publisher.MonoPeekFuseable.subscribe
  [11] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [12] reactor.core.publisher.Mono.subscribe
  [13] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [14] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [15] reactor.core.publisher.FluxRange$RangeSubscription.request
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [17] reactor.core.publisher.FluxRange.subscribe
  [18] reactor.core.publisher.FluxFlatMap.subscribe
  [19] reactor.core.publisher.Flux.subscribe
  [20] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [21] reactor.core.publisher.Operators$MonoSubscriber.complete
  [22] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [25] reactor.core.publisher.MonoIgnoreThen.subscribe
  [26] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [27] reactor.core.publisher.Operators$ScalarSubscription.request
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [29] reactor.core.publisher.MonoJust.subscribe
  [30] reactor.core.publisher.MonoDefer.subscribe
  [31] reactor.core.publisher.MonoFlatMap.subscribe
  [32] reactor.core.publisher.MonoFlatMapMany.subscribe
  [33] reactor.core.publisher.FluxPeek.subscribe
  [34] reactor.core.publisher.FluxPeek.subscribe
  [35] reactor.core.publisher.Flux.blockLast
  [36] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] itable stub
  [ 1] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 2] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 3] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 4] reactor.core.publisher.MonoProcessor.subscribe
  [ 5] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 6] reactor.core.publisher.MonoPeek.subscribe
  [ 7] reactor.core.publisher.MonoDoFinally.subscribe
  [ 8] reactor.core.publisher.MonoDefer.subscribe
  [ 9] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [10] reactor.core.publisher.MonoIgnoreThen.subscribe
  [11] reactor.core.publisher.MonoPeekFuseable.subscribe
  [12] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [13] reactor.core.publisher.Mono.subscribe
  [14] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [15] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [16] reactor.core.publisher.FluxRange$RangeSubscription.request
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [18] reactor.core.publisher.FluxRange.subscribe
  [19] reactor.core.publisher.FluxFlatMap.subscribe
  [20] reactor.core.publisher.Flux.subscribe
  [21] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [24] reactor.core.publisher.Operators$MonoSubscriber.complete
  [25] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [26] reactor.core.publisher.MonoIgnoreThen.subscribe
  [27] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [28] reactor.core.publisher.Operators$ScalarSubscription.request
  [29] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [30] reactor.core.publisher.MonoJust.subscribe
  [31] reactor.core.publisher.MonoDefer.subscribe
  [32] reactor.core.publisher.MonoFlatMap.subscribe
  [33] reactor.core.publisher.MonoFlatMapMany.subscribe
  [34] reactor.core.publisher.FluxPeek.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.Flux.blockLast
  [37] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] io.netty.buffer.WrappedByteBuf.getInt
  [ 1] io.rsocket.buffer.Tuple2ByteBuf._getInt
  [ 2] io.netty.buffer.AbstractByteBuf.readInt
  [ 3] io.rsocket.frame.FrameHeaderFlyweight.streamId
  [ 4] io.rsocket.RSocketServer.handleFrame
  [ 5] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 6] reactor.core.publisher.LambdaSubscriber.onNext
  [ 7] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [11] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [12] reactor.core.publisher.UnicastProcessor.drainRegular
  [13] reactor.core.publisher.UnicastProcessor.drain
  [14] reactor.core.publisher.UnicastProcessor.onNext
  [15] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [16] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [17] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [18] io.rsocket.internal.UnboundedProcessor.drainRegular
  [19] io.rsocket.internal.UnboundedProcessor.drain
  [20] io.rsocket.internal.UnboundedProcessor.onNext
  [21] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [22] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [23] reactor.core.publisher.MonoDefer.subscribe
  [24] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [25] reactor.core.publisher.MonoIgnoreThen.subscribe
  [26] reactor.core.publisher.MonoPeekFuseable.subscribe
  [27] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [28] reactor.core.publisher.Mono.subscribe
  [29] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [30] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [31] reactor.core.publisher.FluxRange$RangeSubscription.request
  [32] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.FluxRange.subscribe
  [34] reactor.core.publisher.FluxFlatMap.subscribe
  [35] reactor.core.publisher.Flux.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [37] reactor.core.publisher.Operators$MonoSubscriber.complete
  [38] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [39] reactor.core.publisher.Operators$MonoSubscriber.complete
  [40] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [41] reactor.core.publisher.MonoIgnoreThen.subscribe
  [42] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [43] reactor.core.publisher.Operators$ScalarSubscription.request
  [44] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [45] reactor.core.publisher.MonoJust.subscribe
  [46] reactor.core.publisher.MonoDefer.subscribe
  [47] reactor.core.publisher.MonoFlatMap.subscribe
  [48] reactor.core.publisher.MonoFlatMapMany.subscribe
  [49] reactor.core.publisher.FluxPeek.subscribe
  [50] reactor.core.publisher.FluxPeek.subscribe
  [51] reactor.core.publisher.Flux.blockLast
  [52] io.rsocket.transport.local.LocalPingPong.main

--- 30000000 ns (0.11%), 3 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 1] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete
  [ 2] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete
  [ 3] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 4] reactor.core.publisher.Operators$ScalarSubscription.request
  [ 5] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [ 6] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [ 7] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [ 8] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [ 9] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [11] reactor.core.publisher.MonoJust.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoMapFuseable.subscribe
  [14] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [15] reactor.core.publisher.MonoDoFinally.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.Mono.subscribeWith
  [18] reactor.core.publisher.Mono.subscribe
  [19] reactor.core.publisher.Mono.subscribe
  [20] reactor.core.publisher.Mono.subscribe
  [21] io.rsocket.RSocketServer.handleRequestResponse
  [22] io.rsocket.RSocketServer.handleFrame
  [23] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [24] reactor.core.publisher.LambdaSubscriber.onNext
  [25] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [26] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [27] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [28] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [29] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [30] reactor.core.publisher.UnicastProcessor.drainRegular
  [31] reactor.core.publisher.UnicastProcessor.drain
  [32] reactor.core.publisher.UnicastProcessor.onNext
  [33] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [34] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [35] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [36] io.rsocket.internal.UnboundedProcessor.drainRegular
  [37] io.rsocket.internal.UnboundedProcessor.drain
  [38] io.rsocket.internal.UnboundedProcessor.onNext
  [39] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [40] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [41] reactor.core.publisher.MonoDefer.subscribe
  [42] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [43] reactor.core.publisher.MonoIgnoreThen.subscribe
  [44] reactor.core.publisher.MonoPeekFuseable.subscribe
  [45] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [46] reactor.core.publisher.Mono.subscribe
  [47] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [48] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [49] reactor.core.publisher.FluxRange$RangeSubscription.request
  [50] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [51] reactor.core.publisher.FluxRange.subscribe
  [52] reactor.core.publisher.FluxFlatMap.subscribe
  [53] reactor.core.publisher.Flux.subscribe
  [54] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [55] reactor.core.publisher.Operators$MonoSubscriber.complete
  [56] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [57] reactor.core.publisher.Operators$MonoSubscriber.complete
  [58] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [59] reactor.core.publisher.MonoIgnoreThen.subscribe
  [60] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [61] reactor.core.publisher.Operators$ScalarSubscription.request
  [62] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [63] reactor.core.publisher.MonoJust.subscribe
  [64] reactor.core.publisher.MonoDefer.subscribe
  [65] reactor.core.publisher.MonoFlatMap.subscribe
  [66] reactor.core.publisher.MonoFlatMapMany.subscribe
  [67] reactor.core.publisher.FluxPeek.subscribe
  [68] reactor.core.publisher.FluxPeek.subscribe
  [69] reactor.core.publisher.Flux.blockLast
  [70] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] itable stub
  [ 1] java.util.concurrent.ConcurrentHashMap.get
  [ 2] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 3] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 4] reactor.core.publisher.UnicastProcessor.drain
  [ 5] reactor.core.publisher.UnicastProcessor.onNext
  [ 6] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 7] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [ 8] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 9] reactor.core.publisher.Operators$MonoSubscriber.complete
  [10] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [11] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [12] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [13] reactor.core.publisher.Operators$MonoSubscriber.complete
  [14] reactor.core.publisher.MonoProcessor.subscribe
  [15] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [16] reactor.core.publisher.MonoPeek.subscribe
  [17] reactor.core.publisher.MonoDoFinally.subscribe
  [18] reactor.core.publisher.MonoDefer.subscribe
  [19] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [20] reactor.core.publisher.MonoIgnoreThen.subscribe
  [21] reactor.core.publisher.MonoPeekFuseable.subscribe
  [22] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [25] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [26] reactor.core.publisher.FluxRange$RangeSubscription.request
  [27] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.FluxRange.subscribe
  [29] reactor.core.publisher.FluxFlatMap.subscribe
  [30] reactor.core.publisher.Flux.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [34] reactor.core.publisher.Operators$MonoSubscriber.complete
  [35] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [36] reactor.core.publisher.MonoIgnoreThen.subscribe
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [38] reactor.core.publisher.Operators$ScalarSubscription.request
  [39] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [40] reactor.core.publisher.MonoJust.subscribe
  [41] reactor.core.publisher.MonoDefer.subscribe
  [42] reactor.core.publisher.MonoFlatMap.subscribe
  [43] reactor.core.publisher.MonoFlatMapMany.subscribe
  [44] reactor.core.publisher.FluxPeek.subscribe
  [45] reactor.core.publisher.FluxPeek.subscribe
  [46] reactor.core.publisher.Flux.blockLast
  [47] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
  [ 1] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete
  [ 2] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete
  [ 3] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete
  [ 4] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 5] reactor.core.publisher.MonoProcessor.subscribe
  [ 6] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 7] reactor.core.publisher.MonoPeek.subscribe
  [ 8] reactor.core.publisher.MonoDoFinally.subscribe
  [ 9] reactor.core.publisher.MonoDefer.subscribe
  [10] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [11] reactor.core.publisher.MonoIgnoreThen.subscribe
  [12] reactor.core.publisher.MonoPeekFuseable.subscribe
  [13] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [14] reactor.core.publisher.Mono.subscribe
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [16] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [17] reactor.core.publisher.FluxRange$RangeSubscription.request
  [18] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [19] reactor.core.publisher.FluxRange.subscribe
  [20] reactor.core.publisher.FluxFlatMap.subscribe
  [21] reactor.core.publisher.Flux.subscribe
  [22] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [27] reactor.core.publisher.MonoIgnoreThen.subscribe
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.Operators$ScalarSubscription.request
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [31] reactor.core.publisher.MonoJust.subscribe
  [32] reactor.core.publisher.MonoDefer.subscribe
  [33] reactor.core.publisher.MonoFlatMap.subscribe
  [34] reactor.core.publisher.MonoFlatMapMany.subscribe
  [35] reactor.core.publisher.FluxPeek.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.Flux.blockLast
  [38] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] reactor.core.publisher.FluxPeek$PeekSubscriber.currentContext
  [ 1] reactor.core.publisher.FluxPeek$PeekSubscriber.currentContext
  [ 2] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.currentContext
  [ 3] reactor.core.publisher.InnerOperator.currentContext
  [ 4] reactor.core.publisher.FluxFlatMap$FlatMapInner.currentContext
  [ 5] reactor.core.publisher.InnerOperator.currentContext
  [ 6] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.currentContext
  [ 7] reactor.core.publisher.InnerOperator.currentContext
  [ 8] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.currentContext
  [ 9] reactor.core.publisher.MonoCreate$DefaultMonoSink.<init>
  [10] reactor.core.publisher.MonoCreate.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [13] reactor.core.publisher.MonoIgnoreThen.subscribe
  [14] reactor.core.publisher.MonoPeekFuseable.subscribe
  [15] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [19] reactor.core.publisher.FluxRange$RangeSubscription.request
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.FluxRange.subscribe
  [22] reactor.core.publisher.FluxFlatMap.subscribe
  [23] reactor.core.publisher.Flux.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [27] reactor.core.publisher.Operators$MonoSubscriber.complete
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoFlatMap.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.Flux.blockLast
  [40] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] itable stub
  [ 1] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 2] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 3] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 4] reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit
  [ 5] reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext
  [ 6] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 7] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 8] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 9] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [10] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [11] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [12] reactor.core.publisher.Operators$MonoSubscriber.complete
  [13] reactor.core.publisher.MonoProcessor.subscribe
  [14] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [15] reactor.core.publisher.MonoPeek.subscribe
  [16] reactor.core.publisher.MonoDoFinally.subscribe
  [17] reactor.core.publisher.MonoDefer.subscribe
  [18] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [19] reactor.core.publisher.MonoIgnoreThen.subscribe
  [20] reactor.core.publisher.MonoPeekFuseable.subscribe
  [21] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [24] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [25] reactor.core.publisher.FluxRange$RangeSubscription.request
  [26] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [27] reactor.core.publisher.FluxRange.subscribe
  [28] reactor.core.publisher.FluxFlatMap.subscribe
  [29] reactor.core.publisher.Flux.subscribe
  [30] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [31] reactor.core.publisher.Operators$MonoSubscriber.complete
  [32] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [33] reactor.core.publisher.Operators$MonoSubscriber.complete
  [34] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [35] reactor.core.publisher.MonoIgnoreThen.subscribe
  [36] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [37] reactor.core.publisher.Operators$ScalarSubscription.request
  [38] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [39] reactor.core.publisher.MonoJust.subscribe
  [40] reactor.core.publisher.MonoDefer.subscribe
  [41] reactor.core.publisher.MonoFlatMap.subscribe
  [42] reactor.core.publisher.MonoFlatMapMany.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.FluxPeek.subscribe
  [45] reactor.core.publisher.Flux.blockLast
  [46] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] itable stub
  [ 1] io.netty.util.ReferenceCountUtil.release
  [ 2] io.netty.util.ReferenceCountUtil.safeRelease
  [ 3] io.rsocket.buffer.Tuple2ByteBuf.deallocate
  [ 4] io.netty.buffer.AbstractReferenceCountedByteBuf.release0
  [ 5] io.netty.buffer.AbstractReferenceCountedByteBuf.release
  [ 6] io.rsocket.RSocketClient.handleIncomingFrames
  [ 7] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 8] reactor.core.publisher.LambdaSubscriber.onNext
  [ 9] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [10] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [13] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [14] reactor.core.publisher.UnicastProcessor.drainRegular
  [15] reactor.core.publisher.UnicastProcessor.drain
  [16] reactor.core.publisher.UnicastProcessor.onNext
  [17] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [18] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [19] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [20] io.rsocket.internal.UnboundedProcessor.drainRegular
  [21] io.rsocket.internal.UnboundedProcessor.drain
  [22] io.rsocket.internal.UnboundedProcessor.onNext
  [23] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [24] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [25] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [26] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [27] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [28] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [29] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [30] reactor.core.publisher.Operators$ScalarSubscription.request
  [31] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [32] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [33] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [34] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [37] reactor.core.publisher.MonoJust.subscribe
  [38] reactor.core.publisher.MonoPeekFuseable.subscribe
  [39] reactor.core.publisher.MonoMapFuseable.subscribe
  [40] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [41] reactor.core.publisher.MonoDoFinally.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.Mono.subscribeWith
  [44] reactor.core.publisher.Mono.subscribe
  [45] reactor.core.publisher.Mono.subscribe
  [46] reactor.core.publisher.Mono.subscribe
  [47] io.rsocket.RSocketServer.handleRequestResponse
  [48] io.rsocket.RSocketServer.handleFrame
  [49] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [50] reactor.core.publisher.LambdaSubscriber.onNext
  [51] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [52] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [53] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [54] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [55] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [56] reactor.core.publisher.UnicastProcessor.drainRegular
  [57] reactor.core.publisher.UnicastProcessor.drain
  [58] reactor.core.publisher.UnicastProcessor.onNext
  [59] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [60] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [61] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [62] io.rsocket.internal.UnboundedProcessor.drainRegular
  [63] io.rsocket.internal.UnboundedProcessor.drain
  [64] io.rsocket.internal.UnboundedProcessor.onNext
  [65] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [66] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [67] reactor.core.publisher.MonoDefer.subscribe
  [68] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [69] reactor.core.publisher.MonoIgnoreThen.subscribe
  [70] reactor.core.publisher.MonoPeekFuseable.subscribe
  [71] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [72] reactor.core.publisher.Mono.subscribe
  [73] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [74] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [75] reactor.core.publisher.FluxRange$RangeSubscription.request
  [76] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [77] reactor.core.publisher.FluxRange.subscribe
  [78] reactor.core.publisher.FluxFlatMap.subscribe
  [79] reactor.core.publisher.Flux.subscribe
  [80] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [81] reactor.core.publisher.Operators$MonoSubscriber.complete
  [82] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [83] reactor.core.publisher.Operators$MonoSubscriber.complete
  [84] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [85] reactor.core.publisher.MonoIgnoreThen.subscribe
  [86] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [87] reactor.core.publisher.Operators$ScalarSubscription.request
  [88] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [89] reactor.core.publisher.MonoJust.subscribe
  [90] reactor.core.publisher.MonoDefer.subscribe
  [91] reactor.core.publisher.MonoFlatMap.subscribe
  [92] reactor.core.publisher.MonoFlatMapMany.subscribe
  [93] reactor.core.publisher.FluxPeek.subscribe
  [94] reactor.core.publisher.FluxPeek.subscribe
  [95] reactor.core.publisher.Flux.blockLast
  [96] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onSubscribe
  [ 1] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 2] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 3] reactor.core.publisher.MonoProcessor.subscribe
  [ 4] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 5] reactor.core.publisher.MonoPeek.subscribe
  [ 6] reactor.core.publisher.MonoDoFinally.subscribe
  [ 7] reactor.core.publisher.MonoDefer.subscribe
  [ 8] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 9] reactor.core.publisher.MonoIgnoreThen.subscribe
  [10] reactor.core.publisher.MonoPeekFuseable.subscribe
  [11] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [12] reactor.core.publisher.Mono.subscribe
  [13] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [14] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [15] reactor.core.publisher.FluxRange$RangeSubscription.request
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [17] reactor.core.publisher.FluxRange.subscribe
  [18] reactor.core.publisher.FluxFlatMap.subscribe
  [19] reactor.core.publisher.Flux.subscribe
  [20] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [21] reactor.core.publisher.Operators$MonoSubscriber.complete
  [22] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [25] reactor.core.publisher.MonoIgnoreThen.subscribe
  [26] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [27] reactor.core.publisher.Operators$ScalarSubscription.request
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [29] reactor.core.publisher.MonoJust.subscribe
  [30] reactor.core.publisher.MonoDefer.subscribe
  [31] reactor.core.publisher.MonoFlatMap.subscribe
  [32] reactor.core.publisher.MonoFlatMapMany.subscribe
  [33] reactor.core.publisher.FluxPeek.subscribe
  [34] reactor.core.publisher.FluxPeek.subscribe
  [35] reactor.core.publisher.Flux.blockLast
  [36] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.rsocket.buffer.Tuple3ByteBuf._getInt
  [ 1] io.netty.buffer.AbstractByteBuf.readInt
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.streamId
  [ 3] io.rsocket.RSocketServer.handleFrame
  [ 4] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 5] reactor.core.publisher.LambdaSubscriber.onNext
  [ 6] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [10] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [11] reactor.core.publisher.UnicastProcessor.drainRegular
  [12] reactor.core.publisher.UnicastProcessor.drain
  [13] reactor.core.publisher.UnicastProcessor.onNext
  [14] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [15] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [17] io.rsocket.internal.UnboundedProcessor.drainRegular
  [18] io.rsocket.internal.UnboundedProcessor.drain
  [19] io.rsocket.internal.UnboundedProcessor.onNext
  [20] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [21] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [22] reactor.core.publisher.MonoDefer.subscribe
  [23] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [24] reactor.core.publisher.MonoIgnoreThen.subscribe
  [25] reactor.core.publisher.MonoPeekFuseable.subscribe
  [26] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [30] reactor.core.publisher.FluxRange$RangeSubscription.request
  [31] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [32] reactor.core.publisher.FluxRange.subscribe
  [33] reactor.core.publisher.FluxFlatMap.subscribe
  [34] reactor.core.publisher.Flux.subscribe
  [35] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [36] reactor.core.publisher.Operators$MonoSubscriber.complete
  [37] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [38] reactor.core.publisher.Operators$MonoSubscriber.complete
  [39] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [40] reactor.core.publisher.MonoIgnoreThen.subscribe
  [41] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [42] reactor.core.publisher.Operators$ScalarSubscription.request
  [43] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [44] reactor.core.publisher.MonoJust.subscribe
  [45] reactor.core.publisher.MonoDefer.subscribe
  [46] reactor.core.publisher.MonoFlatMap.subscribe
  [47] reactor.core.publisher.MonoFlatMapMany.subscribe
  [48] reactor.core.publisher.FluxPeek.subscribe
  [49] reactor.core.publisher.FluxPeek.subscribe
  [50] reactor.core.publisher.Flux.blockLast
  [51] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] reactor.core.publisher.BlockingLastSubscriber.onNext
  [ 1] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 2] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 3] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 4] reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit
  [ 5] reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext
  [ 6] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 7] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 8] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 9] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [10] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [11] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [12] reactor.core.publisher.Operators$MonoSubscriber.complete
  [13] reactor.core.publisher.MonoProcessor.subscribe
  [14] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [15] reactor.core.publisher.MonoPeek.subscribe
  [16] reactor.core.publisher.MonoDoFinally.subscribe
  [17] reactor.core.publisher.MonoDefer.subscribe
  [18] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [19] reactor.core.publisher.MonoIgnoreThen.subscribe
  [20] reactor.core.publisher.MonoPeekFuseable.subscribe
  [21] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [22] reactor.core.publisher.Mono.subscribe
  [23] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [24] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [25] reactor.core.publisher.FluxRange$RangeSubscription.request
  [26] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [27] reactor.core.publisher.FluxRange.subscribe
  [28] reactor.core.publisher.FluxFlatMap.subscribe
  [29] reactor.core.publisher.Flux.subscribe
  [30] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [31] reactor.core.publisher.Operators$MonoSubscriber.complete
  [32] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [33] reactor.core.publisher.Operators$MonoSubscriber.complete
  [34] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [35] reactor.core.publisher.MonoIgnoreThen.subscribe
  [36] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [37] reactor.core.publisher.Operators$ScalarSubscription.request
  [38] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [39] reactor.core.publisher.MonoJust.subscribe
  [40] reactor.core.publisher.MonoDefer.subscribe
  [41] reactor.core.publisher.MonoFlatMap.subscribe
  [42] reactor.core.publisher.MonoFlatMapMany.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.FluxPeek.subscribe
  [45] reactor.core.publisher.Flux.blockLast
  [46] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] java.lang.Object.hashCode
  [ 1] java.util.concurrent.ConcurrentHashMap.putVal
  [ 2] java.util.concurrent.ConcurrentHashMap.put
  [ 3] io.netty.util.ResourceLeakDetector$DefaultResourceLeak.<init>
  [ 4] io.netty.util.ResourceLeakDetector.track0
  [ 5] io.netty.util.ResourceLeakDetector.track
  [ 6] io.netty.buffer.AbstractByteBufAllocator.toLeakAwareBuffer
  [ 7] io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
  [ 8] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [ 9] io.netty.buffer.AbstractByteBufAllocator.directBuffer
  [10] io.netty.buffer.AbstractByteBufAllocator.buffer
  [11] io.rsocket.frame.FrameHeaderFlyweight.encode
  [12] io.rsocket.frame.RequestFlyweight.encode
  [13] io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
  [14] io.rsocket.RSocketServer.lambda$handleRequestResponse$9
  [15] io.rsocket.RSocketServer$$Lambda$66.1157726741.apply
  [16] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [17] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [18] reactor.core.publisher.Operators$ScalarSubscription.request
  [19] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [20] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [21] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [22] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [23] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [25] reactor.core.publisher.MonoJust.subscribe
  [26] reactor.core.publisher.MonoPeekFuseable.subscribe
  [27] reactor.core.publisher.MonoMapFuseable.subscribe
  [28] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [29] reactor.core.publisher.MonoDoFinally.subscribe
  [30] reactor.core.publisher.Mono.subscribe
  [31] reactor.core.publisher.Mono.subscribeWith
  [32] reactor.core.publisher.Mono.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribe
  [35] io.rsocket.RSocketServer.handleRequestResponse
  [36] io.rsocket.RSocketServer.handleFrame
  [37] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [38] reactor.core.publisher.LambdaSubscriber.onNext
  [39] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [40] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [41] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [42] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [43] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [44] reactor.core.publisher.UnicastProcessor.drainRegular
  [45] reactor.core.publisher.UnicastProcessor.drain
  [46] reactor.core.publisher.UnicastProcessor.onNext
  [47] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [48] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [49] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [50] io.rsocket.internal.UnboundedProcessor.drainRegular
  [51] io.rsocket.internal.UnboundedProcessor.drain
  [52] io.rsocket.internal.UnboundedProcessor.onNext
  [53] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [54] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [55] reactor.core.publisher.MonoDefer.subscribe
  [56] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [57] reactor.core.publisher.MonoIgnoreThen.subscribe
  [58] reactor.core.publisher.MonoPeekFuseable.subscribe
  [59] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [60] reactor.core.publisher.Mono.subscribe
  [61] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [62] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [63] reactor.core.publisher.FluxRange$RangeSubscription.request
  [64] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [65] reactor.core.publisher.FluxRange.subscribe
  [66] reactor.core.publisher.FluxFlatMap.subscribe
  [67] reactor.core.publisher.Flux.subscribe
  [68] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [69] reactor.core.publisher.Operators$MonoSubscriber.complete
  [70] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [71] reactor.core.publisher.Operators$MonoSubscriber.complete
  [72] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [73] reactor.core.publisher.MonoIgnoreThen.subscribe
  [74] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [75] reactor.core.publisher.Operators$ScalarSubscription.request
  [76] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [77] reactor.core.publisher.MonoJust.subscribe
  [78] reactor.core.publisher.MonoDefer.subscribe
  [79] reactor.core.publisher.MonoFlatMap.subscribe
  [80] reactor.core.publisher.MonoFlatMapMany.subscribe
  [81] reactor.core.publisher.FluxPeek.subscribe
  [82] reactor.core.publisher.FluxPeek.subscribe
  [83] reactor.core.publisher.Flux.blockLast
  [84] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] reactor.core.publisher.UnicastProcessor.request
  [ 1] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 2] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [16] reactor.core.publisher.MonoDefer.subscribe
  [17] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [18] reactor.core.publisher.MonoIgnoreThen.subscribe
  [19] reactor.core.publisher.MonoPeekFuseable.subscribe
  [20] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [21] reactor.core.publisher.Mono.subscribe
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [24] reactor.core.publisher.FluxRange$RangeSubscription.request
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [26] reactor.core.publisher.FluxRange.subscribe
  [27] reactor.core.publisher.FluxFlatMap.subscribe
  [28] reactor.core.publisher.Flux.subscribe
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [34] reactor.core.publisher.MonoIgnoreThen.subscribe
  [35] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.MonoJust.subscribe
  [39] reactor.core.publisher.MonoDefer.subscribe
  [40] reactor.core.publisher.MonoFlatMap.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.Flux.blockLast
  [45] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
  [ 1] java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndIncrement
  [ 2] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [16] reactor.core.publisher.MonoDefer.subscribe
  [17] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [18] reactor.core.publisher.MonoIgnoreThen.subscribe
  [19] reactor.core.publisher.MonoPeekFuseable.subscribe
  [20] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [21] reactor.core.publisher.Mono.subscribe
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [24] reactor.core.publisher.FluxRange$RangeSubscription.request
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [26] reactor.core.publisher.FluxRange.subscribe
  [27] reactor.core.publisher.FluxFlatMap.subscribe
  [28] reactor.core.publisher.Flux.subscribe
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [34] reactor.core.publisher.MonoIgnoreThen.subscribe
  [35] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.MonoJust.subscribe
  [39] reactor.core.publisher.MonoDefer.subscribe
  [40] reactor.core.publisher.MonoFlatMap.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.Flux.blockLast
  [45] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [ 1] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 2] reactor.core.publisher.MonoPeekFuseable.subscribe
  [ 3] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [ 4] reactor.core.publisher.Mono.subscribe
  [ 5] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [ 6] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [ 7] reactor.core.publisher.FluxRange$RangeSubscription.request
  [ 8] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [ 9] reactor.core.publisher.FluxRange.subscribe
  [10] reactor.core.publisher.FluxFlatMap.subscribe
  [11] reactor.core.publisher.Flux.subscribe
  [12] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [13] reactor.core.publisher.Operators$MonoSubscriber.complete
  [14] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [15] reactor.core.publisher.Operators$MonoSubscriber.complete
  [16] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [17] reactor.core.publisher.MonoIgnoreThen.subscribe
  [18] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [19] reactor.core.publisher.Operators$ScalarSubscription.request
  [20] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.MonoJust.subscribe
  [22] reactor.core.publisher.MonoDefer.subscribe
  [23] reactor.core.publisher.MonoFlatMap.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany.subscribe
  [25] reactor.core.publisher.FluxPeek.subscribe
  [26] reactor.core.publisher.FluxPeek.subscribe
  [27] reactor.core.publisher.Flux.blockLast
  [28] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.rsocket.buffer.Tuple3ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.frameType
  [ 3] io.rsocket.RSocketClient.handleIncomingFrames
  [ 4] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [ 5] reactor.core.publisher.LambdaSubscriber.onNext
  [ 6] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [10] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [11] reactor.core.publisher.UnicastProcessor.drainRegular
  [12] reactor.core.publisher.UnicastProcessor.drain
  [13] reactor.core.publisher.UnicastProcessor.onNext
  [14] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [15] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [17] io.rsocket.internal.UnboundedProcessor.drainRegular
  [18] io.rsocket.internal.UnboundedProcessor.drain
  [19] io.rsocket.internal.UnboundedProcessor.onNext
  [20] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [21] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [22] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [23] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [24] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [25] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [27] reactor.core.publisher.Operators$ScalarSubscription.request
  [28] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [29] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [30] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [31] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [32] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [33] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [34] reactor.core.publisher.MonoJust.subscribe
  [35] reactor.core.publisher.MonoPeekFuseable.subscribe
  [36] reactor.core.publisher.MonoMapFuseable.subscribe
  [37] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [38] reactor.core.publisher.MonoDoFinally.subscribe
  [39] reactor.core.publisher.Mono.subscribe
  [40] reactor.core.publisher.Mono.subscribeWith
  [41] reactor.core.publisher.Mono.subscribe
  [42] reactor.core.publisher.Mono.subscribe
  [43] reactor.core.publisher.Mono.subscribe
  [44] io.rsocket.RSocketServer.handleRequestResponse
  [45] io.rsocket.RSocketServer.handleFrame
  [46] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [47] reactor.core.publisher.LambdaSubscriber.onNext
  [48] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [49] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [50] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [51] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [52] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [53] reactor.core.publisher.UnicastProcessor.drainRegular
  [54] reactor.core.publisher.UnicastProcessor.drain
  [55] reactor.core.publisher.UnicastProcessor.onNext
  [56] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [57] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [58] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [59] io.rsocket.internal.UnboundedProcessor.drainRegular
  [60] io.rsocket.internal.UnboundedProcessor.drain
  [61] io.rsocket.internal.UnboundedProcessor.onNext
  [62] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [63] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [64] reactor.core.publisher.MonoDefer.subscribe
  [65] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [66] reactor.core.publisher.MonoIgnoreThen.subscribe
  [67] reactor.core.publisher.MonoPeekFuseable.subscribe
  [68] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [69] reactor.core.publisher.Mono.subscribe
  [70] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [71] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [72] reactor.core.publisher.FluxRange$RangeSubscription.request
  [73] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [74] reactor.core.publisher.FluxRange.subscribe
  [75] reactor.core.publisher.FluxFlatMap.subscribe
  [76] reactor.core.publisher.Flux.subscribe
  [77] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [78] reactor.core.publisher.Operators$MonoSubscriber.complete
  [79] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [80] reactor.core.publisher.Operators$MonoSubscriber.complete
  [81] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [82] reactor.core.publisher.MonoIgnoreThen.subscribe
  [83] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [84] reactor.core.publisher.Operators$ScalarSubscription.request
  [85] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [86] reactor.core.publisher.MonoJust.subscribe
  [87] reactor.core.publisher.MonoDefer.subscribe
  [88] reactor.core.publisher.MonoFlatMap.subscribe
  [89] reactor.core.publisher.MonoFlatMapMany.subscribe
  [90] reactor.core.publisher.FluxPeek.subscribe
  [91] reactor.core.publisher.FluxPeek.subscribe
  [92] reactor.core.publisher.Flux.blockLast
  [93] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.buffer.AbstractReferenceCountedByteBuf.internalRefCnt
  [ 1] io.netty.buffer.UnsafeByteBufUtil.setInt
  [ 2] io.netty.buffer.PooledUnsafeDirectByteBuf._setInt
  [ 3] io.netty.buffer.AbstractByteBuf.writeInt
  [ 4] io.rsocket.frame.FrameHeaderFlyweight.encode
  [ 5] io.rsocket.frame.RequestFlyweight.encode
  [ 6] io.rsocket.frame.RequestFlyweight.encode
  [ 7] io.rsocket.frame.RequestResponseFrameFlyweight.encode
  [ 8] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [ 9] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [10] reactor.core.publisher.MonoDefer.subscribe
  [11] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [12] reactor.core.publisher.MonoIgnoreThen.subscribe
  [13] reactor.core.publisher.MonoPeekFuseable.subscribe
  [14] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [15] reactor.core.publisher.Mono.subscribe
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [17] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [18] reactor.core.publisher.FluxRange$RangeSubscription.request
  [19] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [20] reactor.core.publisher.FluxRange.subscribe
  [21] reactor.core.publisher.FluxFlatMap.subscribe
  [22] reactor.core.publisher.Flux.subscribe
  [23] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [24] reactor.core.publisher.Operators$MonoSubscriber.complete
  [25] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [26] reactor.core.publisher.Operators$MonoSubscriber.complete
  [27] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [28] reactor.core.publisher.MonoIgnoreThen.subscribe
  [29] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [30] reactor.core.publisher.Operators$ScalarSubscription.request
  [31] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [32] reactor.core.publisher.MonoJust.subscribe
  [33] reactor.core.publisher.MonoDefer.subscribe
  [34] reactor.core.publisher.MonoFlatMap.subscribe
  [35] reactor.core.publisher.MonoFlatMapMany.subscribe
  [36] reactor.core.publisher.FluxPeek.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.Flux.blockLast
  [39] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 1] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 2] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [16] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [17] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [18] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [19] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [21] reactor.core.publisher.Operators$ScalarSubscription.request
  [22] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [23] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [24] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [25] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [26] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [27] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoPeekFuseable.subscribe
  [30] reactor.core.publisher.MonoMapFuseable.subscribe
  [31] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [32] reactor.core.publisher.MonoDoFinally.subscribe
  [33] reactor.core.publisher.Mono.subscribe
  [34] reactor.core.publisher.Mono.subscribeWith
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.Mono.subscribe
  [38] io.rsocket.RSocketServer.handleRequestResponse
  [39] io.rsocket.RSocketServer.handleFrame
  [40] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [41] reactor.core.publisher.LambdaSubscriber.onNext
  [42] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [43] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [44] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [45] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [46] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [47] reactor.core.publisher.UnicastProcessor.drainRegular
  [48] reactor.core.publisher.UnicastProcessor.drain
  [49] reactor.core.publisher.UnicastProcessor.onNext
  [50] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [51] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [52] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [53] io.rsocket.internal.UnboundedProcessor.drainRegular
  [54] io.rsocket.internal.UnboundedProcessor.drain
  [55] io.rsocket.internal.UnboundedProcessor.onNext
  [56] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [57] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [58] reactor.core.publisher.MonoDefer.subscribe
  [59] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [60] reactor.core.publisher.MonoIgnoreThen.subscribe
  [61] reactor.core.publisher.MonoPeekFuseable.subscribe
  [62] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [63] reactor.core.publisher.Mono.subscribe
  [64] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [65] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [66] reactor.core.publisher.FluxRange$RangeSubscription.request
  [67] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [68] reactor.core.publisher.FluxRange.subscribe
  [69] reactor.core.publisher.FluxFlatMap.subscribe
  [70] reactor.core.publisher.Flux.subscribe
  [71] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [72] reactor.core.publisher.Operators$MonoSubscriber.complete
  [73] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [74] reactor.core.publisher.Operators$MonoSubscriber.complete
  [75] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [76] reactor.core.publisher.MonoIgnoreThen.subscribe
  [77] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [78] reactor.core.publisher.Operators$ScalarSubscription.request
  [79] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [80] reactor.core.publisher.MonoJust.subscribe
  [81] reactor.core.publisher.MonoDefer.subscribe
  [82] reactor.core.publisher.MonoFlatMap.subscribe
  [83] reactor.core.publisher.MonoFlatMapMany.subscribe
  [84] reactor.core.publisher.FluxPeek.subscribe
  [85] reactor.core.publisher.FluxPeek.subscribe
  [86] reactor.core.publisher.Flux.blockLast
  [87] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 1] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [ 2] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 3] reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit
  [ 4] reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext
  [ 5] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [ 6] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [ 7] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 8] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onNext
  [ 9] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [10] reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
  [11] reactor.core.publisher.Operators$MonoSubscriber.complete
  [12] reactor.core.publisher.MonoProcessor.subscribe
  [13] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [14] reactor.core.publisher.MonoPeek.subscribe
  [15] reactor.core.publisher.MonoDoFinally.subscribe
  [16] reactor.core.publisher.MonoDefer.subscribe
  [17] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [18] reactor.core.publisher.MonoIgnoreThen.subscribe
  [19] reactor.core.publisher.MonoPeekFuseable.subscribe
  [20] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [21] reactor.core.publisher.Mono.subscribe
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [24] reactor.core.publisher.FluxRange$RangeSubscription.request
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [26] reactor.core.publisher.FluxRange.subscribe
  [27] reactor.core.publisher.FluxFlatMap.subscribe
  [28] reactor.core.publisher.Flux.subscribe
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [34] reactor.core.publisher.MonoIgnoreThen.subscribe
  [35] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.MonoJust.subscribe
  [39] reactor.core.publisher.MonoDefer.subscribe
  [40] reactor.core.publisher.MonoFlatMap.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.Flux.blockLast
  [45] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.rsocket.RSocketClient$$Lambda$72.363988129.accept
  [ 1] reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete
  [ 2] reactor.core.publisher.Operators$MonoSubscriber.complete
  [ 3] reactor.core.publisher.MonoProcessor.subscribe
  [ 4] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 5] reactor.core.publisher.MonoPeek.subscribe
  [ 6] reactor.core.publisher.MonoDoFinally.subscribe
  [ 7] reactor.core.publisher.MonoDefer.subscribe
  [ 8] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 9] reactor.core.publisher.MonoIgnoreThen.subscribe
  [10] reactor.core.publisher.MonoPeekFuseable.subscribe
  [11] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [12] reactor.core.publisher.Mono.subscribe
  [13] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [14] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [15] reactor.core.publisher.FluxRange$RangeSubscription.request
  [16] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [17] reactor.core.publisher.FluxRange.subscribe
  [18] reactor.core.publisher.FluxFlatMap.subscribe
  [19] reactor.core.publisher.Flux.subscribe
  [20] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [21] reactor.core.publisher.Operators$MonoSubscriber.complete
  [22] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [23] reactor.core.publisher.Operators$MonoSubscriber.complete
  [24] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [25] reactor.core.publisher.MonoIgnoreThen.subscribe
  [26] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [27] reactor.core.publisher.Operators$ScalarSubscription.request
  [28] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [29] reactor.core.publisher.MonoJust.subscribe
  [30] reactor.core.publisher.MonoDefer.subscribe
  [31] reactor.core.publisher.MonoFlatMap.subscribe
  [32] reactor.core.publisher.MonoFlatMapMany.subscribe
  [33] reactor.core.publisher.FluxPeek.subscribe
  [34] reactor.core.publisher.FluxPeek.subscribe
  [35] reactor.core.publisher.Flux.blockLast
  [36] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.util.internal.PlatformDependent0.getInt
  [ 1] io.netty.buffer.AbstractDerivedByteBuf.<init>
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 4] io.netty.buffer.AbstractByteBuf.slice
  [ 5] io.rsocket.buffer.Tuple2ByteBuf.slice
  [ 6] io.netty.buffer.AbstractByteBuf.readSlice
  [ 7] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 8] io.rsocket.frame.RequestFlyweight.data
  [ 9] io.rsocket.frame.PayloadFrameFlyweight.data
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [12] io.rsocket.RSocketClient.handleFrame
  [13] io.rsocket.RSocketClient.handleIncomingFrames
  [14] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [15] reactor.core.publisher.LambdaSubscriber.onNext
  [16] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [19] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [20] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [21] reactor.core.publisher.UnicastProcessor.drainRegular
  [22] reactor.core.publisher.UnicastProcessor.drain
  [23] reactor.core.publisher.UnicastProcessor.onNext
  [24] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [25] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [27] io.rsocket.internal.UnboundedProcessor.drainRegular
  [28] io.rsocket.internal.UnboundedProcessor.drain
  [29] io.rsocket.internal.UnboundedProcessor.onNext
  [30] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [31] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [32] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [33] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [34] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [37] reactor.core.publisher.Operators$ScalarSubscription.request
  [38] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [39] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [40] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [41] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [42] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [43] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [44] reactor.core.publisher.MonoJust.subscribe
  [45] reactor.core.publisher.MonoPeekFuseable.subscribe
  [46] reactor.core.publisher.MonoMapFuseable.subscribe
  [47] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [48] reactor.core.publisher.MonoDoFinally.subscribe
  [49] reactor.core.publisher.Mono.subscribe
  [50] reactor.core.publisher.Mono.subscribeWith
  [51] reactor.core.publisher.Mono.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] reactor.core.publisher.Mono.subscribe
  [54] io.rsocket.RSocketServer.handleRequestResponse
  [55] io.rsocket.RSocketServer.handleFrame
  [56] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [57] reactor.core.publisher.LambdaSubscriber.onNext
  [58] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [59] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [60] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [61] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [62] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [63] reactor.core.publisher.UnicastProcessor.drainRegular
  [64] reactor.core.publisher.UnicastProcessor.drain
  [65] reactor.core.publisher.UnicastProcessor.onNext
  [66] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [67] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [68] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [69] io.rsocket.internal.UnboundedProcessor.drainRegular
  [70] io.rsocket.internal.UnboundedProcessor.drain
  [71] io.rsocket.internal.UnboundedProcessor.onNext
  [72] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [73] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [74] reactor.core.publisher.MonoDefer.subscribe
  [75] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [76] reactor.core.publisher.MonoIgnoreThen.subscribe
  [77] reactor.core.publisher.MonoPeekFuseable.subscribe
  [78] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [79] reactor.core.publisher.Mono.subscribe
  [80] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [81] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [82] reactor.core.publisher.FluxRange$RangeSubscription.request
  [83] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [84] reactor.core.publisher.FluxRange.subscribe
  [85] reactor.core.publisher.FluxFlatMap.subscribe
  [86] reactor.core.publisher.Flux.subscribe
  [87] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [88] reactor.core.publisher.Operators$MonoSubscriber.complete
  [89] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [90] reactor.core.publisher.Operators$MonoSubscriber.complete
  [91] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [92] reactor.core.publisher.MonoIgnoreThen.subscribe
  [93] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [94] reactor.core.publisher.Operators$ScalarSubscription.request
  [95] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [96] reactor.core.publisher.MonoJust.subscribe
  [97] reactor.core.publisher.MonoDefer.subscribe
  [98] reactor.core.publisher.MonoFlatMap.subscribe
  [99] reactor.core.publisher.MonoFlatMapMany.subscribe
  [100] reactor.core.publisher.FluxPeek.subscribe
  [101] reactor.core.publisher.FluxPeek.subscribe
  [102] reactor.core.publisher.Flux.blockLast
  [103] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] reactor.core.publisher.FluxFlatMap$FlatMapInner.currentContext
  [ 1] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.currentContext
  [ 2] reactor.core.publisher.InnerOperator.currentContext
  [ 3] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreInner.currentContext
  [ 4] reactor.core.publisher.MonoCreate$DefaultMonoSink.<init>
  [ 5] reactor.core.publisher.MonoCreate.subscribe
  [ 6] reactor.core.publisher.Mono.subscribe
  [ 7] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [ 8] reactor.core.publisher.MonoIgnoreThen.subscribe
  [ 9] reactor.core.publisher.MonoPeekFuseable.subscribe
  [10] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [11] reactor.core.publisher.Mono.subscribe
  [12] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [13] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [14] reactor.core.publisher.FluxRange$RangeSubscription.request
  [15] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [16] reactor.core.publisher.FluxRange.subscribe
  [17] reactor.core.publisher.FluxFlatMap.subscribe
  [18] reactor.core.publisher.Flux.subscribe
  [19] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [20] reactor.core.publisher.Operators$MonoSubscriber.complete
  [21] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [22] reactor.core.publisher.Operators$MonoSubscriber.complete
  [23] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [24] reactor.core.publisher.MonoIgnoreThen.subscribe
  [25] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [26] reactor.core.publisher.Operators$ScalarSubscription.request
  [27] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.MonoJust.subscribe
  [29] reactor.core.publisher.MonoDefer.subscribe
  [30] reactor.core.publisher.MonoFlatMap.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany.subscribe
  [32] reactor.core.publisher.FluxPeek.subscribe
  [33] reactor.core.publisher.FluxPeek.subscribe
  [34] reactor.core.publisher.Flux.blockLast
  [35] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.buffer.AbstractDerivedByteBuf.<init>
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 2] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.AbstractByteBuf.slice
  [ 4] io.rsocket.buffer.Tuple2ByteBuf.slice
  [ 5] io.netty.buffer.AbstractByteBuf.readSlice
  [ 6] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 7] io.rsocket.frame.RequestFlyweight.data
  [ 8] io.rsocket.frame.PayloadFrameFlyweight.data
  [ 9] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.RSocketClient.handleFrame
  [12] io.rsocket.RSocketClient.handleIncomingFrames
  [13] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.UnicastProcessor.drainRegular
  [21] reactor.core.publisher.UnicastProcessor.drain
  [22] reactor.core.publisher.UnicastProcessor.onNext
  [23] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [24] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [26] io.rsocket.internal.UnboundedProcessor.drainRegular
  [27] io.rsocket.internal.UnboundedProcessor.drain
  [28] io.rsocket.internal.UnboundedProcessor.onNext
  [29] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [30] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [31] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [32] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [33] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [34] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [35] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [38] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [39] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [40] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [41] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [42] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [43] reactor.core.publisher.MonoJust.subscribe
  [44] reactor.core.publisher.MonoPeekFuseable.subscribe
  [45] reactor.core.publisher.MonoMapFuseable.subscribe
  [46] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [47] reactor.core.publisher.MonoDoFinally.subscribe
  [48] reactor.core.publisher.Mono.subscribe
  [49] reactor.core.publisher.Mono.subscribeWith
  [50] reactor.core.publisher.Mono.subscribe
  [51] reactor.core.publisher.Mono.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] io.rsocket.RSocketServer.handleRequestResponse
  [54] io.rsocket.RSocketServer.handleFrame
  [55] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [56] reactor.core.publisher.LambdaSubscriber.onNext
  [57] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [58] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [59] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [60] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [61] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [62] reactor.core.publisher.UnicastProcessor.drainRegular
  [63] reactor.core.publisher.UnicastProcessor.drain
  [64] reactor.core.publisher.UnicastProcessor.onNext
  [65] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [66] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [67] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [68] io.rsocket.internal.UnboundedProcessor.drainRegular
  [69] io.rsocket.internal.UnboundedProcessor.drain
  [70] io.rsocket.internal.UnboundedProcessor.onNext
  [71] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [72] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [73] reactor.core.publisher.MonoDefer.subscribe
  [74] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [75] reactor.core.publisher.MonoIgnoreThen.subscribe
  [76] reactor.core.publisher.MonoPeekFuseable.subscribe
  [77] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [78] reactor.core.publisher.Mono.subscribe
  [79] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [80] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [81] reactor.core.publisher.FluxRange$RangeSubscription.request
  [82] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [83] reactor.core.publisher.FluxRange.subscribe
  [84] reactor.core.publisher.FluxFlatMap.subscribe
  [85] reactor.core.publisher.Flux.subscribe
  [86] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [87] reactor.core.publisher.Operators$MonoSubscriber.complete
  [88] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [89] reactor.core.publisher.Operators$MonoSubscriber.complete
  [90] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [91] reactor.core.publisher.MonoIgnoreThen.subscribe
  [92] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [93] reactor.core.publisher.Operators$ScalarSubscription.request
  [94] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [95] reactor.core.publisher.MonoJust.subscribe
  [96] reactor.core.publisher.MonoDefer.subscribe
  [97] reactor.core.publisher.MonoFlatMap.subscribe
  [98] reactor.core.publisher.MonoFlatMapMany.subscribe
  [99] reactor.core.publisher.FluxPeek.subscribe
  [100] reactor.core.publisher.FluxPeek.subscribe
  [101] reactor.core.publisher.Flux.blockLast
  [102] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.util.internal.PlatformDependent.getInt
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.internalRefCnt
  [ 2] io.netty.buffer.AbstractByteBuf.ensureAccessible
  [ 3] io.netty.buffer.AbstractByteBuf.checkReadableBytes0
  [ 4] io.netty.buffer.AbstractByteBuf.checkReadableBytes
  [ 5] io.netty.buffer.AbstractByteBuf.readSlice
  [ 6] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 7] io.rsocket.frame.RequestFlyweight.data
  [ 8] io.rsocket.frame.RequestResponseFrameFlyweight.data
  [ 9] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.RSocketServer.handleFrame
  [12] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [13] reactor.core.publisher.LambdaSubscriber.onNext
  [14] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [18] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [19] reactor.core.publisher.UnicastProcessor.drainRegular
  [20] reactor.core.publisher.UnicastProcessor.drain
  [21] reactor.core.publisher.UnicastProcessor.onNext
  [22] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [23] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [25] io.rsocket.internal.UnboundedProcessor.drainRegular
  [26] io.rsocket.internal.UnboundedProcessor.drain
  [27] io.rsocket.internal.UnboundedProcessor.onNext
  [28] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [29] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [30] reactor.core.publisher.MonoDefer.subscribe
  [31] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [32] reactor.core.publisher.MonoIgnoreThen.subscribe
  [33] reactor.core.publisher.MonoPeekFuseable.subscribe
  [34] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [37] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [38] reactor.core.publisher.FluxRange$RangeSubscription.request
  [39] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [40] reactor.core.publisher.FluxRange.subscribe
  [41] reactor.core.publisher.FluxFlatMap.subscribe
  [42] reactor.core.publisher.Flux.subscribe
  [43] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [44] reactor.core.publisher.Operators$MonoSubscriber.complete
  [45] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [46] reactor.core.publisher.Operators$MonoSubscriber.complete
  [47] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [48] reactor.core.publisher.MonoIgnoreThen.subscribe
  [49] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [50] reactor.core.publisher.Operators$ScalarSubscription.request
  [51] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [52] reactor.core.publisher.MonoJust.subscribe
  [53] reactor.core.publisher.MonoDefer.subscribe
  [54] reactor.core.publisher.MonoFlatMap.subscribe
  [55] reactor.core.publisher.MonoFlatMapMany.subscribe
  [56] reactor.core.publisher.FluxPeek.subscribe
  [57] reactor.core.publisher.FluxPeek.subscribe
  [58] reactor.core.publisher.Flux.blockLast
  [59] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.rsocket.buffer.Tuple2ByteBuf._getShort
  [ 1] io.netty.buffer.AbstractByteBuf.readShort
  [ 2] io.rsocket.frame.FrameHeaderFlyweight.frameType
  [ 3] io.rsocket.RSocketServer.handleFrame
  [ 4] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 5] reactor.core.publisher.LambdaSubscriber.onNext
  [ 6] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [ 7] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 8] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 9] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [10] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [11] reactor.core.publisher.UnicastProcessor.drainRegular
  [12] reactor.core.publisher.UnicastProcessor.drain
  [13] reactor.core.publisher.UnicastProcessor.onNext
  [14] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [15] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [16] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [17] io.rsocket.internal.UnboundedProcessor.drainRegular
  [18] io.rsocket.internal.UnboundedProcessor.drain
  [19] io.rsocket.internal.UnboundedProcessor.onNext
  [20] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [21] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [22] reactor.core.publisher.MonoDefer.subscribe
  [23] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [24] reactor.core.publisher.MonoIgnoreThen.subscribe
  [25] reactor.core.publisher.MonoPeekFuseable.subscribe
  [26] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [27] reactor.core.publisher.Mono.subscribe
  [28] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [29] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [30] reactor.core.publisher.FluxRange$RangeSubscription.request
  [31] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [32] reactor.core.publisher.FluxRange.subscribe
  [33] reactor.core.publisher.FluxFlatMap.subscribe
  [34] reactor.core.publisher.Flux.subscribe
  [35] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [36] reactor.core.publisher.Operators$MonoSubscriber.complete
  [37] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [38] reactor.core.publisher.Operators$MonoSubscriber.complete
  [39] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [40] reactor.core.publisher.MonoIgnoreThen.subscribe
  [41] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [42] reactor.core.publisher.Operators$ScalarSubscription.request
  [43] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [44] reactor.core.publisher.MonoJust.subscribe
  [45] reactor.core.publisher.MonoDefer.subscribe
  [46] reactor.core.publisher.MonoFlatMap.subscribe
  [47] reactor.core.publisher.MonoFlatMapMany.subscribe
  [48] reactor.core.publisher.FluxPeek.subscribe
  [49] reactor.core.publisher.FluxPeek.subscribe
  [50] reactor.core.publisher.Flux.blockLast
  [51] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.buffer.AbstractUnpooledSlicedByteBuf.checkSliceOutOfBounds
  [ 1] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 2] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.AbstractByteBuf.slice
  [ 4] io.rsocket.buffer.Tuple2ByteBuf.slice
  [ 5] io.netty.buffer.AbstractByteBuf.readSlice
  [ 6] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 7] io.rsocket.frame.RequestFlyweight.data
  [ 8] io.rsocket.frame.PayloadFrameFlyweight.data
  [ 9] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.RSocketClient.handleFrame
  [12] io.rsocket.RSocketClient.handleIncomingFrames
  [13] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.UnicastProcessor.drainRegular
  [21] reactor.core.publisher.UnicastProcessor.drain
  [22] reactor.core.publisher.UnicastProcessor.onNext
  [23] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [24] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [26] io.rsocket.internal.UnboundedProcessor.drainRegular
  [27] io.rsocket.internal.UnboundedProcessor.drain
  [28] io.rsocket.internal.UnboundedProcessor.onNext
  [29] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [30] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [31] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [32] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [33] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [34] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [35] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [38] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [39] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [40] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [41] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [42] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [43] reactor.core.publisher.MonoJust.subscribe
  [44] reactor.core.publisher.MonoPeekFuseable.subscribe
  [45] reactor.core.publisher.MonoMapFuseable.subscribe
  [46] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [47] reactor.core.publisher.MonoDoFinally.subscribe
  [48] reactor.core.publisher.Mono.subscribe
  [49] reactor.core.publisher.Mono.subscribeWith
  [50] reactor.core.publisher.Mono.subscribe
  [51] reactor.core.publisher.Mono.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] io.rsocket.RSocketServer.handleRequestResponse
  [54] io.rsocket.RSocketServer.handleFrame
  [55] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [56] reactor.core.publisher.LambdaSubscriber.onNext
  [57] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [58] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [59] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [60] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [61] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [62] reactor.core.publisher.UnicastProcessor.drainRegular
  [63] reactor.core.publisher.UnicastProcessor.drain
  [64] reactor.core.publisher.UnicastProcessor.onNext
  [65] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [66] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [67] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [68] io.rsocket.internal.UnboundedProcessor.drainRegular
  [69] io.rsocket.internal.UnboundedProcessor.drain
  [70] io.rsocket.internal.UnboundedProcessor.onNext
  [71] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [72] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [73] reactor.core.publisher.MonoDefer.subscribe
  [74] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [75] reactor.core.publisher.MonoIgnoreThen.subscribe
  [76] reactor.core.publisher.MonoPeekFuseable.subscribe
  [77] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [78] reactor.core.publisher.Mono.subscribe
  [79] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [80] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [81] reactor.core.publisher.FluxRange$RangeSubscription.request
  [82] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [83] reactor.core.publisher.FluxRange.subscribe
  [84] reactor.core.publisher.FluxFlatMap.subscribe
  [85] reactor.core.publisher.Flux.subscribe
  [86] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [87] reactor.core.publisher.Operators$MonoSubscriber.complete
  [88] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [89] reactor.core.publisher.Operators$MonoSubscriber.complete
  [90] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [91] reactor.core.publisher.MonoIgnoreThen.subscribe
  [92] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [93] reactor.core.publisher.Operators$ScalarSubscription.request
  [94] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [95] reactor.core.publisher.MonoJust.subscribe
  [96] reactor.core.publisher.MonoDefer.subscribe
  [97] reactor.core.publisher.MonoFlatMap.subscribe
  [98] reactor.core.publisher.MonoFlatMapMany.subscribe
  [99] reactor.core.publisher.FluxPeek.subscribe
  [100] reactor.core.publisher.FluxPeek.subscribe
  [101] reactor.core.publisher.Flux.blockLast
  [102] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.buffer.AbstractByteBuf.checkIndexBounds
  [ 1] io.netty.buffer.AbstractByteBuf.writerIndex
  [ 2] io.netty.buffer.AbstractUnpooledSlicedByteBuf.<init>
  [ 3] io.netty.buffer.UnpooledSlicedByteBuf.<init>
  [ 4] io.netty.buffer.AbstractByteBuf.slice
  [ 5] io.rsocket.buffer.Tuple2ByteBuf.slice
  [ 6] io.netty.buffer.AbstractByteBuf.readSlice
  [ 7] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 8] io.rsocket.frame.RequestFlyweight.data
  [ 9] io.rsocket.frame.PayloadFrameFlyweight.data
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [12] io.rsocket.RSocketClient.handleFrame
  [13] io.rsocket.RSocketClient.handleIncomingFrames
  [14] io.rsocket.RSocketClient$$Lambda$50.1771243284.accept
  [15] reactor.core.publisher.LambdaSubscriber.onNext
  [16] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [19] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [20] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [21] reactor.core.publisher.UnicastProcessor.drainRegular
  [22] reactor.core.publisher.UnicastProcessor.drain
  [23] reactor.core.publisher.UnicastProcessor.onNext
  [24] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [25] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [26] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [27] io.rsocket.internal.UnboundedProcessor.drainRegular
  [28] io.rsocket.internal.UnboundedProcessor.drain
  [29] io.rsocket.internal.UnboundedProcessor.onNext
  [30] io.rsocket.RSocketServer.lambda$handleRequestResponse$12
  [31] io.rsocket.RSocketServer$$Lambda$69.817348612.accept
  [32] reactor.core.publisher.LambdaMonoSubscriber.onNext
  [33] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
  [34] reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext
  [35] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
  [36] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [37] reactor.core.publisher.Operators$ScalarSubscription.request
  [38] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
  [39] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request
  [40] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set
  [41] reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe
  [42] reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe
  [43] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
  [44] reactor.core.publisher.MonoJust.subscribe
  [45] reactor.core.publisher.MonoPeekFuseable.subscribe
  [46] reactor.core.publisher.MonoMapFuseable.subscribe
  [47] reactor.core.publisher.MonoSwitchIfEmpty.subscribe
  [48] reactor.core.publisher.MonoDoFinally.subscribe
  [49] reactor.core.publisher.Mono.subscribe
  [50] reactor.core.publisher.Mono.subscribeWith
  [51] reactor.core.publisher.Mono.subscribe
  [52] reactor.core.publisher.Mono.subscribe
  [53] reactor.core.publisher.Mono.subscribe
  [54] io.rsocket.RSocketServer.handleRequestResponse
  [55] io.rsocket.RSocketServer.handleFrame
  [56] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [57] reactor.core.publisher.LambdaSubscriber.onNext
  [58] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [59] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [60] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [61] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [62] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [63] reactor.core.publisher.UnicastProcessor.drainRegular
  [64] reactor.core.publisher.UnicastProcessor.drain
  [65] reactor.core.publisher.UnicastProcessor.onNext
  [66] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [67] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [68] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [69] io.rsocket.internal.UnboundedProcessor.drainRegular
  [70] io.rsocket.internal.UnboundedProcessor.drain
  [71] io.rsocket.internal.UnboundedProcessor.onNext
  [72] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [73] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [74] reactor.core.publisher.MonoDefer.subscribe
  [75] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [76] reactor.core.publisher.MonoIgnoreThen.subscribe
  [77] reactor.core.publisher.MonoPeekFuseable.subscribe
  [78] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [79] reactor.core.publisher.Mono.subscribe
  [80] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [81] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [82] reactor.core.publisher.FluxRange$RangeSubscription.request
  [83] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [84] reactor.core.publisher.FluxRange.subscribe
  [85] reactor.core.publisher.FluxFlatMap.subscribe
  [86] reactor.core.publisher.Flux.subscribe
  [87] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [88] reactor.core.publisher.Operators$MonoSubscriber.complete
  [89] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [90] reactor.core.publisher.Operators$MonoSubscriber.complete
  [91] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [92] reactor.core.publisher.MonoIgnoreThen.subscribe
  [93] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [94] reactor.core.publisher.Operators$ScalarSubscription.request
  [95] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [96] reactor.core.publisher.MonoJust.subscribe
  [97] reactor.core.publisher.MonoDefer.subscribe
  [98] reactor.core.publisher.MonoFlatMap.subscribe
  [99] reactor.core.publisher.MonoFlatMapMany.subscribe
  [100] reactor.core.publisher.FluxPeek.subscribe
  [101] reactor.core.publisher.FluxPeek.subscribe
  [102] reactor.core.publisher.Flux.blockLast
  [103] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.util.internal.PlatformDependent.getInt
  [ 1] io.netty.buffer.AbstractReferenceCountedByteBuf.internalRefCnt
  [ 2] io.netty.buffer.AbstractByteBuf.ensureAccessible
  [ 3] io.netty.buffer.AbstractByteBuf.checkReadableBytes0
  [ 4] io.netty.buffer.AbstractByteBuf.checkReadableBytes
  [ 5] io.netty.buffer.AbstractByteBuf.readSlice
  [ 6] io.rsocket.frame.DataAndMetadataFlyweight.metadataWithoutMarking
  [ 7] io.rsocket.frame.RequestFlyweight.metadata
  [ 8] io.rsocket.frame.RequestResponseFrameFlyweight.metadata
  [ 9] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.RSocketServer.handleFrame
  [12] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [13] reactor.core.publisher.LambdaSubscriber.onNext
  [14] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [15] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [18] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [19] reactor.core.publisher.UnicastProcessor.drainRegular
  [20] reactor.core.publisher.UnicastProcessor.drain
  [21] reactor.core.publisher.UnicastProcessor.onNext
  [22] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [23] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [24] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [25] io.rsocket.internal.UnboundedProcessor.drainRegular
  [26] io.rsocket.internal.UnboundedProcessor.drain
  [27] io.rsocket.internal.UnboundedProcessor.onNext
  [28] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [29] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [30] reactor.core.publisher.MonoDefer.subscribe
  [31] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [32] reactor.core.publisher.MonoIgnoreThen.subscribe
  [33] reactor.core.publisher.MonoPeekFuseable.subscribe
  [34] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [35] reactor.core.publisher.Mono.subscribe
  [36] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [37] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [38] reactor.core.publisher.FluxRange$RangeSubscription.request
  [39] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [40] reactor.core.publisher.FluxRange.subscribe
  [41] reactor.core.publisher.FluxFlatMap.subscribe
  [42] reactor.core.publisher.Flux.subscribe
  [43] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [44] reactor.core.publisher.Operators$MonoSubscriber.complete
  [45] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [46] reactor.core.publisher.Operators$MonoSubscriber.complete
  [47] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [48] reactor.core.publisher.MonoIgnoreThen.subscribe
  [49] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [50] reactor.core.publisher.Operators$ScalarSubscription.request
  [51] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [52] reactor.core.publisher.MonoJust.subscribe
  [53] reactor.core.publisher.MonoDefer.subscribe
  [54] reactor.core.publisher.MonoFlatMap.subscribe
  [55] reactor.core.publisher.MonoFlatMapMany.subscribe
  [56] reactor.core.publisher.FluxPeek.subscribe
  [57] reactor.core.publisher.FluxPeek.subscribe
  [58] reactor.core.publisher.Flux.blockLast
  [59] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.util.internal.PlatformDependent0.getInt
  [ 1] io.netty.util.internal.PlatformDependent.getInt
  [ 2] io.netty.buffer.AbstractReferenceCountedByteBuf.internalRefCnt
  [ 3] io.netty.buffer.AbstractByteBuf.ensureAccessible
  [ 4] io.netty.buffer.AbstractByteBuf.checkReadableBytes0
  [ 5] io.netty.buffer.AbstractByteBuf.checkReadableBytes
  [ 6] io.netty.buffer.AbstractByteBuf.readSlice
  [ 7] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 8] io.rsocket.frame.RequestFlyweight.data
  [ 9] io.rsocket.frame.RequestResponseFrameFlyweight.data
  [10] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [11] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [12] io.rsocket.RSocketServer.handleFrame
  [13] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [14] reactor.core.publisher.LambdaSubscriber.onNext
  [15] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [16] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [17] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [18] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [19] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [20] reactor.core.publisher.UnicastProcessor.drainRegular
  [21] reactor.core.publisher.UnicastProcessor.drain
  [22] reactor.core.publisher.UnicastProcessor.onNext
  [23] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [24] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [25] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [26] io.rsocket.internal.UnboundedProcessor.drainRegular
  [27] io.rsocket.internal.UnboundedProcessor.drain
  [28] io.rsocket.internal.UnboundedProcessor.onNext
  [29] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [30] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [31] reactor.core.publisher.MonoDefer.subscribe
  [32] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [33] reactor.core.publisher.MonoIgnoreThen.subscribe
  [34] reactor.core.publisher.MonoPeekFuseable.subscribe
  [35] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [36] reactor.core.publisher.Mono.subscribe
  [37] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [38] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [39] reactor.core.publisher.FluxRange$RangeSubscription.request
  [40] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [41] reactor.core.publisher.FluxRange.subscribe
  [42] reactor.core.publisher.FluxFlatMap.subscribe
  [43] reactor.core.publisher.Flux.subscribe
  [44] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [45] reactor.core.publisher.Operators$MonoSubscriber.complete
  [46] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [47] reactor.core.publisher.Operators$MonoSubscriber.complete
  [48] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [49] reactor.core.publisher.MonoIgnoreThen.subscribe
  [50] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [51] reactor.core.publisher.Operators$ScalarSubscription.request
  [52] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [53] reactor.core.publisher.MonoJust.subscribe
  [54] reactor.core.publisher.MonoDefer.subscribe
  [55] reactor.core.publisher.MonoFlatMap.subscribe
  [56] reactor.core.publisher.MonoFlatMapMany.subscribe
  [57] reactor.core.publisher.FluxPeek.subscribe
  [58] reactor.core.publisher.FluxPeek.subscribe
  [59] reactor.core.publisher.Flux.blockLast
  [60] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.netty.buffer.AbstractByteBuf.resetReaderIndex
  [ 1] io.rsocket.frame.FrameHeaderFlyweight.streamId
  [ 2] io.rsocket.internal.ClientServerInputMultiplexer.lambda$new$0
  [ 3] io.rsocket.internal.ClientServerInputMultiplexer$$Lambda$38.556529265.apply
  [ 4] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 5] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 6] reactor.core.publisher.UnicastProcessor.drain
  [ 7] reactor.core.publisher.UnicastProcessor.onNext
  [ 8] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [ 9] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [10] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [11] io.rsocket.internal.UnboundedProcessor.drainRegular
  [12] io.rsocket.internal.UnboundedProcessor.drain
  [13] io.rsocket.internal.UnboundedProcessor.onNext
  [14] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [15] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [16] reactor.core.publisher.MonoDefer.subscribe
  [17] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [18] reactor.core.publisher.MonoIgnoreThen.subscribe
  [19] reactor.core.publisher.MonoPeekFuseable.subscribe
  [20] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [21] reactor.core.publisher.Mono.subscribe
  [22] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [23] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [24] reactor.core.publisher.FluxRange$RangeSubscription.request
  [25] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [26] reactor.core.publisher.FluxRange.subscribe
  [27] reactor.core.publisher.FluxFlatMap.subscribe
  [28] reactor.core.publisher.Flux.subscribe
  [29] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [30] reactor.core.publisher.Operators$MonoSubscriber.complete
  [31] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [34] reactor.core.publisher.MonoIgnoreThen.subscribe
  [35] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [36] reactor.core.publisher.Operators$ScalarSubscription.request
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [38] reactor.core.publisher.MonoJust.subscribe
  [39] reactor.core.publisher.MonoDefer.subscribe
  [40] reactor.core.publisher.MonoFlatMap.subscribe
  [41] reactor.core.publisher.MonoFlatMapMany.subscribe
  [42] reactor.core.publisher.FluxPeek.subscribe
  [43] reactor.core.publisher.FluxPeek.subscribe
  [44] reactor.core.publisher.Flux.blockLast
  [45] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] java.util.concurrent.atomic.AtomicReferenceArray.checkedByteOffset
  [ 1] java.util.concurrent.atomic.AtomicReferenceArray.lazySet
  [ 2] reactor.util.concurrent.SpscLinkedArrayQueue.poll
  [ 3] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [ 4] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [ 5] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [ 6] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [ 7] reactor.core.publisher.UnicastProcessor.drainRegular
  [ 8] reactor.core.publisher.UnicastProcessor.drain
  [ 9] reactor.core.publisher.UnicastProcessor.onNext
  [10] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [11] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [12] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [13] io.rsocket.internal.UnboundedProcessor.drainRegular
  [14] io.rsocket.internal.UnboundedProcessor.drain
  [15] io.rsocket.internal.UnboundedProcessor.onNext
  [16] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [17] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [18] reactor.core.publisher.MonoDefer.subscribe
  [19] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [20] reactor.core.publisher.MonoIgnoreThen.subscribe
  [21] reactor.core.publisher.MonoPeekFuseable.subscribe
  [22] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [23] reactor.core.publisher.Mono.subscribe
  [24] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [25] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [26] reactor.core.publisher.FluxRange$RangeSubscription.request
  [27] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [28] reactor.core.publisher.FluxRange.subscribe
  [29] reactor.core.publisher.FluxFlatMap.subscribe
  [30] reactor.core.publisher.Flux.subscribe
  [31] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [32] reactor.core.publisher.Operators$MonoSubscriber.complete
  [33] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [34] reactor.core.publisher.Operators$MonoSubscriber.complete
  [35] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [36] reactor.core.publisher.MonoIgnoreThen.subscribe
  [37] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [38] reactor.core.publisher.Operators$ScalarSubscription.request
  [39] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [40] reactor.core.publisher.MonoJust.subscribe
  [41] reactor.core.publisher.MonoDefer.subscribe
  [42] reactor.core.publisher.MonoFlatMap.subscribe
  [43] reactor.core.publisher.MonoFlatMapMany.subscribe
  [44] reactor.core.publisher.FluxPeek.subscribe
  [45] reactor.core.publisher.FluxPeek.subscribe
  [46] reactor.core.publisher.Flux.blockLast
  [47] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] io.rsocket.buffer.Tuple3ByteBuf.slice
  [ 1] io.netty.buffer.AbstractByteBuf.readSlice
  [ 2] io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
  [ 3] io.rsocket.frame.RequestFlyweight.data
  [ 4] io.rsocket.frame.RequestResponseFrameFlyweight.data
  [ 5] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 6] io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
  [ 7] io.rsocket.RSocketServer.handleFrame
  [ 8] io.rsocket.RSocketServer$$Lambda$54.341878976.accept
  [ 9] reactor.core.publisher.LambdaSubscriber.onNext
  [10] reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
  [11] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drainRegular
  [12] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.drain
  [13] reactor.core.publisher.FluxGroupBy$UnicastGroupedFlux.onNext
  [14] reactor.core.publisher.FluxGroupBy$GroupByMain.onNext
  [15] reactor.core.publisher.UnicastProcessor.drainRegular
  [16] reactor.core.publisher.UnicastProcessor.drain
  [17] reactor.core.publisher.UnicastProcessor.onNext
  [18] io.rsocket.transport.local.LocalDuplexConnection.lambda$send$0
  [19] io.rsocket.transport.local.LocalDuplexConnection$$Lambda$47.433287555.accept
  [20] reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
  [21] io.rsocket.internal.UnboundedProcessor.drainRegular
  [22] io.rsocket.internal.UnboundedProcessor.drain
  [23] io.rsocket.internal.UnboundedProcessor.onNext
  [24] io.rsocket.RSocketClient.lambda$handleRequestResponse$12
  [25] io.rsocket.RSocketClient$$Lambda$62.1571967156.get
  [26] reactor.core.publisher.MonoDefer.subscribe
  [27] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [28] reactor.core.publisher.MonoIgnoreThen.subscribe
  [29] reactor.core.publisher.MonoPeekFuseable.subscribe
  [30] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [31] reactor.core.publisher.Mono.subscribe
  [32] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [33] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [34] reactor.core.publisher.FluxRange$RangeSubscription.request
  [35] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [36] reactor.core.publisher.FluxRange.subscribe
  [37] reactor.core.publisher.FluxFlatMap.subscribe
  [38] reactor.core.publisher.Flux.subscribe
  [39] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [40] reactor.core.publisher.Operators$MonoSubscriber.complete
  [41] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [42] reactor.core.publisher.Operators$MonoSubscriber.complete
  [43] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [44] reactor.core.publisher.MonoIgnoreThen.subscribe
  [45] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [46] reactor.core.publisher.Operators$ScalarSubscription.request
  [47] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [48] reactor.core.publisher.MonoJust.subscribe
  [49] reactor.core.publisher.MonoDefer.subscribe
  [50] reactor.core.publisher.MonoFlatMap.subscribe
  [51] reactor.core.publisher.MonoFlatMapMany.subscribe
  [52] reactor.core.publisher.FluxPeek.subscribe
  [53] reactor.core.publisher.FluxPeek.subscribe
  [54] reactor.core.publisher.Flux.blockLast
  [55] io.rsocket.transport.local.LocalPingPong.main

--- 20000000 ns (0.07%), 2 samples
  [ 0] reactor.core.publisher.FluxPeek$PeekSubscriber.request
  [ 1] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
  [ 2] java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet
  [ 3] reactor.core.publisher.Operators.setOnce
  [ 4] reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onSubscribe
  [ 5] reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
  [ 6] reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe
  [ 7] reactor.core.publisher.MonoProcessor.subscribe
  [ 8] io.rsocket.internal.UnicastMonoProcessor.subscribe
  [ 9] reactor.core.publisher.MonoPeek.subscribe
  [10] reactor.core.publisher.MonoDoFinally.subscribe
  [11] reactor.core.publisher.MonoDefer.subscribe
  [12] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [13] reactor.core.publisher.MonoIgnoreThen.subscribe
  [14] reactor.core.publisher.MonoPeekFuseable.subscribe
  [15] reactor.core.publisher.MonoDoFinallyFuseable.subscribe
  [16] reactor.core.publisher.Mono.subscribe
  [17] reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
  [18] reactor.core.publisher.FluxRange$RangeSubscription.slowPath
  [19] reactor.core.publisher.FluxRange$RangeSubscription.request
  [20] reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe
  [21] reactor.core.publisher.FluxRange.subscribe
  [22] reactor.core.publisher.FluxFlatMap.subscribe
  [23] reactor.core.publisher.Flux.subscribe
  [24] reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext
  [25] reactor.core.publisher.Operators$MonoSubscriber.complete
  [26] reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext
  [27] reactor.core.publisher.Operators$MonoSubscriber.complete
  [28] reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
  [29] reactor.core.publisher.MonoIgnoreThen.subscribe
  [30] reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext
  [31] reactor.core.publisher.Operators$ScalarSubscription.request
  [32] reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe
  [33] reactor.core.publisher.MonoJust.subscribe
  [34] reactor.core.publisher.MonoDefer.subscribe
  [35] reactor.core.publisher.MonoFlatMap.subscribe
  [36] reactor.core.publisher.MonoFlatMapMany.subscribe
  [37] reactor.core.publisher.FluxPeek.subscribe
  [38] reactor.core.publisher.FluxPeek.subscribe
  [39] reactor.core.publisher.Flux.blockLast
  [40] io.rsocket.transport.local.LocalPingPong.main

          ns  percent  samples  top
  ----------  -------  -------  ---
  1060000000    3.96%      106  reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onSubscribe
   860000000    3.21%       86  io.netty.buffer.AbstractReferenceCountedByteBuf.release0
   770000000    2.88%       77  reactor.core.publisher.MonoJust.subscribe
   740000000    2.77%       74  io.rsocket.internal.UnboundedProcessor.drainRegular
   690000000    2.58%       69  java.lang.Throwable.fillInStackTrace
   670000000    2.50%       67  io.netty.util.internal.InternalThreadLocalMap.slowGet
   580000000    2.17%       58  reactor.core.publisher.UnicastProcessor.drainRegular
   570000000    2.13%       57  io.rsocket.buffer.Tuple2ByteBuf._getShort
   570000000    2.13%       57  org.HdrHistogram.AbstractHistogram.updateMinNonZeroValue
   560000000    2.09%       56  java.util.concurrent.atomic.AtomicReferenceArray.checkedByteOffset
   460000000    1.72%       46  io.netty.buffer.AbstractByteBuf.<init>
   420000000    1.57%       42  io.netty.buffer.AbstractReferenceCountedByteBuf.retain0
   410000000    1.53%       41  io.rsocket.buffer.Tuple3ByteBuf._getByte
   410000000    1.53%       41  reactor.core.publisher.Mono.subscribe
   410000000    1.53%       41  reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onNext
   390000000    1.46%       39  java.lang.Integer.valueOf
   390000000    1.46%       39  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.accessCheck
   360000000    1.35%       36  io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue.offer
   350000000    1.31%       35  java.lang.Number.<init>
   320000000    1.20%       32  reactor.core.publisher.Mono.onAssembly
   310000000    1.16%       31  io.netty.buffer.PoolArena.allocate
   310000000    1.16%       31  reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onComplete
   290000000    1.08%       29  reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.request
   280000000    1.05%       28  reactor.core.publisher.FluxPeek$PeekSubscriber.onNext
   280000000    1.05%       28  io.rsocket.buffer.Tuple3ByteBuf._getShort
   270000000    1.01%       27  reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop
   270000000    1.01%       27  reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.ignoreDone
   260000000    0.97%       26  reactor.core.publisher.MonoProcessor.onNext
   250000000    0.93%       25  io.netty.buffer.WrappedByteBuf.readerIndex
   240000000    0.90%       24  io.netty.buffer.AbstractByteBuf.readInt
   230000000    0.86%       23  io.netty.buffer.AbstractByteBuf.slice
   230000000    0.86%       23  reactor.core.publisher.Operators$MultiSubscriptionSubscriber.request
   230000000    0.86%       23  reactor.util.concurrent.SpscLinkedArrayQueue.poll
   220000000    0.82%       22  io.netty.buffer.PoolThreadCache.cache
   200000000    0.75%       20  reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally
   180000000    0.67%       18  java.util.Collections$SynchronizedMap.remove
   180000000    0.67%       18  io.netty.buffer.PooledUnsafeDirectByteBuf.addr
   180000000    0.67%       18  reactor.core.publisher.FluxFlatMap$FlatMapMain.innerComplete
   170000000    0.64%       17  io.netty.buffer.AbstractByteBufAllocator.directBuffer
   170000000    0.64%       17  io.rsocket.RSocketClient.handleFrame
   170000000    0.64%       17  reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain
   170000000    0.64%       17  itable stub
   160000000    0.60%       16  io.rsocket.frame.PayloadFrameFlyweight.encodeNextComplete
   160000000    0.60%       16  io.netty.buffer.AbstractByteBuf.writerIndex
   160000000    0.60%       16  io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate
   160000000    0.60%       16  java.util.Collections$SynchronizedMap.put
   160000000    0.60%       16  java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater.accessCheck
   150000000    0.56%       15  reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request
   140000000    0.52%       14  io.netty.util.internal.PlatformDependent.getInt
   140000000    0.52%       14  reactor.core.publisher.FlatMapTracker.remove
   130000000    0.49%       13  reactor.core.publisher.FluxPeek$PeekSubscriber.request
   130000000    0.49%       13  io.rsocket.test.PingClient$$Lambda$63.932285561.accept
   120000000    0.45%       12  reactor.core.publisher.FluxRange$RangeSubscription.request
   110000000    0.41%       11  io.netty.util.internal.logging.LocationAwareSlf4JLogger.isErrorEnabled
   110000000    0.41%       11  reactor.core.publisher.Operators$ScalarSubscription.request
   110000000    0.41%       11  reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext
   110000000    0.41%       11  io.netty.util.internal.InternalThreadLocalMap.get
   100000000    0.37%       10  io.netty.buffer.AbstractReferenceCountedByteBuf.internalRefCnt
   100000000    0.37%       10  io.netty.buffer.UnpooledHeapByteBuf.capacity
   100000000    0.37%       10  io.netty.buffer.AbstractReferenceCountedByteBuf.<init>
   100000000    0.37%       10  reactor.core.publisher.InnerOperator.currentContext
   100000000    0.37%       10  io.rsocket.buffer.Tuple2ByteBuf._getInt
   100000000    0.37%       10  reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext
    90000000    0.34%        9  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.getAndAdd
    90000000    0.34%        9  java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck
    90000000    0.34%        9  io.netty.util.internal.PlatformDependent0.getInt
    80000000    0.30%        8  reactor.core.publisher.MonoCreate$DefaultMonoSink.disposeResource
    80000000    0.30%        8  io.rsocket.frame.DataAndMetadataFlyweight.metadataWithoutMarking
    80000000    0.30%        8  reactor.core.publisher.FlatMapTracker.add
    80000000    0.30%        8  java.util.Collections$SynchronizedMap.get
    80000000    0.30%        8  io.netty.util.AbstractReferenceCounted.retain0
    80000000    0.30%        8  io.netty.buffer.AbstractByteBuf.ensureAccessible
    70000000    0.26%        7  io.rsocket.buffer.Tuple2ByteBuf.slice
    70000000    0.26%        7  io.netty.util.internal.PlatformDependent0.directBufferAddress
    70000000    0.26%        7  io.rsocket.RSocketServer.handleFrame
    60000000    0.22%        6  io.rsocket.buffer.Tuple3ByteBuf._getInt
    60000000    0.22%        6  io.netty.buffer.PooledUnsafeDirectByteBuf._setByte
    60000000    0.22%        6  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.set
    60000000    0.22%        6  io.rsocket.frame.FrameHeaderFlyweight.hasMetadata
    60000000    0.22%        6  io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
    60000000    0.22%        6  java.lang.ThreadLocal$ThreadLocalMap.getEntry
    50000000    0.19%        5  io.netty.buffer.WrappedByteBuf.writeInt
    50000000    0.19%        5  io.rsocket.frame.FrameHeaderFlyweight.flags
    50000000    0.19%        5  java.util.concurrent.atomic.AtomicReferenceArray.byteOffset
    50000000    0.19%        5  io.netty.buffer.UnpooledSlicedByteBuf.capacity
    50000000    0.19%        5  io.rsocket.internal.UnboundedProcessor.onNext
    50000000    0.19%        5  reactor.core.publisher.UnicastProcessor.request
    50000000    0.19%        5  io.netty.util.ReferenceCountUtil.release
    50000000    0.19%        5  io.rsocket.RSocketClient.lambda$handleRequestResponse$12
    50000000    0.19%        5  io.netty.buffer.AbstractByteBuf.checkIndexBounds
    50000000    0.19%        5  reactor.core.publisher.MonoIgnoreThen.subscribe
    50000000    0.19%        5  io.netty.util.collection.IntObjectHashMap.put
    40000000    0.15%        4  reactor.core.publisher.MonoCreate.subscribe
    40000000    0.15%        4  io.netty.buffer.AbstractByteBuf.readSlice
    40000000    0.15%        4  vtable stub
    40000000    0.15%        4  reactor.core.publisher.LambdaMonoSubscriber.onSubscribe
    40000000    0.15%        4  io.netty.buffer.WrappedByteBuf.getInt
    40000000    0.15%        4  io.rsocket.frame.DataAndMetadataFlyweight.dataWithoutMarking
    40000000    0.15%        4  io.rsocket.buffer.Tuple3ByteBuf.slice
    40000000    0.15%        4  java.lang.ThreadLocal$ThreadLocalMap.access$000
    40000000    0.15%        4  reactor.core.publisher.Operators.addCap
    30000000    0.11%        3  io.netty.buffer.AbstractByteBuf.ensureWritable0
    30000000    0.11%        3  io.netty.util.internal.PlatformDependent.putInt
    30000000    0.11%        3  io.netty.buffer.AbstractByteBufAllocator.toLeakAwareBuffer
    30000000    0.11%        3  io.rsocket.frame.RequestFlyweight.encode
    30000000    0.11%        3  java.lang.Object.hashCode
    30000000    0.11%        3  io.netty.buffer.AbstractByteBuf.resetReaderIndex
    30000000    0.11%        3  io.netty.util.AbstractReferenceCounted.release
    30000000    0.11%        3  io.netty.buffer.UnsafeByteBufUtil.setInt
    30000000    0.11%        3  reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.currentContext
    30000000    0.11%        3  io.rsocket.frame.DataAndMetadataFlyweight.decodeLength
    30000000    0.11%        3  reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onNext
    20000000    0.07%        2  io.rsocket.RSocketClient.handleIncomingFrames
    20000000    0.07%        2  io.rsocket.RSocketServer$$Lambda$54.341878976.accept
    20000000    0.07%        2  reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.currentContext
    20000000    0.07%        2  java.lang.Object.<init>
    20000000    0.07%        2  io.netty.buffer.AbstractUnpooledSlicedByteBuf.checkSliceOutOfBounds
    20000000    0.07%        2  io.rsocket.RSocketClient$$Lambda$72.363988129.accept
    20000000    0.07%        2  ch.qos.logback.classic.LoggerContext.getTurboFilterChainDecision_0_3OrMore
    20000000    0.07%        2  reactor.core.publisher.FluxRange$RangeSubscription.slowPath
    20000000    0.07%        2  io.rsocket.buffer.Tuple3ByteBuf.deallocate
    20000000    0.07%        2  reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe
    20000000    0.07%        2  reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onSubscribe
    20000000    0.07%        2  itable stub
    20000000    0.07%        2  reactor.core.publisher.FluxFlatMap$FlatMapInner.currentContext
    20000000    0.07%        2  reactor.core.publisher.Operators$MonoSubscriber.complete
    20000000    0.07%        2  io.netty.buffer.AbstractDerivedByteBuf.<init>
    20000000    0.07%        2  reactor.core.publisher.FluxPeek$PeekSubscriber.currentContext
    20000000    0.07%        2  io.netty.buffer.PooledByteBufAllocator.newDirectBuffer
    20000000    0.07%        2  io.netty.util.collection.IntObjectHashMap.put
    20000000    0.07%        2  io.netty.util.internal.MathUtil.isOutOfBounds
    20000000    0.07%        2  reactor.core.publisher.BlockingLastSubscriber.onNext
    10000000    0.04%        1  io.netty.buffer.AbstractByteBuf.writableBytes
    10000000    0.04%        1  java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater.lazySet
    10000000    0.04%        1  java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.decrementAndGet
    10000000    0.04%        1  io.netty.buffer.PoolThreadCache$MemoryRegionCache.free
    10000000    0.04%        1  io.netty.buffer.WrappedByteBuf.release
    10000000    0.04%        1  io.netty.buffer.AbstractDerivedByteBuf.release
    10000000    0.04%        1  reactor.core.publisher.LambdaMonoSubscriber.onComplete
    10000000    0.04%        1  io.netty.buffer.UnsafeByteBufUtil.setByte
    10000000    0.04%        1  register_finalizer Runtime1 stub
    10000000    0.04%        1  io.rsocket.frame.decoder.ZeroCopyPayloadDecoder.apply
    10000000    0.04%        1  java.lang.ThreadLocal.get
    10000000    0.04%        1  reactor.core.publisher.FluxFlatMap$FlatMapInner.onComplete
    10000000    0.04%        1  io.netty.util.collection.IntObjectHashMap.objectToKey
    10000000    0.04%        1  java.lang.Throwable.fillInStackTrace
    10000000    0.04%        1  io.netty.buffer.SimpleLeakAwareByteBuf.release
    10000000    0.04%        1  io.netty.buffer.WrappedByteBuf.writeByte
    10000000    0.04%        1  reactor.core.CoreSubscriber.currentContext
    10000000    0.04%        1  reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext
    10000000    0.04%        1  io.rsocket.frame.FrameHeaderFlyweight.encode
    10000000    0.04%        1  io.rsocket.test.PingClient$$Lambda$64.591391158.accept
    10000000    0.04%        1  reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext
    10000000    0.04%        1  io.netty.buffer.SimpleLeakAwareByteBuf.<init>
    10000000    0.04%        1  io.netty.buffer.PoolArena.allocate
    10000000    0.04%        1  vtable stub
    10000000    0.04%        1  reactor.core.publisher.LambdaMonoSubscriber.onNext
    10000000    0.04%        1  io.rsocket.test.PingHandler$1.requestResponse
    10000000    0.04%        1  io.netty.buffer.AbstractByteBuf.checkReadableBytes0
    10000000    0.04%        1  io.rsocket.frame.FrameHeaderFlyweight.frameType
    10000000    0.04%        1  reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext
    10000000    0.04%        1  io.netty.util.ResourceLeakDetector$DefaultResourceLeak.<init>
    10000000    0.04%        1  io.netty.buffer.AbstractReferenceCountedByteBuf.release
    10000000    0.04%        1  reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner.onComplete
    10000000    0.04%        1  io.netty.buffer.WrappedByteBuf.getByte
    10000000    0.04%        1  io.netty.buffer.ByteBuf.<init>
    10000000    0.04%        1  io.netty.util.internal.PlatformDependent.putShort
